<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="code-coverage-report"><sessioninfo id="MAC-L9001-7358a80b" start="1724924352631" dump="1724924354532"/><sessioninfo id="MAC-L9001-31337131" start="1724924354091" dump="1724924355280"/><sessioninfo id="MAC-L9001-c187a440" start="1724924354078" dump="1724924357088"/><sessioninfo id="MAC-L9001-d20ad046" start="1724924357381" dump="1724924358699"/><sessioninfo id="MAC-L9001-331b6253" start="1724924353926" dump="1724924359024"/><sessioninfo id="MAC-L9001-210e1fca" start="1724924355939" dump="1724924359028"/><sessioninfo id="MAC-L9001-9df4f6a7" start="1724924353446" dump="1724924359649"/><sessioninfo id="MAC-L9001-b845c477" start="1724924353622" dump="1724924361438"/><sessioninfo id="MAC-L9001-1550e157" start="1724924356776" dump="1724924363416"/><sessioninfo id="MAC-L9001-4233f6d2" start="1724924356799" dump="1724924363507"/><sessioninfo id="MAC-L9001-12ac5277" start="1724924356797" dump="1724924363640"/><sessioninfo id="MAC-L9001-ca00bb8e" start="1724924357015" dump="1724924363781"/><sessioninfo id="MAC-L9001-8db6343a" start="1724924364638" dump="1724924368056"/><sessioninfo id="MAC-L9001-ecd6050e" start="1724924353945" dump="1724924368114"/><sessioninfo id="MAC-L9001-fe80b24c" start="1724924364430" dump="1724924368162"/><sessioninfo id="MAC-L9001-953c341c" start="1724924364009" dump="1724924368306"/><sessioninfo id="MAC-L9001-1d9a159c" start="1724924354178" dump="1724924369499"/><sessioninfo id="MAC-L9001-a6388ab0" start="1724924364519" dump="1724924370555"/><sessioninfo id="MAC-L9001-de4c06e3" start="1724924385199" dump="1724924389052"/><sessioninfo id="MAC-L9001-314b247d" start="1724924385623" dump="1724924389120"/><sessioninfo id="MAC-L9001-21ccaf9e" start="1724924385718" dump="1724924389249"/><sessioninfo id="MAC-L9001-be97d4db" start="1724924385210" dump="1724924390969"/><sessioninfo id="MAC-L9001-8349b6f2" start="1724924387810" dump="1724924394945"/><sessioninfo id="MAC-L9001-7b2ebe32" start="1724924387678" dump="1724924395346"/><sessioninfo id="MAC-L9001-7f11492b" start="1724924385620" dump="1724924398330"/><sessioninfo id="MAC-L9001-78f008a9" start="1724924390189" dump="1724924398662"/><sessioninfo id="MAC-L9001-d01c747b" start="1724924395288" dump="1724924400841"/><sessioninfo id="MAC-L9001-a9c28c4a" start="1724924395896" dump="1724924401755"/><sessioninfo id="MAC-L9001-85872acd" start="1724924385251" dump="1724924402521"/><sessioninfo id="MAC-L9001-229fe9a5" start="1724924385770" dump="1724924403007"/><sessioninfo id="MAC-L9001-1f1d4e43" start="1724924403083" dump="1724924404635"/><sessioninfo id="MAC-L9001-605d3bbf" start="1724924389409" dump="1724924405957"/><sessioninfo id="MAC-L9001-4bddc8c7" start="1724924389399" dump="1724924406585"/><sessioninfo id="MAC-L9001-bed220c3" start="1724924401268" dump="1724924408206"/><sessioninfo id="MAC-L9001-db9cfb66" start="1724924388154" dump="1724924408466"/><sessioninfo id="MAC-L9001-111767cf" start="1724924402025" dump="1724924408558"/><sessioninfo id="MAC-L9001-25643857" start="1724924388016" dump="1724924409959"/><sessioninfo id="MAC-L9001-a62181e3" start="1724924387876" dump="1724924410814"/><sessioninfo id="MAC-L9001-4ab0ba6d" start="1724924412608" dump="1724924416930"/><sessioninfo id="MAC-L9001-9dc6a5ae" start="1724924409266" dump="1724924417434"/><sessioninfo id="MAC-L9001-b645324c" start="1724924385796" dump="1724924417586"/><sessioninfo id="MAC-L9001-21237fb8" start="1724924410561" dump="1724924417953"/><sessioninfo id="MAC-L9001-b41ca8f9" start="1724924390239" dump="1724924418168"/><sessioninfo id="MAC-L9001-6777e283" start="1724924418589" dump="1724924425104"/><sessioninfo id="MAC-L9001-db332c1d" start="1724924390400" dump="1724924425178"/><sessioninfo id="MAC-L9001-786c86a6" start="1724924418023" dump="1724924425356"/><sessioninfo id="MAC-L9001-76ea2330" start="1724924418642" dump="1724924425723"/><sessioninfo id="MAC-L9001-bfa3aff1" start="1724924404963" dump="1724924426290"/><sessioninfo id="MAC-L9001-a85925b2" start="1724924417711" dump="1724924426664"/><sessioninfo id="MAC-L9001-fe7dcd95" start="1724924407209" dump="1724924427241"/><sessioninfo id="MAC-L9001-f8b9a41e" start="1724924408775" dump="1724924428387"/><sessioninfo id="MAC-L9001-ffacfd13" start="1724924426357" dump="1724924429323"/><sessioninfo id="MAC-L9001-9e1c820b" start="1724924385587" dump="1724924430976"/><sessioninfo id="MAC-L9001-5ea94170" start="1724924426605" dump="1724924431090"/><sessioninfo id="MAC-L9001-96b396c0" start="1724924426390" dump="1724924432456"/><sessioninfo id="MAC-L9001-a7e2cc7e" start="1724924426397" dump="1724924433123"/><sessioninfo id="MAC-L9001-ff15f20d" start="1724924432932" dump="1724924436035"/><sessioninfo id="MAC-L9001-424b508d" start="1724924389874" dump="1724924436225"/><sessioninfo id="MAC-L9001-c68280e" start="1724924402765" dump="1724924436316"/><sessioninfo id="MAC-L9001-916a0351" start="1724924430137" dump="1724924436671"/><sessioninfo id="MAC-L9001-9f4d416a" start="1724924428227" dump="1724924437520"/><sessioninfo id="MAC-L9001-c332c70f" start="1724924390175" dump="1724924438196"/><sessioninfo id="MAC-L9001-6f428db1" start="1724924406311" dump="1724924438607"/><sessioninfo id="MAC-L9001-d5f343e4" start="1724924428929" dump="1724924445862"/><sessioninfo id="MAC-L9001-9ad6209b" start="1724924431446" dump="1724924447139"/><sessioninfo id="MAC-L9001-adeb79c1" start="1724924446310" dump="1724924452692"/><sessioninfo id="MAC-L9001-db36c237" start="1724924447525" dump="1724924453953"/><sessioninfo id="MAC-L9001-49261185" start="1724924439158" dump="1724924454006"/><sessioninfo id="MAC-L9001-fe8ccfcf" start="1724924411053" dump="1724924454109"/><sessioninfo id="MAC-L9001-ac1efc6e" start="1724924438915" dump="1724924454585"/><sessioninfo id="MAC-L9001-79cfbcd5" start="1724924454713" dump="1724924460544"/><sessioninfo id="MAC-L9001-c2287bde" start="1724924454427" dump="1724924460588"/><sessioninfo id="MAC-L9001-b0478e9d" start="1724924413515" dump="1724924464686"/><sessioninfo id="MAC-L9001-fc860413" start="1724924436460" dump="1724924467702"/><sessioninfo id="MAC-L9001-27019239" start="1724924437714" dump="1724924467827"/><sessioninfo id="MAC-L9001-aed0c9a3" start="1724924437117" dump="1724924468416"/><sessioninfo id="MAC-L9001-d6488ca4" start="1724924418580" dump="1724924468466"/><sessioninfo id="MAC-L9001-92580998" start="1724924410552" dump="1724924468579"/><sessioninfo id="MAC-L9001-f26fa04e" start="1724924455599" dump="1724924469746"/><sessioninfo id="MAC-L9001-78c3dd0a" start="1724924465079" dump="1724924470020"/><sessioninfo id="MAC-L9001-d07edc0a" start="1724924428315" dump="1724924474317"/><sessioninfo id="MAC-L9001-d9ff8256" start="1724924468850" dump="1724924474961"/><sessioninfo id="MAC-L9001-46047219" start="1724924461039" dump="1724924475077"/><sessioninfo id="MAC-L9001-5b548fb4" start="1724924469132" dump="1724924475461"/><sessioninfo id="MAC-L9001-e0e64e63" start="1724924439866" dump="1724924475761"/><sessioninfo id="MAC-L9001-94d82161" start="1724924437276" dump="1724924476768"/><sessioninfo id="MAC-L9001-32e7074a" start="1724924461061" dump="1724924477154"/><sessioninfo id="MAC-L9001-f8a3866" start="1724924419172" dump="1724924481021"/><sessioninfo id="MAC-L9001-897a0672" start="1724924469267" dump="1724924483968"/><sessioninfo id="MAC-L9001-8dfb970f" start="1724924468899" dump="1724924485969"/><sessioninfo id="MAC-L9001-da08aac4" start="1724924471027" dump="1724924486340"/><sessioninfo id="MAC-L9001-71841b06" start="1724924438978" dump="1724924491465"/><sessioninfo id="MAC-L9001-628cb351" start="1724924477604" dump="1724924506006"/><sessioninfo id="MAC-L9001-9c689f9e" start="1724924438793" dump="1724924506561"/><sessioninfo id="MAC-L9001-40edbcbf" start="1724924477518" dump="1724924506673"/><sessioninfo id="MAC-L9001-a88dc399" start="1724924477628" dump="1724924507363"/><sessioninfo id="MAC-L9001-83eb19e0" start="1724924477597" dump="1724924508016"/><package name="io/github/detekt/report/txt"><class name="io/github/detekt/report/txt/TxtOutputReport" sourcefilename="TxtOutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/CharSequence;" line="21"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/txt/TxtOutputReportKt" sourcefilename="TxtOutputReport.kt"><method name="compactWithSignature" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compact" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TxtOutputReport.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="2"/><line nr="21" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="21" mb="0" cb="0"/><line nr="28" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/rules/style/optional"><class name="io/gitlab/arturbosch/detekt/rules/style/optional/PreferToOverPairSyntax" sourcefilename="PreferToOverPairSyntax.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPairConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="50"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Ljava/lang/CharSequence;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="112"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/optional/OptionalUnit" sourcefilename="OptionalUnit.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBlockExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBlockExpression;)V" line="69"><counter type="INSTRUCTION" missed="2" covered="107"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeUsedAsValue" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="96"><counter type="INSTRUCTION" missed="3" covered="51"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitApiModeActive" desc="()Z" line="110"><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFunctionWithExplicitReturnType" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" line="116"><counter type="INSTRUCTION" missed="2" covered="60"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFunctionWithInferredReturnType" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/lang/String;" line="133"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGenericOrNothingType" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="137"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="367"/><counter type="BRANCH" missed="9" covered="75"/><counter type="LINE" missed="1" covered="56"/><counter type="COMPLEXITY" missed="9" covered="42"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/optional/PreferToOverPairSyntax$Companion" sourcefilename="PreferToOverPairSyntax.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/optional/OptionalUnit$Companion" sourcefilename="OptionalUnit.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/optional/MandatoryBracesLoops" sourcefilename="MandatoryBracesLoops.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitForExpression" desc="(Lorg/jetbrains/kotlin/psi/KtForExpression;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDoWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBraces" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" line="75"><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBraces" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="89"><counter type="INSTRUCTION" missed="3" covered="56"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotBlockExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForBraces$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="91"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="176"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/optional/MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$2" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/optional/MandatoryBracesLoops$checkForBraces$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PreferToOverPairSyntax.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="24" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="2" ci="10" mb="1" cb="1"/><line nr="51" mi="0" ci="18" mb="1" cb="5"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="112"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MandatoryBracesLoops.kt"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="1" cb="1"/><line nr="78" mi="0" ci="6" mb="1" cb="1"/><line nr="79" mi="0" ci="8" mb="1" cb="1"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="3" ci="21" mb="1" cb="1"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="13" mb="0" cb="4"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="1" ci="12" mb="1" cb="1"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="3" ci="21" mb="1" cb="1"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="176"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="_Sequences.kt"><line nr="477" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="OptionalUnit.kt"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="4"/><line nr="75" mi="0" ci="6" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="2" ci="23" mb="2" cb="8"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="13" mb="0" cb="4"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="2" ci="25" mb="1" cb="5"/><line nr="106" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="3" ci="5" mb="1" cb="1"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="2" ci="7" mb="1" cb="1"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="16" mb="0" cb="6"/><line nr="121" mi="0" ci="10" mb="0" cb="6"/><line nr="122" mi="0" ci="19" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="2"/><line nr="128" mi="0" ci="7" mb="0" cb="4"/><line nr="129" mi="0" ci="19" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="23" mb="2" cb="6"/><line nr="138" mi="2" ci="14" mb="1" cb="3"/><line nr="141" mi="0" ci="12" mb="0" cb="8"/><counter type="INSTRUCTION" missed="12" covered="367"/><counter type="BRANCH" missed="9" covered="75"/><counter type="LINE" missed="1" covered="56"/><counter type="COMPLEXITY" missed="9" covered="42"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="22" covered="663"/><counter type="BRANCH" missed="17" covered="101"/><counter type="LINE" missed="2" covered="102"/><counter type="COMPLEXITY" missed="17" covered="66"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="5"/></package><package name="io/gitlab/arturbosch/detekt/generator/printer"><class name="io/gitlab/arturbosch/detekt/generator/printer/DeprecatedPrinterKt" sourcefilename="DeprecatedPrinter.kt"><method name="writeRule" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetPage;Lio/gitlab/arturbosch/detekt/generator/collection/Rule;)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeProperty" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetPage;Lio/gitlab/arturbosch/detekt/generator/collection/Rule;Lio/gitlab/arturbosch/detekt/generator/collection/Configuration;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="migratedRules" desc="()Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/RuleSetPagePrinter" sourcefilename="RuleSetPagePrinter.kt"><method name="print" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetPage;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="10" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/RulePrinter" sourcefilename="RulePrinter.kt"><method name="print" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/Rule;)Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="2" covered="223"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRuleCodeExamples" desc="(Lio/github/detekt/utils/MarkdownContent;Lio/gitlab/arturbosch/detekt/generator/collection/Rule;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/DocumentationPrinter" sourcefilename="DocumentationPrinter.kt"/><class name="io/gitlab/arturbosch/detekt/generator/printer/RuleConfigurationPrinter" sourcefilename="RuleConfigurationPrinter.kt"><method name="print" desc="(Ljava/util/List;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/DeprecatedPrinter" sourcefilename="DeprecatedPrinter.kt"><method name="print" desc="(Ljava/util/List;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuleSetPagePrinter.kt"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="1" ci="9" mb="2" cb="2"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="9" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RulePrinter.kt"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="2"/><line nr="19" mi="0" ci="17" mb="0" cb="0"/><line nr="20" mi="2" ci="13" mb="1" cb="1"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="4"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="25" mb="0" cb="2"/><line nr="33" mi="0" ci="36" mb="0" cb="6"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="4"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="34" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="4"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="15" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="4"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="290"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeprecatedPrinter.kt"><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="2"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="0" ci="21" mb="0" cb="0"/><line nr="36" mi="0" ci="26" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="18" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="151"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RuleConfigurationPrinter.kt"><line nr="16" mi="0" ci="5" mb="0" cb="2"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="31" mb="0" cb="0"/><line nr="26" mi="0" ci="18" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="30" mb="0" cb="0"/><line nr="32" mi="0" ci="27" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="23" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DocumentationPrinter.kt"/><counter type="INSTRUCTION" missed="12" covered="682"/><counter type="BRANCH" missed="3" covered="41"/><counter type="LINE" missed="1" covered="78"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="5"/></package><package name="io/gitlab/arturbosch/detekt/core/extensions"><class name="io/gitlab/arturbosch/detekt/core/extensions/LoadingKt$loadExtensions$5$1$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/LoadingKt$loadExtensions$5$1" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/LoadingKt" sourcefilename="Loading.kt"><method name="getLIST_ITEM_SPACING" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadExtensions$default" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/List;" line="10"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="12"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/LoadingKt$loadExtensions$$inlined$sortedByDescending$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/extensions/ReportingKt$handleReportingExtensions$$inlined$loadExtensions$default$2" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/ReportingKt$handleReportingExtensions$$inlined$loadExtensions$default$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/extensions/ReportingKt$handleReportingExtensions$$inlined$loadExtensions$default$2$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/LoadingKt$loadExtensions$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/Boolean;" line="12"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/extensions/ReportingKt" sourcefilename="Reporting.kt"><method name="handleReportingExtensions" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lio/gitlab/arturbosch/detekt/api/Detektion;)Lio/gitlab/arturbosch/detekt/api/Detektion;" line="9"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Loading.kt"><line nr="8" mi="0" ci="12" mb="0" cb="0"/><line nr="10" mi="11" ci="0" mb="0" cb="0"/><line nr="12" mi="7" ci="0" mb="0" cb="0"/><line nr="14" mi="13" ci="0" mb="0" cb="0"/><line nr="15" mi="10" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="7" ci="0" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="0" cb="0"/><line nr="23" mi="9" ci="9" mb="0" cb="0"/><line nr="24" mi="24" ci="23" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="108" covered="44"/><counter type="LINE" missed="12" covered="3"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="3" covered="3"/></sourcefile><sourcefile name="Reporting.kt"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="12" mb="0" cb="2"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comparisons.kt"/><counter type="INSTRUCTION" missed="108" covered="93"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="12" covered="10"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="3" covered="4"/></package><package name="io/github/detekt/report/md"><class name="io/github/detekt/report/md/MdOutputReportKt$renderGroup$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/github/detekt/report/md/MdOutputReportKt" sourcefilename="MdOutputReport.kt"><method name="renderMetrics" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/util/Collection;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderComplexity" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/util/List;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderGroup" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/util/List;Ljava/nio/file/Path;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderRule" desc="(Lio/github/detekt/utils/MarkdownContent;Lio/gitlab/arturbosch/detekt/api/RuleInstance;Ljava/util/List;Ljava/nio/file/Path;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="144"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderIssues" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/util/List;Ljava/nio/file/Path;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderIssue" desc="(Lio/github/detekt/utils/MarkdownContent;Lio/gitlab/arturbosch/detekt/api/Issue;Ljava/nio/file/Path;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="2" covered="105"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="snippetCode" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/sequences/Sequence;Lio/gitlab/arturbosch/detekt/api/SourceLocation;)Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="link" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="193"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderRule$lambda$17$lambda$12" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderRule$lambda$17$lambda$13" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderRule$lambda$17$lambda$14" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="600"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="76"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/md/MdOutputReport" sourcefilename="MdOutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBasePath" desc="(Ljava/nio/file/Path;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderVersion" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderDate" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexityMetrics" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="147"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/md/MdOutputReportKt$renderIssues$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><sourcefile name="Comparisons.kt"/><sourcefile name="MdOutputReport.kt"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="16" mb="0" cb="2"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="68" mi="0" ci="17" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="48" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="19" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="45" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="22" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="21" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="33" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="17" mb="1" cb="3"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="21" mb="0" cb="0"/><line nr="153" mi="1" ci="9" mb="2" cb="2"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="20" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="15" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="0" ci="15" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="2"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="20" mb="0" cb="0"/><line nr="184" mi="0" ci="11" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="193" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="747"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="97"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="9" covered="747"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="97"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/core/config"><class name="io/gitlab/arturbosch/detekt/core/config/CompositeConfig" sourcefilename="CompositeConfig.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="4" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfig" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Config;" line="22"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfigKeys" desc="()Ljava/util/Set;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrNull" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;)Ljava/util/List;" line="48"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="123"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/FailurePoliciesKt" sourcefilename="FailurePolicies.kt"><method name="check" desc="(Lio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForIssuesWithSeverity" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Severity;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeIssueCount" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Severity;)I" line="25"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAtLeast" desc="(Lio/gitlab/arturbosch/detekt/api/Severity;Lio/gitlab/arturbosch/detekt/api/Severity;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/YamlConfigKt" sourcefilename="YamlConfig.kt"><method name="toPrettyString" desc="(Ljava/util/Map;I)Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toPrettyString$lambda$0" desc="(ILkotlin/Pair;)Ljava/lang/CharSequence;" line="109"><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="83" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/config/YamlConfig$Companion" sourcefilename="YamlConfig.kt"><method name="load" desc="(Ljava/nio/file/Path;)Lio/gitlab/arturbosch/detekt/api/Config;" line="71"><counter type="INSTRUCTION" missed="15" covered="76"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/io/Reader;)Lio/gitlab/arturbosch/detekt/api/Config;" line="83"><counter type="INSTRUCTION" missed="3" covered="93"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createYamlLoad" desc="()Lorg/snakeyaml/engine/v2/api/Load;" line="92"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="183"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/AllRulesConfig" sourcefilename="AllRulesConfig.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfig" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/core/config/AllRulesConfig;" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfigKeys" desc="()Ljava/util/Set;" line="22"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrNull" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;)Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDeprecated" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toPath" desc="(Lio/gitlab/arturbosch/detekt/core/config/validation/DeprecatedRule;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="139"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/YamlConfig" sourcefilename="YamlConfig.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfig" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Config;" line="29"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfigKeys" desc="()Ljava/util/Set;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrNull" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="52"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;)Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="105"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/BaseConfigKt" sourcefilename="BaseConfig.kt"><method name="keySequence" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefaultInternal" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;" line="18"><counter type="INSTRUCTION" missed="0" covered="160"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefaultInternal$default" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tryParseBasedOnDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="8" covered="40"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="291"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/DisabledAutoCorrectConfig" sourcefilename="DisabledAutoCorrectConfig.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfig" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Config;" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfigKeys" desc="()Ljava/util/Set;" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrNull" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;)Ljava/util/List;" line="33"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AllRulesConfig.kt"><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="20" mb="0" cb="4"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="4" ci="16" mb="2" cb="4"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="10" ci="0" mb="0" cb="0"/><line nr="46" mi="9" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="139"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="5" covered="18"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompositeConfig.kt"><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="4" ci="6" mb="1" cb="1"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="2"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="12" mb="0" cb="2"/><line nr="37" mi="10" ci="0" mb="0" cb="0"/><line nr="39" mi="9" ci="0" mb="0" cb="0"/><line nr="40" mi="9" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="123"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FailurePolicies.kt"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="2"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="2"/><line nr="20" mi="0" ci="14" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="YamlConfig.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="2"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="54" mi="10" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="24" mb="0" cb="2"/><line nr="72" mi="0" ci="24" mb="0" cb="2"/><line nr="73" mi="15" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="22" mb="0" cb="0"/><line nr="83" mi="3" ci="34" mb="1" cb="1"/><line nr="84" mi="0" ci="22" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="14" mb="0" cb="2"/><line nr="89" mi="0" ci="13" mb="0" cb="2"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="19" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="14" ci="0" mb="2" cb="0"/><line nr="112" mi="25" ci="0" mb="2" cb="0"/><line nr="113" mi="11" ci="0" mb="0" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="288"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="14" covered="32"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="DisabledAutoCorrectConfig.kt"><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="2"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="38" mi="9" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaseConfig.kt"><line nr="7" mi="0" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="17" mb="0" cb="2"/><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="2"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="17" mb="0" cb="2"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="2"/><line nr="34" mi="0" ci="9" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="22" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="23" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="4" ci="3" mb="1" cb="1"/><line nr="63" mi="0" ci="5" mb="1" cb="1"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="44" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="291"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="234" covered="1005"/><counter type="BRANCH" missed="13" covered="63"/><counter type="LINE" missed="27" covered="129"/><counter type="COMPLEXITY" missed="18" covered="76"/><counter type="METHOD" missed="8" covered="48"/><counter type="CLASS" missed="1" covered="7"/></package><package name="io/github/detekt/metrics/processors/util"><class name="io/github/detekt/metrics/processors/util/LLOC" sourcefilename="LLOC.kt"><method name="analyze" desc="(Ljava/util/List;ZZ)I" line="12"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$default" desc="(Lio/github/detekt/metrics/processors/util/LLOC;Ljava/util/List;ZZILjava/lang/Object;)I" line="8"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/util/LLOC$LLOCCounter" sourcefilename="LLOC.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;ZZ)V" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="14"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="()I" line="27"><counter type="INSTRUCTION" missed="1" covered="56"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countStatementsAndDeclarations" desc="(Ljava/lang/String;)V" line="51"><counter type="INSTRUCTION" missed="8" covered="59"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOrEscapeAdditionalStatements" desc="(Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOrEscapeComment" desc="(Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="11" covered="10"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEscaped" desc="(Ljava/lang/String;[Ljava/lang/String;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frequency" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="83"><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="208"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="5" covered="39"/><counter type="COMPLEXITY" missed="10" covered="17"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LLOC.kt"><line nr="5" mi="0" ci="21" mb="0" cb="0"/><line nr="6" mi="0" ci="14" mb="0" cb="0"/><line nr="8" mi="0" ci="12" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="11" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="2" ci="3" mb="0" cb="0"/><line nr="17" mi="2" ci="3" mb="0" cb="0"/><line nr="18" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="4"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="1" ci="13" mb="1" cb="1"/><line nr="51" mi="0" ci="9" mb="1" cb="1"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="2"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="2"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="1" cb="3"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="3" ci="3" mb="3" cb="1"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="4" ci="12" mb="4" cb="4"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="274"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="5" covered="45"/><counter type="COMPLEXITY" missed="10" covered="20"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="50" covered="274"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="5" covered="45"/><counter type="COMPLEXITY" missed="10" covered="20"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/api"><class name="io/gitlab/arturbosch/detekt/api/Entity$Companion" sourcefilename="Entity.kt"><method name="from" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lio/gitlab/arturbosch/detekt/api/Entity;" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from$default" desc="(Lio/gitlab/arturbosch/detekt/api/Entity$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="atName" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="36"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="atPackageOrFirstDecl" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="42"><counter type="INSTRUCTION" missed="8" covered="14"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lio/gitlab/arturbosch/detekt/api/Location;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lio/gitlab/arturbosch/detekt/api/Location;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="59"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="97"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/CorrectableCodeSmell" sourcefilename="CodeSmell.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;Z)V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAutoCorrectEnabled" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Notification$Level" sourcefilename="Notification.kt"><method name="&lt;clinit&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/OutputReport" sourcefilename="OutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/file/Path;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="23"><counter type="INSTRUCTION" missed="29" covered="35"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/MemoizedConfigProperty" sourcefilename="ConfigProperty.kt"><method name="&lt;init&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lkotlin/reflect/KProperty;)Ljava/lang/Object;" line="166"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Issue" sourcefilename="Issue.kt"/><class name="io/gitlab/arturbosch/detekt/api/ValueWithReason" sourcefilename="ValuesWithReason.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReason" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/OutputReport$Companion" sourcefilename="OutputReport.kt"/><class name="io/gitlab/arturbosch/detekt/api/DetektVisitor" sourcefilename="DetektVisitor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Notification$DefaultImpls" sourcefilename="Notification.kt"><method name="isError" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Z" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Config$Companion$empty$1" sourcefilename="Config.kt"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentPath" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfig" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Config;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subConfigKeys" desc="()Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOrNull" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOrDefault" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/RuleInstance" sourcefilename="Issue.kt"/><class name="io/gitlab/arturbosch/detekt/api/SplitPatternKt" sourcefilename="SplitPattern.kt"><method name="simplePatternToRegex" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="13"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ConfigValidator$DefaultImpls" sourcefilename="ConfigValidator.kt"><method name="getPriority" desc="(Lio/gitlab/arturbosch/detekt/api/ConfigValidator;)I" line="9"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/ConfigValidator;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/FallbackConfigProperty" sourcefilename="ConfigProperty.kt"><method name="&lt;init&gt;" desc="(Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGetValue" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lkotlin/reflect/KProperty;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConfigured" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/CompilerResources" sourcefilename="CompilerResources.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLanguageVersionSettings" desc="()Lorg/jetbrains/kotlin/config/LanguageVersionSettings;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFlowValueFactory" desc="()Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/SetupContext" sourcefilename="SetupContext.kt"/><class name="io/gitlab/arturbosch/detekt/api/Rule" sourcefilename="Rule.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleName" desc="()Lio/gitlab/arturbosch/detekt/api/Rule$Name;" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBindingContext" desc="()Lorg/jetbrains/kotlin/resolve/BindingContext;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBindingContext" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="29"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCompilerResources" desc="()Lio/gitlab/arturbosch/detekt/api/CompilerResources;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCompilerResources" desc="(Lio/gitlab/arturbosch/detekt/api/CompilerResources;)V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAutoCorrect" desc="()Z" line="33"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile$default" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;ILjava/lang/Object;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lio/gitlab/arturbosch/detekt/api/Finding;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="147"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Location$Companion" sourcefilename="Location.kt"><method name="from" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lio/gitlab/arturbosch/detekt/api/Location;" line="32"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from$default" desc="(Lio/gitlab/arturbosch/detekt/api/Location$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/api/Location;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startLineAndColumn" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" line="49"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startLineAndColumn$default" desc="(Lio/gitlab/arturbosch/detekt/api/Location$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" line="48"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endLineAndColumn" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;I)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" line="58"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endLineAndColumn$default" desc="(Lio/gitlab/arturbosch/detekt/api/Location$Companion;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;IILjava/lang/Object;)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" line="57"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lineAndColumn" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/openapi/util/TextRange;)Lorg/jetbrains/kotlin/diagnostics/PsiDiagnosticUtils$LineAndColumn;" line="64"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="134"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Issue$DefaultImpls" sourcefilename="Issue.kt"><method name="getLocation" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Lio/gitlab/arturbosch/detekt/api/Location;" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Location" sourcefilename="Location.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/TextLocation;Ljava/nio/file/Path;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lio/gitlab/arturbosch/detekt/api/SourceLocation;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndSource" desc="()Lio/gitlab/arturbosch/detekt/api/SourceLocation;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getText" desc="()Lio/gitlab/arturbosch/detekt/api/TextLocation;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/FileProcessListener$DefaultImpls" sourcefilename="FileProcessListener.kt"><method name="onStart" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Ljava/util/List;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lorg/jetbrains/kotlin/psi/KtFile;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;)I" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/FileProcessListener;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Severity" sourcefilename="Severity.kt"><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/TransformedConfigPropertyWithAndroidVariants" sourcefilename="ConfigProperty.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGetValue" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lkotlin/reflect/KProperty;)Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="11" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="59"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Configuration" sourcefilename="Configuration.kt"/><class name="io/gitlab/arturbosch/detekt/api/RequiresTypeResolution" sourcefilename="RequiresTypeResolution.kt"/><class name="io/gitlab/arturbosch/detekt/api/SourceLocation" sourcefilename="Location.kt"><method name="&lt;init&gt;" desc="(II)V" line="76"><counter type="INSTRUCTION" missed="18" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="42"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Extension" sourcefilename="Extension.kt"/><class name="io/gitlab/arturbosch/detekt/api/TransformedConfigProperty" sourcefilename="ConfigProperty.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doGetValue" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lkotlin/reflect/KProperty;)Ljava/lang/Object;" line="191"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/PropertiesAware" sourcefilename="PropertiesAware.kt"/><class name="io/gitlab/arturbosch/detekt/api/ValuesWithReason" sourcefilename="ValuesWithReason.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ConsoleReport" sourcefilename="ConsoleReport.kt"/><class name="io/gitlab/arturbosch/detekt/api/Detektion" sourcefilename="Detektion.kt"/><class name="io/gitlab/arturbosch/detekt/api/Config" sourcefilename="Config.kt"/><class name="io/gitlab/arturbosch/detekt/api/RuleSet$Companion" sourcefilename="RuleSet.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/List;)Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="12"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Config$DefaultImpls" sourcefilename="Config.kt"><method name="valueOrDefault" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="36"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ValuesWithReasonKt" sourcefilename="ValuesWithReason.kt"><method name="valuesWithReason" desc="([Lkotlin/Pair;)Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesWithReason" desc="(Ljava/util/List;)Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ReportingExtension$DefaultImpls" sourcefilename="ReportingExtension.kt"><method name="onRawResult" desc="(Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformIssues" desc="(Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Ljava/util/List;)Ljava/util/List;" line="19"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onFinalResult" desc="(Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="(Lio/gitlab/arturbosch/detekt/api/ReportingExtension;)I" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/ReportingExtension;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="7"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="8"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ConsoleReport$DefaultImpls" sourcefilename="ConsoleReport.kt"><method name="getPriority" desc="(Lio/gitlab/arturbosch/detekt/api/ConsoleReport;)I" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/ConsoleReport;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/RuleSet" sourcefilename="RuleSet.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/Map;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/Map;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Notification" sourcefilename="Notification.kt"/><class name="io/gitlab/arturbosch/detekt/api/CodeSmell" sourcefilename="CodeSmell.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="9" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntity" desc="()Lio/gitlab/arturbosch/detekt/api/Entity;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferences" desc="()Ljava/util/List;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="73"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ProjectMetric" sourcefilename="ProjectMetric.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIZI)V" line="6"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;IIZIILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDouble" desc="()Z" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConversionFactor" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ReportingExtension" sourcefilename="ReportingExtension.kt"/><class name="io/gitlab/arturbosch/detekt/api/Alias" sourcefilename="Alias.kt"/><class name="io/gitlab/arturbosch/detekt/api/RuleSet$Id" sourcefilename="RuleSet.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Finding" sourcefilename="Finding.kt"/><class name="io/gitlab/arturbosch/detekt/api/ProjectMetricKt" sourcefilename="ProjectMetric.kt"/><class name="io/gitlab/arturbosch/detekt/api/Config$InvalidConfigurationError" sourcefilename="Config.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="31"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Rule$Name" sourcefilename="Rule.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/TextLocation" sourcefilename="Location.kt"><method name="&lt;init&gt;" desc="(II)V" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStart" desc="()I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnd" desc="()I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Entity" sourcefilename="Entity.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Location;Lorg/jetbrains/kotlin/psi/KtElement;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSignature" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="()Lio/gitlab/arturbosch/detekt/api/Location;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKtElement" desc="()Lorg/jetbrains/kotlin/psi/KtElement;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/AutocorrectKt" sourcefilename="Autocorrect.kt"><method name="getModifiedText" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setModifiedText" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/ConfigValidator" sourcefilename="ConfigValidator.kt"/><class name="io/gitlab/arturbosch/detekt/api/ConfigPropertyKt" sourcefilename="ConfigProperty.kt"><method name="config" desc="(Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="config" desc="(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithFallback" desc="(Lkotlin/reflect/KProperty0;Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;" line="49"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithFallback" desc="(Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;" line="72"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithAndroidVariants" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithAndroidVariants" desc="(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlin/properties/ReadOnlyProperty;" line="106"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueOrDefault" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListOrDefault" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesWithReasonOrDefault" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;" line="137"><counter type="INSTRUCTION" missed="15" covered="107"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="config$lambda$0" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="16"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithFallback$lambda$1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configWithAndroidVariants$lambda$2" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="294"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/Extension$DefaultImpls" sourcefilename="Extension.kt"><method name="getPriority" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)I" line="22"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/RuleSetProvider" sourcefilename="RuleSetProvider.kt"/><class name="io/gitlab/arturbosch/detekt/api/FileProcessListener" sourcefilename="FileProcessListener.kt"/><class name="io/gitlab/arturbosch/detekt/api/ActiveByDefault" sourcefilename="ActiveByDefault.kt"/><class name="io/gitlab/arturbosch/detekt/api/PropertiesAwareKt" sourcefilename="PropertiesAware.kt"/><class name="io/gitlab/arturbosch/detekt/api/Config$Companion" sourcefilename="Config.kt"><method name="getEmpty" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ProjectMetric.kt"><line nr="6" mi="0" ci="19" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="3" ci="5" mb="0" cb="0"/><line nr="11" mi="3" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="1" cb="1"/><line nr="16" mi="9" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="72"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Severity.kt"><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigProperty.kt"><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="13" mb="0" cb="2"/><line nr="112" mi="0" ci="13" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="8" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="16" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="2"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="24" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="1" cb="1"/><line nr="142" mi="2" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="13" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="17" mb="0" cb="2"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="10" ci="6" mb="1" cb="1"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="2"/><line nr="182" mi="0" ci="10" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="2"/><line nr="201" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="8" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="26" covered="482"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="2" covered="64"/><counter type="COMPLEXITY" missed="2" covered="34"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="CompilerResources.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ActiveByDefault.kt"/><sourcefile name="SetupContext.kt"/><sourcefile name="ConsoleReport.kt"><line nr="10" mi="3" ci="4" mb="0" cb="0"/><line nr="18" mi="1" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Alias.kt"/><sourcefile name="PropertiesAware.kt"/><sourcefile name="Issue.kt"><line nr="18" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleSetProvider.kt"/><sourcefile name="Configuration.kt"/><sourcefile name="Finding.kt"/><sourcefile name="ReportingExtension.kt"><line nr="7" mi="7" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="8"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigValidator.kt"><line nr="9" mi="3" ci="4" mb="0" cb="0"/><line nr="15" mi="1" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Config.kt"><line nr="36" mi="0" ci="8" mb="1" cb="1"/><line nr="47" mi="9" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="4" ci="20" mb="2" cb="2"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="16" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="85"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Notification.kt"><line nr="12" mi="0" ci="8" mb="0" cb="2"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FileProcessListener.kt"><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValuesWithReason.kt"><line nr="19" mi="0" ci="17" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Rule.kt"><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="4" ci="9" mb="0" cb="0"/><line nr="30" mi="4" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="2"/><line nr="34" mi="2" ci="21" mb="1" cb="5"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="167"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="2" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Entity.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="27" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="0" cb="2"/><line nr="42" mi="8" ci="11" mb="3" cb="1"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="7" ci="11" mb="1" cb="1"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="163"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Detektion.kt"/><sourcefile name="RuleSet.kt"><line nr="9" mi="0" ci="15" mb="0" cb="0"/><line nr="12" mi="0" ci="23" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Location.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="0"/><line nr="48" mi="10" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="13" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="18" mb="0" cb="4"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="9" ci="6" mb="2" cb="2"/><line nr="79" mi="9" ci="6" mb="2" cb="2"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="0"/><line nr="89" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="270"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="6" covered="21"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Autocorrect.kt"><line nr="7" mi="0" ci="39" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Extension.kt"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SplitPattern.kt"><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektVisitor.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CodeSmell.kt"><line nr="10" mi="0" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="9" ci="8" mb="2" cb="2"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="16" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="15" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="133"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RequiresTypeResolution.kt"/><sourcefile name="OutputReport.kt"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="1" cb="1"/><line nr="25" mi="8" ci="10" mb="2" cb="2"/><line nr="26" mi="21" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="188" covered="1775"/><counter type="BRANCH" missed="20" covered="58"/><counter type="LINE" missed="11" covered="241"/><counter type="COMPLEXITY" missed="33" covered="156"/><counter type="METHOD" missed="14" covered="136"/><counter type="CLASS" missed="0" covered="40"/></package><package name="io/gitlab/arturbosch/detekt/generator/collection/exception"><class name="io/gitlab/arturbosch/detekt/generator/collection/exception/InvalidCodeExampleDocumentationException" sourcefilename="InvalidCodeExampleDocumentationException.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/exception/InvalidDocumentationException" sourcefilename="InvalidDocumentationException.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/exception/InvalidIssueDeclaration" sourcefilename="InvalidIssueDeclaration.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="InvalidCodeExampleDocumentationException.kt"><line nr="3" mi="0" ci="1" mb="0" cb="0"/><line nr="4" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidDocumentationException.kt"><line nr="6" mi="0" ci="1" mb="0" cb="0"/><line nr="7" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidIssueDeclaration.kt"><line nr="3" mi="1" ci="0" mb="0" cb="0"/><line nr="4" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="16" covered="23"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/core/suppressors"><class name="io/gitlab/arturbosch/detekt/core/suppressors/SuppressorKt" sourcefilename="Suppressor.kt"><method name="buildSuppressors" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/resolve/BindingContext;)Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/suppressors/SuppressionsKt$allAnnotationEntries$1" sourcefilename="Suppressions.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/suppressors/Suppressor" sourcefilename="Suppressor.kt"/><class name="io/gitlab/arturbosch/detekt/core/suppressors/FunctionSuppressorKt" sourcefilename="FunctionSuppressor.kt"><method name="functionSuppressorFactory" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lio/gitlab/arturbosch/detekt/core/suppressors/Suppressor;" line="24"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionSuppressor" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/resolve/BindingContext;Ljava/util/List;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInFunctionNamed" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/resolve/BindingContext;Ljava/util/List;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionSuppressorFactory$lambda$0" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Finding;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/suppressors/SuppressionsKt" sourcefilename="Suppressions.kt"><method name="isSuppressedBy" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/String;Ljava/util/Set;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Z" line="15"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$default" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/String;Ljava/util/Set;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;ILjava/lang/Object;)Z" line="14"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allAnnotationEntries" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Z" line="22"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Ljava/lang/Iterable;" line="23"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/ValueArgument;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$lambda$3" desc="(Ljava/lang/String;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuppressedBy$lambda$4" desc="(Ljava/lang/String;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="185"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/suppressors/AnnotationSuppressorKt" sourcefilename="AnnotationSuppressor.kt"><method name="annotationSuppressorFactory" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lio/gitlab/arturbosch/detekt/core/suppressors/Suppressor;" line="18"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnnotatedWith" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lio/github/detekt/psi/AnnotationExcluder;)Z" line="32"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualifiedNameGlobToRegex" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="39"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotationSuppressorFactory$lambda$1" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/Finding;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Suppressor.kt"><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Suppressions.kt"><line nr="14" mi="11" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="22" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="1" cb="1"/><line nr="17" mi="0" ci="40" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="2" ci="12" mb="1" cb="1"/><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="2" ci="9" mb="1" cb="1"/><line nr="25" mi="0" ci="14" mb="0" cb="0"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="18" mb="0" cb="0"/><line nr="37" mi="0" ci="27" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="240"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FunctionSuppressor.kt"><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="4"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="14" mb="0" cb="4"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="15" mb="0" cb="2"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationSuppressor.kt"><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="4"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="2"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="478"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="1" covered="52"/><counter type="COMPLEXITY" missed="4" covered="30"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="5"/></package><package name="io/github/detekt/test/utils/internal"><class name="io/github/detekt/test/utils/internal/FakePsiFile" sourcefilename="FakePsiFile.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="navigate" desc="(Z)V" line="30"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canNavigate" desc="()Z" line="32"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canNavigateToSource" desc="()Z" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPresentation" desc="()Lorg/jetbrains/kotlin/com/intellij/navigation/ItemPresentation;" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIcon" desc="(I)Ljavax/swing/Icon;" line="41"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;Ljava/lang/Object;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProject" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/project/Project;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLanguage" desc="()Lorg/jetbrains/kotlin/com/intellij/lang/Language;" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManager" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiManager;" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()[Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="63"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiDirectory;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstChild" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChild" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextSibling" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="77"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrevSibling" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingFile" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;" line="85"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextRange" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/TextRange;" line="89"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartOffsetInParent" desc="()I" line="92"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextLength" desc="()I" line="94"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElementAt" desc="(I)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="96"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findReferenceAt" desc="(I)Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextOffset" desc="()I" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="textToCharArray" desc="()[C" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNavigationElement" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalElement" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="111"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textMatches" desc="(Ljava/lang/CharSequence;)Z" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textMatches" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textContains" desc="(C)Z" line="118"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElementVisitor;)V" line="122"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptChildren" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElementVisitor;)V" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="129"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="133"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addBefore" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="137"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAfter" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="141"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkAdd" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="146"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRange" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRangeBefore" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="154"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRangeAfter" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="158"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="()V" line="163"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkDelete" desc="()V" line="168"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteChildRange" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="172"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="175"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="178"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWritable" desc="()Z" line="180"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReference" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="182"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferences" desc="()[Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCopyableUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)Ljava/lang/Object;" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putCopyableUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;Ljava/lang/Object;)V" line="192"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processDeclarations" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/scope/PsiScopeProcessor;Lorg/jetbrains/kotlin/com/intellij/psi/ResolveState;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="199"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="201"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPhysical" desc="()Z" line="203"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResolveScope" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/search/GlobalSearchScope;" line="206"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseScope" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/search/SearchScope;" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNode" desc="()Lorg/jetbrains/kotlin/com/intellij/lang/FileASTNode;" line="214"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEquivalentTo" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="217"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setName" desc="(Ljava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="220"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkSetName" desc="(Ljava/lang/String;)V" line="225"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirectory" desc="()Z" line="227"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVirtualFile" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/vfs/VirtualFile;" line="230"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processChildren" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/search/PsiElementProcessor;)Z" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingDirectory" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiDirectory;" line="236"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getModificationStamp" desc="()J" line="239"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalFile" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;" line="242"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileType" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/fileTypes/FileType;" line="246"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPsiRoots" desc="()[Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;" line="251"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getViewProvider" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/FileViewProvider;" line="255"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subtreeChanged" desc="()V" line="260"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="322" covered="36"/><counter type="LINE" missed="68" covered="3"/><counter type="COMPLEXITY" missed="68" covered="4"/><counter type="METHOD" missed="68" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/internal/FakeKtElement" sourcefilename="FakeKtElement.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accept" desc="(Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accept" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElementVisitor;)V" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptChildren" desc="(Lorg/jetbrains/kotlin/psi/KtVisitor;Ljava/lang/Object;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="acceptChildren" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElementVisitor;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAfter" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addBefore" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRange" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRangeAfter" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="58"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addRangeBefore" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="62"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canNavigate" desc="()Z" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canNavigateToSource" desc="()Z" line="67"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkAdd" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkDelete" desc="()V" line="77"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copy" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="80"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="delete" desc="()V" line="85"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteChildRange" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="89"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElementAt" desc="(I)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="92"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findReferenceAt" desc="(I)Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="96"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()[Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="100"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainingFile" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainingKtFile" desc="()Lorg/jetbrains/kotlin/psi/KtFile;" line="106"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContext" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="110"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCopyableUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFirstChild" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIcon" desc="(I)Ljavax/swing/Icon;" line="122"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLanguage" desc="()Lorg/jetbrains/kotlin/com/intellij/lang/Language;" line="126"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLastChild" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="130"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManager" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiManager;" line="134"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="137"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNavigationElement" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="140"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNextSibling" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="144"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNode" desc="()Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;" line="148"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOriginalElement" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="152"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPresentation" desc="()Lorg/jetbrains/kotlin/com/intellij/navigation/ItemPresentation;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrevSibling" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="164"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProject" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/project/Project;" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPsiOrParent" desc="()Lorg/jetbrains/kotlin/psi/KtElement;" line="172"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReference" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="177"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferences" desc="()[Lorg/jetbrains/kotlin/com/intellij/psi/PsiReference;" line="181"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResolveScope" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/search/GlobalSearchScope;" line="185"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getStartOffsetInParent" desc="()I" line="188"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getText" desc="()Ljava/lang/String;" line="190"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextLength" desc="()I" line="192"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextOffset" desc="()I" line="194"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextRange" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/TextRange;" line="197"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUseScope" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/search/SearchScope;" line="201"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)Ljava/lang/Object;" line="205"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEquivalentTo" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPhysical" desc="()Z" line="210"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isValid" desc="()Z" line="212"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isWritable" desc="()Z" line="214"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="navigate" desc="(Z)V" line="218"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="processDeclarations" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/scope/PsiScopeProcessor;Lorg/jetbrains/kotlin/com/intellij/psi/ResolveState;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="225"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putCopyableUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;Ljava/lang/Object;)V" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;Ljava/lang/Object;)V" line="233"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="236"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textContains" desc="(C)Z" line="239"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textMatches" desc="(Ljava/lang/CharSequence;)Z" line="241"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textMatches" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="textToCharArray" desc="()[C" line="245"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="316" covered="30"/><counter type="LINE" missed="61" covered="3"/><counter type="COMPLEXITY" missed="61" covered="4"/><counter type="METHOD" missed="61" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FakePsiFile.kt"><line nr="26" mi="0" ci="24" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="322" covered="36"/><counter type="LINE" missed="68" covered="3"/><counter type="COMPLEXITY" missed="68" covered="4"/><counter type="METHOD" missed="68" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FakeKtElement.kt"><line nr="23" mi="0" ci="22" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="241" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="316" covered="30"/><counter type="LINE" missed="61" covered="3"/><counter type="COMPLEXITY" missed="61" covered="4"/><counter type="METHOD" missed="61" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="638" covered="66"/><counter type="LINE" missed="129" covered="6"/><counter type="COMPLEXITY" missed="129" covered="8"/><counter type="METHOD" missed="129" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/core/settings"><class name="io/gitlab/arturbosch/detekt/core/settings/EnvironmentAware" sourcefilename="EnvironmentAware.kt"/><class name="io/gitlab/arturbosch/detekt/core/settings/ClassloaderAware" sourcefilename="ClassloaderAware.kt"/><class name="io/gitlab/arturbosch/detekt/core/settings/ExtensionFacade" sourcefilename="ClassloaderAware.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins;)V" line="17"><counter type="INSTRUCTION" missed="34" covered="41"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPluginLoader" desc="()Ljava/lang/ClassLoader;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="closeLoaderIfNeeded" desc="()V" line="49"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pluginLoader_delegate$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/core/settings/ExtensionFacade;)Ljava/lang/ClassLoader;" line="32"><counter type="INSTRUCTION" missed="23" covered="55"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="127"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/EnvironmentAwareKt" sourcefilename="EnvironmentAware.kt"><method name="classpathEntries" desc="(Lio/github/detekt/tooling/api/spec/CompilerSpec;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPrintStream" desc="(Ljava/lang/Appendable;)Ljava/io/PrintStream;" line="73"><counter type="INSTRUCTION" missed="8" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/EnvironmentFacade" sourcefilename="EnvironmentAware.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ProjectSpec;Lio/github/detekt/tooling/api/spec/CompilerSpec;Lio/github/detekt/tooling/api/spec/LoggingSpec;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDisposable" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/Disposable;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnvironment" desc="()Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="environment_delegate$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/core/settings/EnvironmentFacade;)Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="33"><counter type="INSTRUCTION" missed="3" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="105"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/NullPrintStream$1" sourcefilename="EnvironmentAware.kt"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="68"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/LoggingAware" sourcefilename="LoggingAware.kt"/><class name="io/gitlab/arturbosch/detekt/core/settings/LoggingFacade" sourcefilename="LoggingAware.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/LoggingSpec;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSpec" desc="()Lio/github/detekt/tooling/api/spec/LoggingSpec;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutputChannel" desc="()Ljava/lang/Appendable;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorChannel" desc="()Ljava/lang/Appendable;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="info" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="40"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="debug" desc="(Lkotlin/jvm/functions/Function0;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/NullPrintStream" sourcefilename="EnvironmentAware.kt"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/LoggingAwareKt" sourcefilename="LoggingAware.kt"><method name="printStacktraceRecursively" desc="(Ljava/lang/Throwable;Ljava/lang/Appendable;)V" line="18"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/EnvironmentAwareKt$asPrintStream$1" sourcefilename="EnvironmentAware.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="write" desc="(I)V" line="80"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/settings/PropertiesFacade" sourcefilename="PropertiesFacade.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Map;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="register" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EnvironmentAware.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="3" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="26" mb="0" cb="4"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="153"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="7" covered="29"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="PropertiesFacade.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoggingAware.kt"><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="8" ci="0" mb="2" cb="0"/><line nr="20" mi="8" ci="0" mb="2" cb="0"/><line nr="22" mi="24" ci="0" mb="0" cb="0"/><line nr="23" mi="8" ci="0" mb="2" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="3" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="3" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="14" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="14" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="63"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="9" covered="9"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="ClassloaderAware.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="13" mb="1" cb="3"/><line nr="23" mi="17" ci="9" mb="1" cb="1"/><line nr="24" mi="17" ci="5" mb="1" cb="1"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="15" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="14" ci="9" mb="3" cb="3"/><line nr="34" mi="0" ci="9" mb="0" cb="4"/><line nr="35" mi="9" ci="8" mb="1" cb="1"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="4"/><line nr="51" mi="1" ci="11" mb="1" cb="1"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="127"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="178" covered="372"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="18" covered="64"/><counter type="COMPLEXITY" missed="20" covered="29"/><counter type="METHOD" missed="9" covered="19"/><counter type="CLASS" missed="2" covered="7"/></package><package name="io/gitlab/arturbosch/detekt/rules/naming/util"><class name="io/gitlab/arturbosch/detekt/rules/naming/util/ExcludeClassKt" sourcefilename="ExcludeClass.kt"><method name="isContainingExcludedClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;Lkotlin/text/Regex;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContainingExcludedClass" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;Lkotlin/text/Regex;)Z" line="11"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExcludeClass.kt"><line nr="8" mi="0" ci="20" mb="1" cb="5"/><line nr="11" mi="2" ci="19" mb="2" cb="4"/><counter type="INSTRUCTION" missed="2" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="2" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig"><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/ConfigPrinter$print$lambda$7$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/KotlinScriptAndTestExclusions" sourcefilename="Exclusion.kt"><method name="getPattern" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/Set;" line="66"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pattern$lambda$1" desc="(Ljava/lang/String;)Ljava/lang/CharSequence;" line="65"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/ExclusionKt" sourcefilename="Exclusion.kt"><method name="getExclusions" desc="()[Lio/gitlab/arturbosch/detekt/generator/printer/defaultconfig/Exclusions;" line="8"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/KotlinScriptExclusions" sourcefilename="Exclusion.kt"><method name="getPattern" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRules" desc="()Ljava/util/Set;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/Exclusions" sourcefilename="Exclusion.kt"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSets" desc="()Ljava/util/Set;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExcluded" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/Rule;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/Exclusions$Companion" sourcefilename="Exclusion.kt"><method name="getTestFolders$detekt_generator" desc="()Ljava/util/List;" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/TestExclusions" sourcefilename="Exclusion.kt"><method name="getPattern" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSets" desc="()Ljava/util/Set;" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/Set;" line="40"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pattern$lambda$1" desc="(Ljava/lang/String;)Ljava/lang/CharSequence;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/RuleSetConfigPrinterKt" sourcefilename="RuleSetConfigPrinter.kt"><method name="printRuleSetPage" desc="(Lio/github/detekt/utils/YamlNode;Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetPage;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRuleSet" desc="(Lio/github/detekt/utils/YamlNode;Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider;Ljava/util/List;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRule" desc="(Lio/github/detekt/utils/YamlNode;Lio/gitlab/arturbosch/detekt/generator/collection/Rule;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printConfiguration" desc="(Lio/github/detekt/utils/YamlNode;Lio/gitlab/arturbosch/detekt/generator/collection/Configuration;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRuleSet$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider;Ljava/util/List;Lio/github/detekt/utils/YamlNode;)Lkotlin/Unit;" line="18"><counter type="INSTRUCTION" missed="6" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRule$lambda$12$lambda$7$lambda$6" desc="(Ljava/lang/String;)Ljava/lang/CharSequence;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printRule$lambda$12" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/Rule;Lio/github/detekt/utils/YamlNode;)Lkotlin/Unit;" line="36"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="213"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/ConfigPrinter" sourcefilename="ConfigPrinter.kt"><method name="print" desc="(Ljava/util/List;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printCustomRuleConfig" desc="(Ljava/util/List;)Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultBuildConfiguration" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultConfigConfiguration" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultProcessorsConfiguration" desc="()Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultConsoleReportsConfiguration" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultOutputReportsConfiguration" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/printer/defaultconfig/ConfigPrinter$printCustomRuleConfig$lambda$10$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><sourcefile name="RuleSetConfigPrinter.kt"><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="1" cb="1"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="4"/><line nr="38" mi="0" ci="38" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="213"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigPrinter.kt"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comparisons.kt"/><sourcefile name="Exclusion.kt"><line nr="8" mi="0" ci="20" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="22" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="20" mb="0" cb="0"/><line nr="38" mi="0" ci="25" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="34" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="23" mb="0" cb="0"/><line nr="65" mi="0" ci="25" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="278"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="587"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="86"/><counter type="COMPLEXITY" missed="2" covered="38"/><counter type="METHOD" missed="1" covered="32"/><counter type="CLASS" missed="0" covered="8"/></package><package name="io/gitlab/arturbosch/detekt/api/internal"><class name="io/gitlab/arturbosch/detekt/api/internal/AutoCorrectable" sourcefilename="AutoCorrectable.kt"/><class name="io/gitlab/arturbosch/detekt/api/internal/SignaturesKt" sourcefilename="Signatures.kt"><method name="searchName" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFullSignature" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractClassName" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchSignature" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileSignature" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildClassSignature" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="4" covered="99"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFunctionSignature" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="3" covered="77"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFullSignature$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFullSignature$lambda$1" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildClassSignature$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtTypeParameter;)Ljava/lang/CharSequence;" line="67"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="362"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/internal/ValidationKt" sourcefilename="Validation.kt"><method name="validateIdentifier" desc="(Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/internal/BuiltInOutputReport" sourcefilename="BuiltInOutputReport.kt"/><class name="io/gitlab/arturbosch/detekt/api/internal/VersionsKt" sourcefilename="Versions.kt"><method name="whichOS" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whichJava" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whichKotlin" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="whichDetekt" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getManifestValue" desc="(Ljava/lang/String;)Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getManifestValue$readVersion" desc="(Ljava/lang/String;Ljava/net/URL;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="5" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getManifestValue$lambda$2" desc="(Ljava/lang/String;Ljava/net/URL;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="79"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/api/internal/DefaultRuleSetProvider" sourcefilename="DefaultRuleSetProvider.kt"/><sourcefile name="BuiltInOutputReport.kt"/><sourcefile name="AutoCorrectable.kt"/><sourcefile name="Versions.kt"><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="5" ci="20" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="9" ci="22" mb="1" cb="1"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="79"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultRuleSetProvider.kt"/><sourcefile name="Validation.kt"><line nr="3" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="16" mb="0" cb="2"/><line nr="10" mi="0" ci="13" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Signatures.kt"><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="10" mb="1" cb="3"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="4"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="1" cb="1"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="4" ci="15" mb="3" cb="3"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="17" mb="0" cb="0"/><line nr="60" mi="0" ci="14" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="27" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="17" mb="0" cb="4"/><line nr="72" mi="4" ci="21" mb="2" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="2"/><line nr="79" mi="3" ci="7" mb="1" cb="1"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="16" mb="0" cb="4"/><line nr="85" mi="0" ci="17" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="362"/><counter type="BRANCH" missed="8" covered="34"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="8" covered="24"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="25" covered="480"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="9" covered="34"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/github/detekt/compiler/plugin"><class name="io/github/detekt/compiler/plugin/DetektCommandLineProcessorKt" sourcefilename="DetektCommandLineProcessor.kt"><method name="decodeToGlobSet" desc="(Ljava/lang/String;)Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="65" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/github/detekt/compiler/plugin/Keys" sourcefilename="Keys.kt"><method name="getDEBUG" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="25"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIS_ENABLED" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="26"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCONFIG" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="27"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCONFIG_DIGEST" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="28"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBASELINE" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="29"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUSE_DEFAULT_CONFIG" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getALL_RULES" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="31"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDISABLE_DEFAULT_RULE_SETS" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="32"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPARALLEL" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getROOT_PATH" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="34"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEXCLUDES" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="35"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getREPORTS" desc="()Lorg/jetbrains/kotlin/config/CompilerConfigurationKey;" line="36"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/DetektCommandLineProcessor" sourcefilename="DetektCommandLineProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="166"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPluginId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPluginOptions" desc="()Ljava/util/Collection;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processOption" desc="(Lorg/jetbrains/kotlin/compiler/plugin/AbstractCliOption;Ljava/lang/String;Lorg/jetbrains/kotlin/config/CompilerConfiguration;)V" line="98"><counter type="INSTRUCTION" missed="117" covered="36"/><counter type="BRANCH" missed="11" covered="2"/><counter type="LINE" missed="14" covered="4"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="117" covered="208"/><counter type="BRANCH" missed="11" covered="2"/><counter type="LINE" missed="14" covered="70"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/DetektCompilerPluginRegistrar" sourcefilename="DetektCompilerPluginRegistrar.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSupportsK2" desc="()Z" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="registerExtensions" desc="(Lorg/jetbrains/kotlin/compiler/plugin/CompilerPluginRegistrar$ExtensionStorage;Lorg/jetbrains/kotlin/config/CompilerConfiguration;)V" line="16"><counter type="INSTRUCTION" missed="1" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="66"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/Options" sourcefilename="Keys.kt"/><class name="io/github/detekt/compiler/plugin/DetektAnalysisExtension" sourcefilename="DetektAnalysisExtension.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lio/github/detekt/tooling/api/spec/ProcessingSpec;Ljava/nio/file/Path;Ljava/util/Collection;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analysisCompleted" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/project/Project;Lorg/jetbrains/kotlin/descriptors/ModuleDescriptor;Lorg/jetbrains/kotlin/resolve/BindingTrace;Ljava/util/Collection;)Lorg/jetbrains/kotlin/analyzer/AnalysisResult;" line="30"><counter type="INSTRUCTION" missed="43" covered="81"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="108"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DetektAnalysisExtension.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="1" cb="1"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="12" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="13" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="12" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="108"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Keys.kt"><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="2" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektCommandLineProcessor.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="32" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="11" cb="2"/><line nr="99" mi="12" ci="0" mb="0" cb="0"/><line nr="100" mi="13" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="8" ci="0" mb="0" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="8" ci="0" mb="0" cb="0"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="12" ci="0" mb="0" cb="0"/><line nr="115" mi="16" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="27" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="14" ci="0" mb="2" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="182" covered="208"/><counter type="BRANCH" missed="13" covered="2"/><counter type="LINE" missed="22" covered="70"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="DetektCompilerPluginRegistrar.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="1" cb="1"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="10" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="19" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="66"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="231" covered="481"/><counter type="BRANCH" missed="15" covered="4"/><counter type="LINE" missed="25" covered="105"/><counter type="COMPLEXITY" missed="17" covered="21"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="1" covered="4"/></package><package name="io/github/detekt/report/sarif"><class name="io/github/detekt/report/sarif/ResultsKt" sourcefilename="Results.kt"><method name="toResults" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Ljava/lang/String;)Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toResultLevel" desc="(Lio/gitlab/arturbosch/detekt/api/Severity;)Lio/github/detekt/sarif4k/Level;" line="19"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toResult" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;Ljava/lang/String;)Lio/github/detekt/sarif4k/Result;" line="26"><counter type="INSTRUCTION" missed="4" covered="92"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLocation" desc="(Lio/gitlab/arturbosch/detekt/api/Location;Ljava/lang/String;)Lio/github/detekt/sarif4k/Location;" line="34"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="224"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/sarif/RuleDescriptorsKt" sourcefilename="RuleDescriptors.kt"><method name="toReportingDescriptors" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDescriptor" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Lio/github/detekt/sarif4k/ReportingDescriptor;" line="28"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSeverity" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;)Lio/gitlab/arturbosch/detekt/api/Severity;" line="43"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseToSeverity" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Severity;" line="50"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="215"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/sarif/SarifOutputReportKt" sourcefilename="SarifOutputReport.kt"/><class name="io/github/detekt/report/sarif/SarifOutputReport" sourcefilename="SarifOutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="57"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="243"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SarifOutputReport.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="15" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="1" cb="1"/><line nr="36" mi="0" ci="7" mb="1" cb="1"/><line nr="37" mi="1" ci="18" mb="1" cb="1"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="22" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="30" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="23" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="2"/><line nr="65" mi="0" ci="27" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="243"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleDescriptors.kt"><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="15" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="1" cb="3"/><line nr="44" mi="2" ci="10" mb="1" cb="1"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="4" ci="31" mb="2" cb="4"/><line nr="52" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="215"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Results.kt"><line nr="17" mi="0" ci="12" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="3"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="31" mb="0" cb="0"/><line nr="27" mi="0" ci="18" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="4" ci="24" mb="0" cb="0"/><line nr="30" mi="0" ci="13" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="15" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="13" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="224"/><counter type="BRANCH" missed="0" covered="5"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="682"/><counter type="BRANCH" missed="7" covered="20"/><counter type="LINE" missed="1" covered="81"/><counter type="COMPLEXITY" missed="7" covered="20"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/gitlab/arturbosch/detekt/authors"><class name="io/gitlab/arturbosch/detekt/authors/ViolatesTypeResolutionRequirementsKt" sourcefilename="ViolatesTypeResolutionRequirements.kt"/><class name="io/gitlab/arturbosch/detekt/authors/ViolatesTypeResolutionRequirementsKt$isAnnotatedWith$1" sourcefilename="ViolatesTypeResolutionRequirements.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Lorg/jetbrains/kotlin/psi/KtTypeReference;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/authors/ViolatesTypeResolutionRequirementsKt$isAnnotatedWith$2" sourcefilename="ViolatesTypeResolutionRequirements.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/types/KotlinType;" line="84"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/authors/RuleAuthorsProvider" sourcefilename="RuleAuthorsProvider.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="21"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/authors/UseEntityAtName" sourcefilename="UseEntityAtName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="29"><counter type="INSTRUCTION" missed="3" covered="64"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNameIdentifierReceiver" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="52"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEntityFromCall" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="71"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="147"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/authors/ViolatesTypeResolutionRequirements" sourcefilename="ViolatesTypeResolutionRequirements.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuleAuthorsProvider.kt"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="9" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="10" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UseEntityAtName.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="4"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="2"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="3" ci="13" mb="1" cb="1"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="2" ci="10" mb="2" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="1" cb="3"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="1" cb="3"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="2" ci="9" mb="1" cb="3"/><line nr="73" mi="2" ci="12" mb="2" cb="2"/><counter type="INSTRUCTION" missed="11" covered="147"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="1" covered="26"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ViolatesTypeResolutionRequirements.kt"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="4"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="4"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="1" cb="1"/><line nr="68" mi="0" ci="12" mb="0" cb="4"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="160"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="41" covered="307"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="9" covered="57"/><counter type="COMPLEXITY" missed="12" covered="24"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="1" covered="4"/></package><package name="io/github/detekt/test/utils"><class name="io/github/detekt/test/utils/KotlinCoreEnvironmentWrapperKt" sourcefilename="KotlinCoreEnvironmentWrapper.kt"><method name="createEnvironment" desc="(Ljava/util/List;Ljava/util/List;)Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEnvironment$default" desc="(Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;" line="30"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="11"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/Resources" sourcefilename="Resources.kt"/><class name="io/github/detekt/test/utils/CompileExtensionsKt" sourcefilename="CompileExtensions.kt"><method name="compileContentForTest" desc="(Ljava/lang/String;Ljava/lang/String;)Lorg/jetbrains/kotlin/psi/KtFile;" line="16"><counter type="INSTRUCTION" missed="11" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileContentForTest" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Lorg/jetbrains/kotlin/psi/KtFile;" line="28"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileContentForTest$default" desc="(Ljava/lang/String;Ljava/nio/file/Path;ILjava/lang/Object;)Lorg/jetbrains/kotlin/psi/KtFile;" line="25"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compileForTest" desc="(Ljava/nio/file/Path;)Lorg/jetbrains/kotlin/psi/KtFile;" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="81"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/FileExtensionKt" sourcefilename="FileExtension.kt"><method name="createTempFileForTest" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;" line="13"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempDirectoryForTest" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="24"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/StringPrintStream" sourcefilename="StringPrintStream.kt"><method name="&lt;init&gt;" desc="(Ljava/io/ByteArrayOutputStream;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/ResourcesKt" sourcefilename="Resources.kt"><method name="resourceUrl" desc="(Ljava/lang/String;)Ljava/net/URL;" line="11"><counter type="INSTRUCTION" missed="18" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resource" desc="(Ljava/lang/String;)Ljava/net/URI;" line="15"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resourceAsPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="17"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readResourceContent" desc="(Ljava/lang/String;)Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="64"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/NullOutputStream" sourcefilename="NullPrintStream.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(I)V" line="11"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/KotlinScriptEngine$compile$1" sourcefilename="KotlinScriptEngine.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/NullPrintStream" sourcefilename="NullPrintStream.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/KotlinScriptEngine" sourcefilename="KotlinScriptEngine.kt"><method name="compile" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compilationConfiguration$lambda$1$lambda$0" desc="(Lkotlin/script/experimental/jvm/JvmScriptCompilationConfigurationBuilder;)Lkotlin/Unit;" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compilationConfiguration$lambda$1" desc="(Lkotlin/script/experimental/api/ScriptCompilationConfiguration$Builder;)Lkotlin/Unit;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile$lambda$3$lambda$2" desc="(Lkotlin/script/experimental/api/ScriptDiagnostic;)Ljava/lang/CharSequence;" line="42"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/KotlinCoreEnvironmentWrapper" sourcefilename="KotlinCoreEnvironmentWrapper.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;Lorg/jetbrains/kotlin/com/intellij/openapi/Disposable;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnv" desc="()Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="17"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispose" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/test/utils/KtTestCompiler" sourcefilename="KtTestCompiler.kt"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEnvironment" desc="(Ljava/util/List;Ljava/util/List;)Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;" line="40"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEnvironment$default" desc="(Lio/github/detekt/test/utils/KtTestCompiler;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;" line="36"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createKtFile" desc="(Ljava/lang/String;Ljava/nio/file/Path;)Lorg/jetbrains/kotlin/psi/KtFile;" line="66"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kotlinStdLibPath" desc="()Ljava/io/File;" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="kotlinxCoroutinesCorePath" desc="()Ljava/io/File;" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="124"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NullPrintStream.kt"><line nr="6" mi="0" ci="7" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CompileExtensions.kt"><line nr="16" mi="10" ci="19" mb="3" cb="3"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="17" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="14" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="81"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringPrintStream.kt"><line nr="6" mi="0" ci="1" mb="0" cb="0"/><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="4" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KotlinScriptEngine.kt"><line nr="20" mi="0" ci="14" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="16" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="21" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FileExtension.kt"><line nr="13" mi="0" ci="13" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtTestCompiler.kt"><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="11" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="124"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Resources.kt"><line nr="11" mi="0" ci="18" mb="0" cb="2"/><line nr="12" mi="18" ci="6" mb="1" cb="1"/><line nr="15" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="64"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KotlinCoreEnvironmentWrapper.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="9" ci="5" mb="1" cb="1"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="10" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="67" covered="504"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="7" covered="71"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="2" covered="32"/><counter type="CLASS" missed="0" covered="11"/></package><package name="io/gitlab/arturbosch/detekt/core/config/validation"><class name="io/gitlab/arturbosch/detekt/core/config/validation/InvalidPropertiesConfigValidator$Companion" sourcefilename="InvalidPropertiesConfigValidator.kt"><method name="propertyDoesNotExists$detekt_core" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="86"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestedConfigurationExpected$detekt_core" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="92"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unexpectedNestedConfiguration$detekt_core" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="95"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyShouldBeAnArray$detekt_core" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="98"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/MissingRulesConfigValidator" sourcefilename="MissingRulesConfigValidator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Ljava/util/Set;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Lio/gitlab/arturbosch/detekt/core/config/validation/ValidationSettings;)Ljava/util/Collection;" line="22"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateRuleSet" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;)Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForMissingRules" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleMissing" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="57"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ruleSetMissing" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="63"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubMapOrNull" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Ljava/util/Map;" line="69"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="190"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/Deprecation" sourcefilename="Deprecations.kt"/><class name="io/gitlab/arturbosch/detekt/core/config/validation/DeprecationsKt" sourcefilename="Deprecations.kt"><method name="loadDeprecations" desc="()Ljava/util/Set;" line="21"><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDeprecations" desc="(Ljava/util/Properties;)Ljava/util/Set;" line="31"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deprecationFromPath" desc="(Ljava/lang/String;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/core/config/validation/Deprecation;" line="36"><counter type="INSTRUCTION" missed="15" covered="52"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="114"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/ConfigValidationKt" sourcefilename="ConfigValidation.kt"><method name="getDEFAULT_PROPERTY_EXCLUDES" desc="()Ljava/util/List;" line="22"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConfiguration" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConfig" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Set;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateYamlConfig" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Ljava/util/Set;)Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformIf" desc="(Ljava/lang/Object;ZLkotlin/jvm/functions/Function0;)Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderMessage" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="2" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConfiguration$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Ljava/lang/CharSequence;" line="49"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateYamlConfig$lambda$9$lambda$8" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="101"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="424"/><counter type="BRANCH" missed="3" covered="28"/><counter type="LINE" missed="2" covered="61"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/MissingRulesConfigValidator$Companion" sourcefilename="MissingRulesConfigValidator.kt"><method name="getRuleSetNames" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadRuleSets" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/InvalidPropertiesConfigValidator" sourcefilename="InvalidPropertiesConfigValidator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Ljava/util/Set;Ljava/util/Set;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Lio/gitlab/arturbosch/detekt/core/config/validation/ValidationSettings;)Ljava/util/Collection;" line="23"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testKeys" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;" line="30"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testKeys$default" desc="(Lio/gitlab/arturbosch/detekt/core/config/validation/InvalidPropertiesConfigValidator;Ljava/util/Map;Ljava/util/Map;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkProp" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="241"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/ValidatableConfiguration" sourcefilename="ValidatableConfiguration.kt"/><class name="io/gitlab/arturbosch/detekt/core/config/validation/ValidationSettings" sourcefilename="ValidationSettings.kt"><method name="&lt;init&gt;" desc="(Z)V" line="3"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCheckExhaustiveness" desc="()Z" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/ConfigValidationKt$checkConfiguration$$inlined$loadExtensions$default$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/config/validation/ConfigValidationKt$checkConfiguration$$inlined$loadExtensions$default$2" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/DeprecatedProperty" sourcefilename="Deprecations.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleName" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyName" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/ConfigValidationKt$checkConfiguration$$inlined$loadExtensions$default$2$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/DeprecatedRule" sourcefilename="Deprecations.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleName" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/DefaultPropertiesConfigValidator" sourcefilename="DefaultPropertiesConfigValidator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/Collection;" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="10"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate$patterns" desc="(Lio/gitlab/arturbosch/detekt/core/config/validation/DefaultPropertiesConfigValidator;Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/Set;" line="19"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="103"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/AbstractYamlConfigValidator" sourcefilename="AbstractYamlConfigValidator.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/Collection;" line="11"><counter type="INSTRUCTION" missed="29" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="8"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/config/validation/DeprecatedPropertiesConfigValidator" sourcefilename="DeprecatedPropertiesConfigValidator.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/core/config/YamlConfig;Lio/gitlab/arturbosch/detekt/core/config/validation/ValidationSettings;)Ljava/util/Collection;" line="17"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasValue" desc="(Ljava/util/Map;Lio/gitlab/arturbosch/detekt/core/config/validation/DeprecatedProperty;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createNotification" desc="(Lio/gitlab/arturbosch/detekt/core/config/validation/DeprecatedProperty;)Lio/gitlab/arturbosch/detekt/api/Notification;" line="33"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPath" desc="(Lio/gitlab/arturbosch/detekt/core/config/validation/DeprecatedProperty;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="125"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultPropertiesConfigValidator.kt"><line nr="10" mi="4" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="3" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="2"/><line nr="21" mi="0" ci="16" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="103"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValidatableConfiguration.kt"/><sourcefile name="AbstractYamlConfigValidator.kt"><line nr="8" mi="4" ci="3" mb="0" cb="0"/><line nr="11" mi="11" ci="3" mb="1" cb="1"/><line nr="12" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="15" mi="12" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingRulesConfigValidator.kt"><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="3" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="0" ci="7" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="23" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="2"/><line nr="73" mi="0" ci="14" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="213"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InvalidPropertiesConfigValidator.kt"><line nr="8" mi="0" ci="1" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="22" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="3" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="2"/><line nr="32" mi="0" ci="20" mb="0" cb="2"/><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="4"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="1" cb="3"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="4"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="2"/><line nr="68" mi="0" ci="12" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="4"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="6"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="4"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="18" mb="0" cb="0"/><line nr="95" mi="0" ci="18" mb="0" cb="0"/><line nr="98" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="329"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Loading.kt"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ConfigValidation.kt"><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="28" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="4"/><line nr="49" mi="0" ci="24" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="17" mb="0" cb="0"/><line nr="52" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="17" mb="0" cb="4"/><line nr="63" mi="0" ci="14" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="2"/><line nr="76" mi="0" ci="11" mb="0" cb="2"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="17" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="14" mb="1" cb="3"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="2" cb="1"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="424"/><counter type="BRANCH" missed="3" covered="28"/><counter type="LINE" missed="2" covered="61"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DeprecatedPropertiesConfigValidator.kt"><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="3" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="18" mb="0" cb="4"/><line nr="26" mi="0" ci="18" mb="0" cb="4"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="125"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comparisons.kt"/><sourcefile name="Deprecations.kt"><line nr="7" mi="0" ci="1" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="3" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="5" ci="14" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="18" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="16" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="1" cb="2"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="2" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="182"/><counter type="BRANCH" missed="1" covered="2"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ValidationSettings.kt"><line nr="3" mi="0" ci="9" mb="0" cb="0"/><line nr="4" mi="0" ci="8" mb="0" cb="0"/><line nr="5" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="79" covered="1455"/><counter type="BRANCH" missed="6" covered="88"/><counter type="LINE" missed="6" covered="218"/><counter type="COMPLEXITY" missed="13" covered="96"/><counter type="METHOD" missed="7" covered="54"/><counter type="CLASS" missed="0" covered="14"/></package><package name="io/gitlab/arturbosch/detekt/formatting"><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProvider" sourcefilename="FormattingProvider.kt"><method name="&lt;init&gt;" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="125"><counter type="INSTRUCTION" missed="0" covered="395"/><counter type="LINE" missed="0" covered="101"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="231"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="421"/><counter type="LINE" missed="0" covered="105"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/RuleSetConfigProperty" sourcefilename="RuleSetConfigProperty.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/KtLintLineColCalculator" sourcefilename="KtLintLineColCalculator.kt"><method name="calculateLineColByOffset" desc="(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeText" desc="(Ljava/lang/String;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildPositionInTextLocator" desc="(Ljava/lang/String;)Lkotlin/jvm/functions/Function1;" line="24"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildPositionInTextLocator$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/formatting/KtLintLineColCalculator$SegmentTree;I)Lkotlin/Pair;" line="38"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="113"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProvider$Companion" sourcefilename="FormattingProvider.kt"><method name="getAndroid" desc="()Lio/gitlab/arturbosch/detekt/formatting/RuleSetConfigProperty;" line="231"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAutoCorrect" desc="()Lio/gitlab/arturbosch/detekt/formatting/RuleSetConfigProperty;" line="234"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="231"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="38"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/RuleSetConfigPropertyDelegate" sourcefilename="RuleSetConfigProperty.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="(Ljava/lang/Object;Lkotlin/reflect/KProperty;)Lio/gitlab/arturbosch/detekt/formatting/RuleSetConfigProperty;" line="17"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/RuleSetConfigPropertyKt" sourcefilename="RuleSetConfigProperty.kt"><method name="ruleSetConfig" desc="(Ljava/lang/Object;)Lkotlin/properties/ReadOnlyProperty;" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/KtLintLineColCalculator$SegmentTree" sourcefilename="KtLintLineColCalculator.kt"><method name="&lt;init&gt;" desc="([I)V" line="48"><counter type="INSTRUCTION" missed="18" covered="49"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Lio/gitlab/arturbosch/detekt/formatting/KtLintLineColCalculator$Segment;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(I)I" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binarySearch" desc="(III)I" line="73"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="109"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/FormattingRule" sourcefilename="FormattingRule.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAndroid" desc="()Z" line="39"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="61"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeEditorConfigProperties" desc="()Lcom/pinterest/ktlint/rule/engine/core/api/editorconfig/EditorConfig;" line="64"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emitFinding" desc="(ILjava/lang/String;ZLorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeVisitChildNodes" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterVisitChildNodes" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitASTNodes" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotDummyElement" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)Z" line="138"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeVisitChildNodes$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;ILjava/lang/String;Z)Lcom/pinterest/ktlint/rule/engine/core/api/AutocorrectDecision;" line="113"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterVisitChildNodes$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;ILjava/lang/String;Z)Lcom/pinterest/ktlint/rule/engine/core/api/AutocorrectDecision;" line="120"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="375"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="5" covered="22"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProviderKt$defaultRuleOrderComparator$$inlined$thenBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/formatting/KtLintLineColCalculator$Segment" sourcefilename="KtLintLineColCalculator.kt"><method name="&lt;init&gt;" desc="(II)V" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()I" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProviderKt$defaultRuleOrderComparator$$inlined$thenBy$2" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProviderKt" sourcefilename="FormattingProvider.kt"><method name="sorted" desc="(Ljava/util/List;)Ljava/util/List;" line="244"><counter type="INSTRUCTION" missed="11" covered="136"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultRuleOrderComparator" desc="()Ljava/util/Comparator;" line="285"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrappingRuleId" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;)Lcom/pinterest/ktlint/rule/engine/core/api/RuleId;" line="292"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitorModifiers" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;)Ljava/util/Set;" line="295"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRunAsLateAsPossible" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;)Z" line="298"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAfterRules" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;)Ljava/util/List;" line="301"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoRunAfterRules" desc="(Lio/gitlab/arturbosch/detekt/formatting/FormattingRule;)Z" line="304"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sorted$lambda$3" desc="(Ljava/util/List;Lkotlin/Pair;)Z" line="258"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sorted$lambda$7" desc="(Ljava/util/List;Lkotlin/Pair;)Z" line="276"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="218"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/FormattingProviderKt$defaultRuleOrderComparator$$inlined$compareBy$1" sourcefilename="Comparisons.kt"/><sourcefile name="FormattingRule.kt"><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="2" ci="20" mb="1" cb="3"/><line nr="46" mi="0" ci="29" mb="0" cb="2"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="1" cb="3"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="18" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="2" ci="5" mb="1" cb="1"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="2" ci="7" mb="1" cb="1"/><line nr="139" mi="0" ci="10" mb="1" cb="3"/><counter type="INSTRUCTION" missed="6" covered="375"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="5" covered="22"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtLintLineColCalculator.kt"><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="16" mb="0" cb="2"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="9" ci="7" mb="2" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="9" ci="6" mb="2" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="2" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="13" mb="0" cb="2"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="237"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="RuleSetConfigProperty.kt"><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="3" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="20" mb="0" cb="2"/><line nr="20" mi="6" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="66"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Comparisons.kt"/><sourcefile name="FormattingProvider.kt"><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="198" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="24" mb="0" cb="0"/><line nr="234" mi="8" ci="18" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="11" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="16" mb="0" cb="4"/><line nr="254" mi="0" ci="11" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="13" mb="0" cb="0"/><line nr="262" mi="0" ci="8" mb="0" cb="4"/><line nr="263" mi="0" ci="9" mb="0" cb="0"/><line nr="264" mi="10" ci="3" mb="1" cb="1"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="14" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="677"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="138"/><counter type="COMPLEXITY" missed="2" covered="19"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="59" covered="1355"/><counter type="BRANCH" missed="12" covered="50"/><counter type="LINE" missed="2" covered="247"/><counter type="COMPLEXITY" missed="16" covered="62"/><counter type="METHOD" missed="4" covered="43"/><counter type="CLASS" missed="0" covered="10"/></package><package name="io/gitlab/arturbosch/detekt/core/reporting/console"><class name="io/gitlab/arturbosch/detekt/core/reporting/console/ComplexityReport" sourcefilename="ComplexityReport.kt"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/FileBasedIssuesReport" sourcefilename="FileBasedIssuesReport.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Ljava/util/List;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/ProjectStatisticsReport" sourcefilename="ProjectStatisticsReport.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/AbstractIssuesReport" sourcefilename="AbstractIssuesReport.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/IssuesReport" sourcefilename="IssuesReport.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Ljava/util/List;)Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/NotificationReport" sourcefilename="NotificationReport.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/console/ProjectStatisticsReport$render$lambda$2$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/reporting/console/LiteIssuesReport" sourcefilename="LiteIssuesReport.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Ljava/util/List;)Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileBasedIssuesReport.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="13" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotificationReport.kt"><line nr="10" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractIssuesReport.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IssuesReport.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LiteIssuesReport.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="13" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="24" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProjectStatisticsReport.kt"><line nr="10" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="2"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexityReport.kt"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="2"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comparisons.kt"/><counter type="INSTRUCTION" missed="0" covered="346"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="57"/><counter type="COMPLEXITY" missed="0" covered="33"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="7"/></package><package name="io/gitlab/arturbosch/detekt/libraries"><class name="io/gitlab/arturbosch/detekt/libraries/LibraryCodeMustSpecifyReturnType" sourcefilename="LibraryCodeMustSpecifyReturnType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowOmitUnit" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnitOmissionAllowed" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="80"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="explicitReturnTypeRequired" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="159"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/libraries/LibraryEntitiesShouldNotBePublic" sourcefilename="LibraryEntitiesShouldNotBePublic.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="33"><counter type="INSTRUCTION" missed="1" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeAlias" desc="(Lorg/jetbrains/kotlin/psi/KtTypeAlias;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="119"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/libraries/RuleLibrariesProvider" sourcefilename="RuleLibrariesProvider.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="21"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/libraries/ForbiddenPublicDataClass" sourcefilename="ForbiddenPublicDataClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnorePackages" desc="()Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignorePackages_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="38"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RuleLibrariesProvider.kt"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="9" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="12" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="LibraryCodeMustSpecifyReturnType.kt"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="28" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="4"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="2" ci="21" mb="2" cb="6"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="159"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenPublicDataClass.kt"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="39" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="42" mi="0" ci="13" mb="1" cb="3"/><line nr="44" mi="0" ci="13" mb="0" cb="4"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="4"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="139"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LibraryEntitiesShouldNotBePublic.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="27" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="2" cb="2"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="119"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="37" covered="417"/><counter type="BRANCH" missed="6" covered="38"/><counter type="LINE" missed="10" covered="61"/><counter type="COMPLEXITY" missed="9" covered="32"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="1" covered="3"/></package><package name="io/gitlab/arturbosch/detekt/rules/style"><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivatePropertyKt" sourcefilename="UnusedPrivateProperty.kt"><method name="isExpectClassConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtConstructor;)Z" line="200"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDataOrValueClassConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtConstructor;)Z" line="203"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrivateProperty" desc="(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" line="208"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPropertyParameter" desc="(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" line="211"><counter type="INSTRUCTION" missed="6" covered="32"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="87"/><counter type="BRANCH" missed="10" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="10" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt" sourcefilename="Junk.kt"><method name="findKtElementInParents" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lkotlin/sequences/Sequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuperCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIfConditionGuardClause" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="50"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElvisOperatorGuardClause" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="56"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findKtElementInParents$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElvisOperatorGuardClause$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="56"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="123"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor$evaluateAssignmentExpression$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseEmptyCounterpart" sourcefilename="UseEmptyCounterpart.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="67"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="75"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenNamedParam" sourcefilename="ForbiddenNamedParam.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethods" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="70"><counter type="INSTRUCTION" missed="1" covered="133"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methods_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="205"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedVariable" sourcefilename="UnusedVariable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedNames" desc="()Lkotlin/text/Regex;" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseOrEmpty" sourcefilename="UseOrEmpty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="52"><counter type="INSTRUCTION" missed="12" covered="125"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyElement" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="79"><counter type="INSTRUCTION" missed="9" covered="77"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="298"/><counter type="BRANCH" missed="17" covered="39"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ModifierOrder" sourcefilename="ModifierOrder.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitModifierList" desc="(Lorg/jetbrains/kotlin/psi/KtModifierList;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitModifierList$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitModifierList$lambda$2" desc="(Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Ljava/lang/CharSequence;" line="88"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="212"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedImport$Companion" sourcefilename="UnusedImport.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryLetKt" sourcefilename="UnnecessaryLet.kt"><method name="inCallChains" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="87"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeReplacedWithCall" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="92"><counter type="INSTRUCTION" missed="4" covered="78"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countLambdaParameterReference" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)I" line="121"><counter type="INSTRUCTION" missed="6" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countLambdaParameterReference$lambda$3$lambda$2" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)Z" line="132"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="192"/><counter type="BRANCH" missed="7" covered="27"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MaxLineLength$Companion" sourcefilename="MaxLineLength.kt"><method name="findFirstMeaningfulKtElementInParents" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="121"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateClassKt" sourcefilename="UnusedPrivateClass.kt"><method name="orInnerType" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtElement;" line="197"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orInnerType" desc="(Lorg/jetbrains/kotlin/psi/KtTypeElement;)Lorg/jetbrains/kotlin/psi/KtTypeElement;" line="202"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$lambda$0$$inlined$isGuardClause$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseAnyOrNoneInsteadOfFind$Companion" sourcefilename="UseAnyOrNoneInsteadOfFind.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/TrimMultilineRawStringKt" sourcefilename="TrimMultilineRawString.kt"><method name="isRawStringWithLineBreak" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" line="73"><counter type="INSTRUCTION" missed="3" covered="64"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTrimmed" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/util/List;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpectedAsConstant" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" line="92"><counter type="INSTRUCTION" missed="4" covered="136"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="245"/><counter type="BRANCH" missed="11" covered="49"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy" sourcefilename="BracesOnIfStatements.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Ljava/lang/String;" line="259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="260"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/SpacingAfterPackageDeclaration" sourcefilename="SpacingAfterPackageDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="41"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPackage" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Z" line="51"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkPackageDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtImportList;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPackageDeclaration" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="65"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkKtElementsDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtImportList;)V" line="68"><counter type="INSTRUCTION" missed="5" covered="50"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLinebreakAfterElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="195"/><counter type="BRANCH" missed="12" covered="36"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="12" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseDataClass$Companion" sourcefilename="UseDataClass.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank" sourcefilename="UseIfEmptyOrIfBlank.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="54"><counter type="INSTRUCTION" missed="7" covered="141"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="condition" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Lkotlin/Pair;" line="83"><counter type="INSTRUCTION" missed="8" covered="30"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replacement" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lio/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement;" line="95"><counter type="INSTRUCTION" missed="9" covered="42"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="389"/><counter type="BRANCH" missed="12" covered="38"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="12" covered="18"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenMethodCall$ForbiddenMethod" sourcefilename="ForbiddenMethodCall.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/psi/FunctionMatcher;Ljava/lang/String;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lio/github/detekt/psi/FunctionMatcher;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReason" desc="()Ljava/lang/String;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/Forbidden" sourcefilename="ForbiddenImport.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;Ljava/lang/String;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImport" desc="()Lkotlin/text/Regex;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReason" desc="()Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedImport" sourcefilename="UnusedImport.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="161"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="205"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount" sourcefilename="ReturnCount.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()I" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludedFunctions" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeLabeled" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeReturnFromLambda" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeGuardClauses" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeIgnored" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countReturnStatements" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)I" line="89"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNamedReturnFromLambda" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="101"><counter type="INSTRUCTION" missed="1" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludedFunctions_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countReturnStatements$isExcluded" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;Lio/gitlab/arturbosch/detekt/rules/style/ReturnCount;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countReturnStatements$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lkotlin/sequences/Sequence;" line="95"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countReturnStatements$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/style/ReturnCount;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="327"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass" sourcefilename="UnnecessaryInnerClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThisExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThisExpression;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findParentClasses" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForOuterUsage" desc="(Lkotlin/jvm/functions/Function0;)V" line="88"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findResolvedContainingClassId" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/ClassId;" line="104"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="referenceClassId" desc="(Lorg/jetbrains/kotlin/psi/KtThisExpression;)Lorg/jetbrains/kotlin/name/ClassId;" line="108"><counter type="INSTRUCTION" missed="1" covered="32"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/ClassId;" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThisExpression$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryInnerClass;Lorg/jetbrains/kotlin/psi/KtThisExpression;)Lorg/jetbrains/kotlin/name/ClassId;" line="74"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="270"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryLet$Companion" sourcefilename="UnnecessaryLet.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/NullableBooleanCheck" sourcefilename="NullableBooleanCheck.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="88"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBooleanConstant" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="102"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/EqualsOnSignatureLine" sourcefilename="EqualsOnSignatureLine.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/AbstractClassCanBeConcreteClass" sourcefilename="AbstractClassCanBeConcreteClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeAnnotatedClasses" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="80"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkMembers" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Ljava/util/List;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="members" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasConstructorParameter" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasInheritedMember" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Z)Z" line="107"><counter type="INSTRUCTION" missed="10" covered="61"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnyParentAbstract" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="119"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeAnnotatedClasses_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="370"/><counter type="BRANCH" missed="14" covered="56"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="14" covered="33"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$yieldStatementsSkippingGuardClauses$1$invokeSuspend$$inlined$forEach$lambda$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ClassOrdering" sourcefilename="ClassOrdering.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassBody" desc="(Lorg/jetbrains/kotlin/psi/KtClassBody;)V" line="58"><counter type="INSTRUCTION" missed="5" covered="209"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimalNumberOfViolations" desc="(Ljava/util/List;)Lkotlin/Pair;" line="103"><counter type="INSTRUCTION" missed="3" covered="175"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="392"/><counter type="BRANCH" missed="5" covered="37"/><counter type="LINE" missed="1" covered="62"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MaxLineLengthKt" sourcefilename="MaxLineLength.kt"><method name="isInsideRawString" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString" sourcefilename="StringShouldBeRawString.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxEscapedCharacterCount" desc="()I" line="61"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredCharacters" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeftMostElementOfLeftSubtree" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" line="68"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRightMostElementOfRightSubtree" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" line="74"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" line="79"><counter type="INSTRUCTION" missed="13" covered="111"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPivotElementInTheTree" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Lorg/jetbrains/kotlin/psi/KtElement;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringSequenceExcludingRawString" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootExpression" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtElement;" line="146"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression$lambda$2$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString;Lkotlin/text/MatchResult;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString;Ljava/lang/String;)Lkotlin/sequences/Sequence;" line="99"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringSequenceExcludingRawString$getStringSequence" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lkotlin/sequences/Sequence;" line="126"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringSequenceExcludingRawString$lambda$3" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" line="139"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStringSequenceExcludingRawString$lambda$4" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Ljava/lang/String;" line="141"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="383"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="11" covered="29"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/SafeCast" sourcefilename="SafeCast.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="61"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIfElseNull" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIdentifier" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)Z" line="61"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullConstant" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="64"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="69"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReport" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="150"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryApply$hasOnlyOneMemberAccessStatement$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ExpressionBodySyntax$containsReturnStmtsInNullableArguments$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull$Companion" sourcefilename="UselessCallOnNotNull.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryInheritance" sourcefilename="UnnecessaryInheritance.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$lambda$1$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$lambda$1$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$lambda$1$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget" sourcefilename="UnnecessaryAnnotationUseSiteTarget.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseSiteTarget" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/Section" sourcefilename="ClassOrdering.kt"><method name="&lt;init&gt;" desc="(I)V" line="169"><counter type="INSTRUCTION" missed="11" covered="20"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="()I" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDescription" desc="()Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lio/gitlab/arturbosch/detekt/rules/style/Section;)I" line="183"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="35"/><counter type="BRANCH" missed="4" covered="7"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenSuppress$filterForbiddenRules$lambda$2$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenSuppress$filterForbiddenRules$lambda$2$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MagicNumber$Companion" sourcefilename="MagicNumber.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ExpressionBodySyntax" sourcefilename="ExpressionBodySyntax.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeLineWrapping" desc="()Z" line="46"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForExpressionBodySyntax" desc="(Lorg/jetbrains/kotlin/psi/KtDeclarationWithBody;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleReturnStatement" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtReturnExpression;" line="70"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsReturnStmtsInNullableArguments" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLineWrapped" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsReturnStmtsInNullableArguments$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentationKt" sourcefilename="MultilineRawStringIndentation.kt"><method name="report" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/psi/KtElement;Lio/gitlab/arturbosch/detekt/api/Location;Ljava/lang/String;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="message" desc="(II)Ljava/lang/String;" line="165"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSurroundedByLineBreaks" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlankOrLineBreak" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;)Z" line="174"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTabChar" desc="(C)Z" line="178"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countIndent" desc="(Ljava/lang/String;)I" line="180"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;I)Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLocation" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Lio/gitlab/arturbosch/detekt/api/SourceLocation;Lio/gitlab/arturbosch/detekt/api/SourceLocation;)Lio/gitlab/arturbosch/detekt/api/Location;" line="185"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="221"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseDataClass" sourcefilename="UseDataClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeAnnotatedClasses" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowVars" desc="()Z" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKlass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Lio/github/detekt/psi/AnnotationExcluder;)V" line="73"><counter type="INSTRUCTION" missed="6" covered="204"/><counter type="BRANCH" missed="6" covered="46"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="6" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isClosedForExtension" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyExtendsSimpleInterfaces" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInterfaceInSameFile" desc="(Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)Z" line="117"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIncorrectClassType" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyPrivateConstructors" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="132"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractConstructorPropertyParameters" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="138"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractConstructorNonPropertyParameters" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="144"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefaultFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/types/KotlinType;Ljava/util/List;)Z" line="153"><counter type="INSTRUCTION" missed="8" covered="77"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeAnnotatedClasses_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UseDataClass;Lio/github/detekt/psi/AnnotationExcluder;Lorg/jetbrains/kotlin/psi/KtClass;)Lkotlin/Unit;" line="68"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="607"/><counter type="BRANCH" missed="20" covered="100"/><counter type="LINE" missed="1" covered="75"/><counter type="COMPLEXITY" missed="20" covered="56"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount" sourcefilename="ThrowsCount.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMax" desc="()I" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeGuardClauses" desc="()Z" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$1$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/psi/KtExpression;)Lkotlin/sequences/Sequence;" line="59"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeExpression" sourcefilename="DoubleNegativeExpression.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrefixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPrefixExpression;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDoubleNegativeExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBooleanNotCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="85"><counter type="INSTRUCTION" missed="3" covered="22"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryBackticks$Companion" sourcefilename="UnnecessaryBackticks.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/MaxChainedCallsOnSameLine" sourcefilename="MaxChainedCallsOnSameLine.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxChainedCalls" desc="()I" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countChainedCalls" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)I" line="68"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReferenceToPackageOrClass" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callOnNewLine" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z" line="85"><counter type="INSTRUCTION" missed="3" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReceiverEndPosition" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)I" line="98"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReceiverEndPosition$indexOfReceiverEnd" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)I" line="97"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="258"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="4" covered="24"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ClassOrdering$DeclarationWithSection" sourcefilename="ClassOrdering.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;Lio/gitlab/arturbosch/detekt/rules/style/Section;)V" line="143"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclaration" desc="()Lorg/jetbrains/kotlin/psi/KtDeclaration;" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSection" desc="()Lio/gitlab/arturbosch/detekt/rules/style/Section;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantConstructorKeyword" sourcefilename="RedundantConstructorKeyword.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoModifier" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPreviousComment" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPreviousComment$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAny$Companion" sourcefilename="UnnecessaryAny.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString$getRootExpression$1" sourcefilename="StringShouldBeRawString.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/NavigatablePsiElement;)Ljava/lang/Boolean;" line="152"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/EqualsOnSignatureLine$Companion" sourcefilename="EqualsOnSignatureLine.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCountKt" sourcefilename="ReturnCount.kt"><method name="contains" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedParameter" sourcefilename="UnusedParameter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedNames" desc="()Lkotlin/text/Regex;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$ParameterCheckVisitor$visitWhenExpression$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UtilityClassWithPublicConstructor" sourcefilename="UtilityClassWithPublicConstructor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeCheckedForUtilityClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyUtilityClassMembers" desc="(Ljava/util/List;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompanionObject" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z" line="113"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="186"/><counter type="BRANCH" missed="3" covered="39"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseRequire" sourcefilename="UseRequire.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreExpressionsInBlock" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifier" sourcefilename="RedundantVisibilityModifier.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitlyPublicNotOverridden" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitlyPublic" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExplicitApiModeActive" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="77"><counter type="INSTRUCTION" missed="5" covered="58"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="141"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy" sourcefilename="BracesOnWhenStatements.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Ljava/lang/String;" line="236"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="236"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="237"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MagicNumber" sourcefilename="MagicNumber.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreNumbers" desc="()Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreHashCodeFunction" desc="()Z" line="84"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnorePropertyDeclaration" desc="()Z" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreLocalVariableDeclaration" desc="()Z" line="90"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreConstantDeclaration" desc="()Z" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreCompanionObjectPropertyDeclaration" desc="()Z" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreAnnotation" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreNamedArgument" desc="()Z" line="102"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreEnums" desc="()Z" line="105"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreRanges" desc="()Z" line="108"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreExtensionFunctions" desc="()Z" line="111"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitConstantExpression" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoredByConfig" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="143"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="2" covered="38"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAsDoubleOrNull" desc="(Ljava/lang/String;)Ljava/lang/Double;" line="157"><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAsDouble" desc="(Ljava/lang/String;)D" line="164"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeForParsingAsDouble" desc="(Ljava/lang/String;)Ljava/lang/String;" line="173"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNamedArgument" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfFunctionReturnConstant" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="186"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfConstructorOrFunctionConstant" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="189"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfRange" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="196"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSubjectOfExtensionFunction" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="206"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfHashCode" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLocalProperty" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="214"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProperty" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="217"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompanionObjectProperty" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="219"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCompanionObject" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstantProperty" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="225"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasUnaryMinusPrefix" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="227"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoreNumbers_delegate$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/style/MagicNumber;Ljava/util/List;)Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="143"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="857"/><counter type="BRANCH" missed="10" covered="110"/><counter type="LINE" missed="2" covered="83"/><counter type="COMPLEXITY" missed="10" covered="81"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda$containsThisReference$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifier$ChildrenVisitor" sourcefilename="RedundantVisibilityModifier.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifier;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="121"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenVoid$isPartOfReturnTypeOfFunction$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CollapsibleIfStatements" sourcefilename="CollapsibleIfStatements.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotElseIfOrElse" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOneKtIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLoneIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryParentheses" sourcefilename="UnnecessaryParentheses.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowForUnclearPrecedence" desc="()Z" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParenthesizedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)V" line="61"><counter type="INSTRUCTION" missed="4" covered="74"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="9" covered="205"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="302"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment" sourcefilename="ForbiddenComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="()Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComments" desc="()Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedPatterns" desc="()Lkotlin/text/Regex;" line="111"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCustomMessage" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitComment" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForbiddenComment" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportIssue" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;)V" line="149"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)Ljava/lang/String;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorMessage" desc="(Lio/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment;)Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorMessage" desc="(Ljava/lang/String;)Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comments_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" line="107"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="96"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="380"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="1" covered="22"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$visitCallExpression$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MultilineLambdaItParameter" sourcefilename="MultilineLambdaItParameter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiline" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="97"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsingImplicitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="115"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateClass" sourcefilename="UnusedPrivateClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Comment" sourcefilename="ForbiddenComment.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;Ljava/lang/String;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lkotlin/text/Regex;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReason" desc="()Ljava/lang/String;" line="167"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseAnyOrNoneInsteadOfFind" sourcefilename="UseAnyOrNoneInsteadOfFind.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="40"><counter type="INSTRUCTION" missed="5" covered="113"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="188"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenAnnotation" sourcefilename="ForbiddenAnnotation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotations" desc="()Ljava/util/Map;" line="47"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotationEntry" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" line="64"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/name/FqName;)V" line="80"><counter type="INSTRUCTION" missed="4" covered="95"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fqNameOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/name/FqName;" line="101"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expressionTypeOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/types/KotlinType;" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="annotations_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/Map;" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="273"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RangeUntilInsteadOfRangeTo$Companion" sourcefilename="RangeUntilInsteadOfRangeTo.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda" sourcefilename="DoubleNegativeLambda.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeFunctions" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeFunctionNameParts" desc="()Ljava/util/Set;" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="67"><counter type="INSTRUCTION" missed="4" covered="78"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForbiddenNegation" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="87"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joinInBackTicks" desc="(Ljava/util/List;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeFunctions_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeFunctionNameParts_delegate$lambda$2" desc="(Ljava/util/List;)Ljava/util/Set;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="joinInBackTicks$lambda$8" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/CharSequence;" line="109"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="395"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnderscoresInNumericLiterals" sourcefilename="UnderscoresInNumericLiterals.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAcceptableDecimalLength" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAcceptableLength" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowNonStandardGrouping" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitConstantExpression" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNormalized" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtConstantExpression;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotDecimalNumber" desc="(Ljava/lang/String;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSerialUidProperty" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;)Z" line="82"><counter type="INSTRUCTION" missed="3" covered="36"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSerializable" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="88"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalizeForMatching" desc="(Ljava/lang/String;)Ljava/lang/String;" line="98"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doReport" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;Ljava/lang/String;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNonStandardGrouping" desc="(Ljava/lang/String;)Z" line="108"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="acceptableDecimalLength_delegate$lambda$0" desc="(I)I" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="369"/><counter type="BRANCH" missed="5" covered="37"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget" sourcefilename="UnnecessaryAnnotationUseSiteTarget.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForUnnecessaryUseSiteTarget" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryAnnotationUseSiteTarget$UseSiteTarget;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationUseSiteTarget;Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass" sourcefilename="SerialVersionUIDInSerializableClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="69"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportFinding" desc="(Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isImplementingSerializable" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchSerialVersionUIDFinding" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" line="92"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchSerialVersionUIDFinding$default" desc="(Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass;Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;ILjava/lang/Object;)Lio/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings;" line="88"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssueMessage" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLongProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLongType" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLongAssignment" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="120"><counter type="INSTRUCTION" missed="1" covered="50"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="279"/><counter type="BRANCH" missed="7" covered="43"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter" sourcefilename="UnnecessaryFilter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="57"><counter type="INSTRUCTION" missed="2" covered="102"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" line="73"><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/List;)Z" line="78"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/name/FqName;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="88"><counter type="INSTRUCTION" missed="3" covered="90"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentProperty" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtProperty;" line="107"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentReturn" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtReturnExpression;" line="110"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferrers" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Lkotlin/sequences/Sequence;" line="116"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="descriptor" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;" line="121"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="descriptor" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferrers$lambda$7$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="117"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferrers$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Iterable;" line="117"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="445"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="833"/><counter type="BRANCH" missed="19" covered="51"/><counter type="LINE" missed="0" covered="76"/><counter type="COMPLEXITY" missed="19" covered="30"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateFunction" sourcefilename="UnusedPrivateFunction.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedNames" desc="()Lkotlin/text/Regex;" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryBackticks" sourcefilename="UnnecessaryBackticks.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasUnnecessaryBackticks" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKeyword" desc="(Ljava/lang/String;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryBackticks;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="158"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage" sourcefilename="RedundantHigherOrderMapUsage.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="81"><counter type="INSTRUCTION" missed="7" covered="126"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" line="108"><counter type="INSTRUCTION" missed="6" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInheritorOf" desc="(Lorg/jetbrains/kotlin/types/KotlinType;Lorg/jetbrains/kotlin/name/FqName;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRedundant" desc="(Lorg/jetbrains/kotlin/psi/KtFunctionLiteral;Ljava/util/List;)Z" line="118"><counter type="INSTRUCTION" missed="9" covered="55"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReferenceTo" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;)Z" line="129"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRedundant$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lio/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage;Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="123"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="361"/><counter type="BRANCH" missed="15" covered="53"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="15" covered="27"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentation" sourcefilename="MultilineRawStringIndentation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrimmingMethods" desc="()Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" line="64"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIndentation" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;III)V" line="93"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkContent" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;ILkotlin/ranges/IntRange;)V" line="103"><counter type="INSTRUCTION" missed="7" covered="210"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkClosing" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;II)V" line="141"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="452"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor" sourcefilename="UnusedImport.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamedReferencesAsString" desc="()Ljava/util/Set;" line="52"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStaticReferencesAsString" desc="()Ljava/util/Set;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFqNames" desc="()Ljava/util/Set;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnresolvedNamedReferencesAsString" desc="()Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unusedImports" desc="()Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPackageDirective" desc="(Lorg/jetbrains/kotlin/psi/KtPackageDirective;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportList" desc="(Lorg/jetbrains/kotlin/psi/KtImportList;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleKDoc" desc="(Ljava/lang/String;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fqNameOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)Lorg/jetbrains/kotlin/name/FqName;" line="153"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="namedReferencesAsString_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Ljava/util/Set;" line="53"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="staticReferencesAsString_delegate$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Ljava/util/Set;" line="56"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fqNames_delegate$lambda$5" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Ljava/util/Set;" line="59"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unresolvedNamedReferencesAsString_delegate$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Ljava/util/Set;" line="69"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unusedImports$isFromSamePackage" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Z" line="76"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unusedImports$isNotUsed" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;Lio/gitlab/arturbosch/detekt/rules/style/UnusedImport$UnusedImportVisitor;)Z" line="79"><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportList$lambda$10" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportList$lambda$11" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Z" line="100"><counter type="INSTRUCTION" missed="5" covered="40"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleKDoc$lambda$18" desc="(Lkotlin/text/MatchResult;)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="637"/><counter type="BRANCH" missed="10" covered="64"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="10" covered="48"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryApply" sourcefilename="UnnecessaryApply.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isApplyExpr" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="65"><counter type="INSTRUCTION" missed="4" covered="34"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyOneMemberAccessStatement" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="70"><counter type="INSTRUCTION" missed="8" covered="85"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasOnlyOneMemberAccessStatement$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnnecessaryApply;Lorg/jetbrains/kotlin/descriptors/SimpleFunctionDescriptor;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="87"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="215"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor" sourcefilename="VarCouldBeVal.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Z)V" line="86"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonReAssignedDeclarations" desc="()Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAssignments" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtUnaryExpression;)V" line="134"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="141"><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReturnExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateAssignmentExpression" desc="(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="165"><counter type="INSTRUCTION" missed="7" covered="75"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateReturnExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="184"><counter type="INSTRUCTION" missed="5" covered="100"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeclarationCandidate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="208"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEscapeCandidate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="221"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAssignment" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="224"><counter type="INSTRUCTION" missed="1" covered="33"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateAssignmentExpression$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor;Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="168"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateReturnExpression$lambda$8" desc="(Lio/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor;Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="187"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="555"/><counter type="BRANCH" missed="20" covered="90"/><counter type="LINE" missed="0" covered="86"/><counter type="COMPLEXITY" missed="20" covered="50"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ExplicitItLambdaParameter" sourcefilename="ExplicitItLambdaParameter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RangeUntilInsteadOfRangeTo" sourcefilename="RangeUntilInsteadOfRangeTo.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="44"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMinusOneExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="52"><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="127"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$Companion" sourcefilename="UnnecessaryFilter.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/DataClassShouldBeImmutable" sourcefilename="DataClassShouldBeImmutable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Ljava/lang/String;Ljava/lang/String;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantExplicitType" sourcefilename="RedundantExplicitType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="53"><counter type="INSTRUCTION" missed="9" covered="92"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeIsSameAs" desc="(Lorg/jetbrains/kotlin/psi/KtConstantExpression;Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="70"><counter type="INSTRUCTION" missed="1" covered="72"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="172"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseDataClass$visit$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivatePropertyVisitor" sourcefilename="UnusedPrivateProperty.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports" desc="()Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="1" covered="192"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSecondaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="172"><counter type="INSTRUCTION" missed="8" covered="109"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="439"/><counter type="BRANCH" missed="8" covered="42"/><counter type="LINE" missed="0" covered="76"/><counter type="COMPLEXITY" missed="8" covered="23"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseArrayLiteralsInAnnotations$Companion" sourcefilename="UseArrayLiteralsInAnnotations.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/SerialVersionUIDInSerializableClass$SerialVersionUIDFindings" sourcefilename="SerialVersionUIDInSerializableClass.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getViolatingElement" desc="()Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssueMsg" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseSumOfInsteadOfFlatMapSize" sourcefilename="UseSumOfInsteadOfFlatMapSize.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="45"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlatMapOrFlatten" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSizeOrCount" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="62"><counter type="INSTRUCTION" missed="10" covered="64"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="71"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="200"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryApplyKt" sourcefilename="UnnecessaryApply.kt"><method name="&lt;clinit&gt;" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Companion" sourcefilename="UseIfEmptyOrIfBlank.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable" sourcefilename="CanBeNonNullable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseIsNullOrEmpty$Companion" sourcefilename="UseIsNullOrEmpty.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/DestructuringDeclarationWithTooManyEntries" sourcefilename="DestructuringDeclarationWithTooManyEntries.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxDestructuringEntries" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDestructuringDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDestructuringDeclaration;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryLet" sourcefilename="UnnecessaryLet.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/String;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy$Companion" sourcefilename="BracesOnWhenStatements.kt"><method name="getValue" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="244"><counter type="INSTRUCTION" missed="29" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedParameterVisitor$collectParameters$2" sourcefilename="UnusedParameter.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenImport" sourcefilename="ForbiddenImport.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getImports" desc="()Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForbiddenPatterns" desc="()Lkotlin/text/Regex;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportDirective" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="95"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultReason" desc="(Ljava/lang/String;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsForbiddenPattern" desc="(Ljava/lang/String;)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="imports_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="214"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/WildcardImport" sourcefilename="WildcardImport.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeImports" desc="()Ljava/util/List;" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportDirective" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" line="55"><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeImports_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="120"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/OptionalAbstractKeyword" sourcefilename="OptionalAbstractKeyword.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleAbstractKeyword" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAny" sourcefilename="UnnecessaryAny.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeReported" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="12" covered="95"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBlockExpressionBeReported" desc="(Lorg/jetbrains/kotlin/psi/KtBlockExpression;Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="6" covered="69"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldStatementBeReported" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;)Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="2" covered="73"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsageOfValueAndItEligible" desc="(Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/lang/String;" line="146"><counter type="INSTRUCTION" missed="11" covered="85"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItUsageCount" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/VariableDescriptor;)I" line="188"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCallingAny" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCallingEquals" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="195"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="201"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="417"/><counter type="BRANCH" missed="23" covered="73"/><counter type="LINE" missed="3" covered="79"/><counter type="COMPLEXITY" missed="23" covered="35"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedImportKt" sourcefilename="UnusedImport.kt"><method name="identifier" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/String;" line="180"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/TrimMultilineRawString" sourcefilename="TrimMultilineRawString.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTrimmingMethods" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseOrEmpty$Companion" sourcefilename="UseOrEmpty.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements" sourcefilename="BracesOnIfStatements.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSingleLine" desc="()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="153"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultiLine" desc="()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="156"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;" line="171"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;)V" line="216"><counter type="INSTRUCTION" missed="24" covered="58"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentIfCandidate" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="248"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiStatement" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="251"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="policy" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="254"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasBraces" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="257"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleLine_delegate$lambda$0" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="153"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiLine_delegate$lambda$1" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="156"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="354"/><counter type="BRANCH" missed="3" covered="49"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="3" covered="39"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal" sourcefilename="VarCouldBeVal.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreLateinitVar" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;Lorg/jetbrains/kotlin/psi/KtExpression;Lkotlin/jvm/internal/Ref$BooleanRef;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MaxChainedCallsOnSameLine$getReceiverEndPosition$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="282"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda$containsOwnMethodCall$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryParentheses$Companion" sourcefilename="UnnecessaryParentheses.kt"><method name="binaryOp" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;" line="126"><counter type="INSTRUCTION" missed="9" covered="36"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstNonParenParent" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="139"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBinaryOperationPrecedenceUnclearWithParent" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUnaryOperationPrecedenceUnclear" desc="(Lorg/jetbrains/kotlin/psi/KtParenthesizedExpression;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstNonParenParent$lambda$1" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="139"><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="186"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseRequireNotNull" sourcefilename="UseRequireNotNull.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenMethodCall" sourcefilename="ForbiddenMethodCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethods" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnwrappedGetMethod" desc="(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnwrappedSetMethod" desc="(Lorg/jetbrains/kotlin/descriptors/PropertyDescriptor;)Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" line="95"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrefixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPrefixExpression;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" line="107"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallableReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="155"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methods_delegate$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="360"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="50"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/LoopWithTooManyJumpStatementsKt" sourcefilename="LoopWithTooManyJumpStatements.kt"><method name="getKeyword" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="80"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDoKeyword" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWhileKeyword" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="36"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/LoopWithTooManyJumpStatements" sourcefilename="LoopWithTooManyJumpStatements.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxJumpCount" desc="()I" line="46"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLoopExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" line="49"><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countBreakAndReturnStatements" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)I" line="55"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countBreakAndReturnStatementsInLoop" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)I" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="98"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$Companion" sourcefilename="CanBeNonNullable.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/CascadingCallWrapping" sourcefilename="CascadingCallWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeElvis" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="59"><counter type="INSTRUCTION" missed="4" covered="52"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsNewline" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="72"><counter type="INSTRUCTION" missed="13" covered="68"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="receiverContainsNewline" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="95"><counter type="INSTRUCTION" missed="11" covered="52"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toErrorReportEntity" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lio/gitlab/arturbosch/detekt/api/Entity;" line="109"><counter type="INSTRUCTION" missed="18" covered="87"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="334"/><counter type="BRANCH" missed="17" covered="35"/><counter type="LINE" missed="3" covered="48"/><counter type="COMPLEXITY" missed="17" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseSumOfInsteadOfFlatMapSize$Companion" sourcefilename="UseSumOfInsteadOfFlatMapSize.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/FunctionOnlyReturningConstantKt" sourcefilename="FunctionOnlyReturningConstant.kt"><method name="contains" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$SecondCall" sourcefilename="UnnecessaryFilter.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFqName" desc="()Lorg/jetbrains/kotlin/name/FqName;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCorrectOperator" desc="()Ljava/lang/String;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/NestedClassesVisibility" sourcefilename="NestedClassesVisibility.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNoEnum" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNoCompanionObj" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage$isRedundant$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MaxLineLength" sourcefilename="MaxLineLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludePackageStatements" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeImportStatements" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeCommentStatements" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeRawStrings" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="54"><counter type="INSTRUCTION" missed="3" covered="127"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidLine" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoredStatement" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsIgnoredRawString" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Z" line="91"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsIgnoredPackageStatement" desc="(Ljava/lang/String;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsIgnoredImportStatement" desc="(Ljava/lang/String;)Z" line="103"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsIgnoredCommentStatement" desc="(Ljava/lang/String;)Z" line="109"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="430"/><counter type="BRANCH" missed="2" covered="38"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="2" covered="32"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnderscoresInNumericLiterals$Companion" sourcefilename="UnderscoresInNumericLiterals.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/TrailingWhitespace" sourcefilename="TrailingWhitespace.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countTrailingWhitespace" desc="(Ljava/lang/String;)I" line="61"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMessage" desc="(I)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirstKtElementInParentsOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/String;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="66"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam" sourcefilename="CanBeNonNullable.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParam" desc="()Lorg/jetbrains/kotlin/psi/KtParameter;" line="446"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullChecked" desc="()Z" line="447"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullChecked" desc="(Z)V" line="447"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonNullChecked" desc="()Z" line="448"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNonNullChecked" desc="(Z)V" line="448"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonNullForced" desc="()Z" line="449"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNonNullForced" desc="(Z)V" line="449"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullCheckReturnsUnit" desc="()Z" line="450"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNullCheckReturnsUnit" desc="(Z)V" line="450"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$yieldStatementsSkippingGuardClauses$1" sourcefilename="Junk.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor$isNullableType$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ExplicitCollectionElementAccessMethod" sourcefilename="ExplicitCollectionElementAccessMethod.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndexGetterRecommended" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="53"><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIndexSetterRecommended" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="65"><counter type="INSTRUCTION" missed="4" covered="47"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionDescriptor" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;" line="81"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canReplace" desc="(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldReplace" desc="(Lorg/jetbrains/kotlin/descriptors/FunctionDescriptor;)Z" line="95"><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCallerMap" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="108"><counter type="INSTRUCTION" missed="9" covered="57"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unusedReturnValue" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="314"/><counter type="BRANCH" missed="13" covered="53"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="13" covered="29"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedFunctionVisitor" sourcefilename="UnusedPrivateFunction.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports" desc="()Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="4" covered="285"/><counter type="BRANCH" missed="2" covered="42"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInvokeReferences" desc="(Ljava/util/List;)Ljava/util/List;" line="142"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeclaredInsideAnInterface" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="158"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultingDescriptors" desc="(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)Ljava/util/List;" line="168"><counter type="INSTRUCTION" missed="11" covered="63"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPropertyDelegate" desc="(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)V" line="177"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="187"><counter type="INSTRUCTION" missed="1" covered="108"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/style/UnusedFunctionVisitor;)Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports$lambda$2" desc="(Lkotlin/Lazy;)Ljava/util/List;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="622"/><counter type="BRANCH" missed="11" covered="79"/><counter type="LINE" missed="1" covered="92"/><counter type="COMPLEXITY" missed="11" covered="45"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseIfInsteadOfWhen" sourcefilename="UseIfInsteadOfWhen.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreWhenContainingVariableDeclaration" desc="()Z" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="37"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="97"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateProperty" sourcefilename="UnusedPrivateProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedNames" desc="()Lkotlin/text/Regex;" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ModifierOrder$visitModifierList$$inlined$compareBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements" sourcefilename="BracesOnWhenStatements.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSingleLine" desc="()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="163"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultiLine" desc="()Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="166"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNoBraces" desc="(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" line="201"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasUnnecessaryBraces" desc="(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" line="205"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiStatement" desc="(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" line="215"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="policy" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="218"><counter type="INSTRUCTION" missed="19" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtWhenEntry;Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;)V" line="227"><counter type="INSTRUCTION" missed="19" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleLine_delegate$lambda$0" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="163"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiLine_delegate$lambda$1" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnWhenStatements$BracePolicy;" line="166"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="319"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="2" covered="30"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$ParameterCheckVisitor$visitNamedFunction$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull" sourcefilename="UselessCallOnNotNull.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveCallForExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="66"><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullable" desc="(Lorg/jetbrains/kotlin/psi/ValueArgument;)Ljava/lang/Boolean;" line="99"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="337"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseIsNullOrEmpty" sourcefilename="UseIsNullOrEmpty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="53"><counter type="INSTRUCTION" missed="6" covered="90"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimpleNameExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="69"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullCheckedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="72"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeCheckedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="81"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeCheckedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="88"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeCheckedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="93"><counter type="INSTRUCTION" missed="22" covered="52"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeCheckedEmptyString" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="103"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeCheckedEqualToZero" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="107"><counter type="INSTRUCTION" missed="5" covered="52"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullKeyword" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="121"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isZero" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="123"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyString" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="125"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/List;)Z" line="128"><counter type="INSTRUCTION" missed="33" covered="47"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classFqName" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/name/FqName;" line="135"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCollectionOrArrayOrString" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="138"><counter type="INSTRUCTION" missed="3" covered="25"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCollectionOrArray" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="143"><counter type="INSTRUCTION" missed="3" covered="21"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isString" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="574"/><counter type="BRANCH" missed="47" covered="83"/><counter type="LINE" missed="4" covered="71"/><counter type="COMPLEXITY" missed="42" covered="41"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ClassOrderingKt" sourcefilename="ClassOrdering.kt"><method name="toDescription" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="1" covered="53"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSection" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Lio/gitlab/arturbosch/detekt/rules/style/Section;" line="159"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="100"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseLet" sourcefilename="UseLet.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpressionNull" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateFunctionKt" sourcefilename="UnusedPrivateFunction.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UseCheckNotNull" sourcefilename="UseCheckNotNull.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor" sourcefilename="CanBeNonNullable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;)V" line="453"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="462"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectCandidateProps" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="478"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="487"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullableAndCanBeNonNullable" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="518"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCandidate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="521"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="48"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsNullable" desc="(Lorg/jetbrains/kotlin/psi/KtPropertyDelegate;)Z" line="534"><counter type="INSTRUCTION" missed="11" covered="76"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullableType" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="546"><counter type="INSTRUCTION" missed="6" covered="101"/><counter type="BRANCH" missed="6" covered="24"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectCandidateProps$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor;Lorg/jetbrains/kotlin/psi/KtProperty;)Lkotlin/Unit;" line="479"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="479"/><counter type="BRANCH" missed="18" covered="104"/><counter type="LINE" missed="1" covered="57"/><counter type="COMPLEXITY" missed="18" covered="52"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenVoid" sourcefilename="ForbiddenVoid.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreUsageInGenerics" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTypeReference" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" line="51"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfOverriddenSignature" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="67"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfReturnTypeOfFunction" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParameterTypeOfFunction" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGenericArgument" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="80"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfReturnTypeOfFunction$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="213"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString$Companion" sourcefilename="StringShouldBeRawString.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/SpacingAfterPackageDeclaration$visitKtFile$$inlined$anyDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DataClassContainsFunctions" sourcefilename="DataClassContainsFunctions.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConversionFunctionPrefix" desc="()Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowOperators" desc="()Z" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFunction" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifier$ClassVisitor" sourcefilename="RedundantVisibilityModifier.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/style/RedundantVisibilityModifier;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/MultilineRawStringIndentation$checkContent$LineInformation" sourcefilename="MultilineRawStringIndentation.kt"><method name="&lt;init&gt;" desc="(ILjava/lang/String;I)V" line="101"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineNumber" desc="()I" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLine" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentIndent" desc="()I" line="101"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$PropertyCheckVisitor$collectCandidateProps$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy$Companion" sourcefilename="BracesOnIfStatements.kt"><method name="getValue" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/style/BracesOnIfStatements$BracePolicy;" line="267"><counter type="INSTRUCTION" missed="29" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/SpacingAfterPackageDeclaration$checkKtElementsDeclaration$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryLetKt$countLambdaParameterReference$lambda$3$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryLetKt$countLambdaParameterReference$lambda$3$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedPrivateClass$UnusedClassVisitor" sourcefilename="UnusedPrivateClass.kt"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedClasses" desc="()Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsed" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="68"><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitImportDirective" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotationEntry" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" line="92"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerAccess" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" line="98"><counter type="INSTRUCTION" missed="4" covered="84"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="120"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="130"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFunctionType" desc="(Lorg/jetbrains/kotlin/psi/KtFunctionType;)V" line="137"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryWithTypeRHSExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V" line="147"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIsExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIsExpression;)V" line="152"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="157"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDoubleColonExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoubleColonExpression;)V" line="165"><counter type="INSTRUCTION" missed="2" covered="51"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkReceiverForClassUsage" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="looksLikeAClassName" desc="(Ljava/lang/String;)Z" line="190"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerAccess$lambda$9$lambda$7" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Lorg/jetbrains/kotlin/psi/KtElement;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="532"/><counter type="BRANCH" missed="25" covered="57"/><counter type="LINE" missed="0" covered="85"/><counter type="COMPLEXITY" missed="25" covered="36"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount$visitNamedFunction$lambda$1$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseEmptyCounterpartKt" sourcefilename="UseEmptyCounterpart.kt"><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount$visitNamedFunction$lambda$1$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$AssignmentVisitor$evaluateReturnExpression$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenSuppress$Companion" sourcefilename="ForbiddenSuppress.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ReturnCount$countReturnStatements$$inlined$yieldStatementsSkippingGuardClauses$1" sourcefilename="Junk.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda" sourcefilename="ObjectLiteralToLambda.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCouldBeSamInterface" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleSuperTypeOrNull" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/types/KotlinType;" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="singleNamedMethodOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Lorg/jetbrains/kotlin/psi/KtNamedFunction;" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsThisReference" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsOwnMethodCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isImplicitClassFor" desc="(Lorg/jetbrains/kotlin/resolve/scopes/receivers/ReceiverValue;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsMethodOf" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" line="76"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasConvertibleMethod" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectLiteralExpression" desc="(Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsThisReference$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/psi/KtThisExpression;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsOwnMethodCall$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/style/ObjectLiteralToLambda;Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="243"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="5" covered="27"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeExpression$Companion" sourcefilename="DoubleNegativeExpression.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAny$getItUsageCount$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAny$getItUsageCount$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryAny$getItUsageCount$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$Companion" sourcefilename="ForbiddenComment.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UtilityClassWithPublicConstructor$UtilityClassConstructor" sourcefilename="UtilityClassWithPublicConstructor.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPublicConstructorWithoutParameters$detekt_rules_style" desc="()Z" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNonPublicConstructorWithoutParameters$detekt_rules_style" desc="()Z" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasConstructorWithoutParameters" desc="(Z)Z" line="122"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$NegativeFunction" sourcefilename="DoubleNegativeLambda.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSimpleName" desc="()Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRecommendation" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenComment$visitKtFile$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedParameterVisitor" sourcefilename="UnusedParameter.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports" desc="()Ljava/util/List;" line="68"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="73"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="79"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectParameters" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="96"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRelevant" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedToHaveUnusedParameters" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="127"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="182"/><counter type="BRANCH" missed="13" covered="21"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="13" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UselessCallOnNotNull$Conversion" sourcefilename="UselessCallOnNotNull.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplacementName" desc="()Ljava/lang/String;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/AlsoCouldBeApply" sourcefilename="AlsoCouldBeApply.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="42"><counter type="INSTRUCTION" missed="9" covered="120"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="128"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/EqualsNullCall" sourcefilename="EqualsNullCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="29"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNullParameter" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="37"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ProtectedMemberInFinalClass" sourcefilename="ProtectedMemberInFinalClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasModifiers" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/DoubleNegativeLambda$Companion" sourcefilename="DoubleNegativeLambda.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/ThrowsCount$visitNamedFunction$$inlined$yieldStatementsSkippingGuardClauses$1" sourcefilename="Junk.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/MayBeConstant" sourcefilename="MayBeConstant.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isActual" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="55"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canBeConst" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="91"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJvmField" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cannotBeConstant" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="103"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInObject" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstantExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParenthesizedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="126"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="129"><counter type="INSTRUCTION" missed="8" covered="48"/><counter type="BRANCH" missed="8" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="386"/><counter type="BRANCH" missed="17" covered="69"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="17" covered="38"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseArrayLiteralsInAnnotations" sourcefilename="UseArrayLiteralsInAnnotations.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotationEntry" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="41"><counter type="INSTRUCTION" missed="5" covered="56"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayOfFunctionCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="202"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/StringShouldBeRawString$getStringSequenceExcludingRawString$getStringSequence$1" sourcefilename="StringShouldBeRawString.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="4" covered="74"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="74"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/AbstractClassCanBeInterface" sourcefilename="AbstractClassCanBeInterface.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="check" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="62"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkMembers" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Ljava/util/List;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="members" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasConstructorParameter" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasInheritedMember" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Z)Z" line="94"><counter type="INSTRUCTION" missed="10" covered="61"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAnyParentAbstract" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="106"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="323"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="14" covered="34"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseCheckOrError" sourcefilename="UseCheckOrError.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOnlyExpressionInLambda" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="56"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/VarCouldBeVal$Companion" sourcefilename="VarCouldBeVal.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UseIfEmptyOrIfBlank$Replacement" sourcefilename="UseIfEmptyOrIfBlank.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;Z)V" line="103"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/name/FqName;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConditionFunctionFqName" desc="()Lorg/jetbrains/kotlin/name/FqName;" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReplacementFunctionName" desc="()Ljava/lang/String;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCondition" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ProtectedMemberInFinalClass$DeclarationVisitor" sourcefilename="ProtectedMemberInFinalClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/style/ProtectedMemberInFinalClass;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenVoid$Companion" sourcefilename="ForbiddenVoid.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UseCheckNotNull$Companion" sourcefilename="UseCheckNotNull.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$getReferrers$lambda$7$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnnecessaryFilter$getReferrers$lambda$7$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/FunctionOnlyReturningConstant" sourcefilename="FunctionOnlyReturningConstant.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridableFunction" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreActualFunction" desc="()Z" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludedFunctions" desc="()Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotIgnored" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkOverridableFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="67"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkContainingInterface" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkActualFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotExcluded" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReturningAConstant" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstantExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsConstant" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="99"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludedFunctions_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="276"/><counter type="BRANCH" missed="2" covered="44"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="2" covered="36"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$isGuardClause$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$isGuardClause$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/JunkKt$isElvisOperatorGuardClause$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenSuppress" sourcefilename="ForbiddenSuppress.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitAnnotationEntry" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)V" line="48"><counter type="INSTRUCTION" missed="2" covered="115"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage" desc="(Ljava/util/List;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterForbiddenRules" desc="(Ljava/util/List;)Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="formatMessage$lambda$1" desc="(Ljava/lang/String;)Ljava/lang/CharSequence;" line="73"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="224"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/StyleGuideProvider" sourcefilename="StyleGuideProvider.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="22"><counter type="INSTRUCTION" missed="0" covered="382"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="394"/><counter type="LINE" missed="0" covered="99"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UseRequireNotNull$Companion" sourcefilename="UseRequireNotNull.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/NoTabs" sourcefilename="NoTabs.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhiteSpace" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTab" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)Z" line="31"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringInterpolated" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiWhiteSpace;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/LoopWithTooManyJumpStatements$countBreakAndReturnStatementsInLoop$1" sourcefilename="LoopWithTooManyJumpStatements.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/internal/Ref$IntRef;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/NewLineAtEndOfFile" sourcefilename="NewLineAtEndOfFile.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/RedundantHigherOrderMapUsage$Companion" sourcefilename="RedundantHigherOrderMapUsage.kt"/><class name="io/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$ParameterCheckVisitor" sourcefilename="CanBeNonNullable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="154"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="205"><counter type="INSTRUCTION" missed="3" covered="62"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" line="223"><counter type="INSTRUCTION" missed="1" covered="25"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="232"><counter type="INSTRUCTION" missed="2" covered="109"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="252"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateNullCheckReturnsUnit" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="260"><counter type="INSTRUCTION" missed="1" covered="56"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSafeQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;)V" line="272"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="305"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determineSingleExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/Set;)Z" line="313"><counter type="INSTRUCTION" missed="5" covered="49"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonNullChecks" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;)Ljava/util/List;" line="327"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateCheckStatement" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="334"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;)Ljava/util/List;" line="354"><counter type="INSTRUCTION" missed="5" covered="103"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescriptor" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" line="372"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateIsExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIsExpression;)Ljava/util/List;" line="380"><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateSubjectWhenExpression" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtWhenExpression;Ljava/util/List;)V" line="394"><counter type="INSTRUCTION" missed="7" covered="85"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullableCheck" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;Z)Z" line="428"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidElseExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="433"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullable" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="436"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateNullableParam" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lkotlin/jvm/functions/Function1;)V" line="439"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="152"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable;Lorg/jetbrains/kotlin/psi/KtParameter;)Lkotlin/Pair;" line="155"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$4" desc="(ZLio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Z" line="191"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$8$lambda$7$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="215"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixExpression$lambda$10$lambda$9" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="225"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSafeQualifiedExpression$lambda$18" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="272"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression$lambda$20$lambda$19" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="286"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression$lambda$22$lambda$21" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="297"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluateCheckStatement$lambda$26$lambda$23" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="337"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluateCheckStatement$lambda$26$lambda$24" desc="(Lio/gitlab/arturbosch/detekt/rules/style/CanBeNonNullable$NullableParam;)Lkotlin/Unit;" line="341"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="1111"/><counter type="BRANCH" missed="44" covered="160"/><counter type="LINE" missed="2" covered="197"/><counter type="COMPLEXITY" missed="45" covered="89"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/UnusedVariableVisitor" sourcefilename="UnusedVariable.kt"><method name="&lt;init&gt;" desc="(Lkotlin/text/Regex;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnusedReports" desc="()Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="95"><counter type="INSTRUCTION" missed="1" covered="64"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="115"><counter type="INSTRUCTION" missed="5" covered="64"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerVariableUse" desc="(Lorg/jetbrains/kotlin/descriptors/DeclarationDescriptor;)V" line="136"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerNewDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="142"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="257"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/ForbiddenCommentKt" sourcefilename="ForbiddenComment.kt"><method name="getCommentContent" desc="(Ljava/lang/String;)Ljava/lang/String;" line="175"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimIndentIgnoringFirstLine" desc="(Ljava/lang/String;)Ljava/lang/String;" line="210"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCommentContent$lambda$2" desc="(Ljava/lang/String;)Ljava/lang/String;" line="184"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DestructuringDeclarationWithTooManyEntries.kt"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="28" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="2"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="18" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseLet.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="20" mb="0" cb="4"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="15" mb="0" cb="4"/><line nr="49" mi="0" ci="8" mb="0" cb="4"/><line nr="50" mi="0" ci="19" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="4"/><line nr="52" mi="0" ci="18" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseAnyOrNoneInsteadOfFind.kt"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="2" ci="8" mb="2" cb="2"/><line nr="43" mi="0" ci="14" mb="0" cb="2"/><line nr="44" mi="1" ci="20" mb="2" cb="4"/><line nr="45" mi="1" ci="12" mb="1" cb="3"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="15" mb="0" cb="0"/><line nr="54" mi="0" ci="17" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="18" mb="0" cb="0"/><line nr="60" mi="0" ci="23" mb="0" cb="0"/><line nr="61" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="188"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BracesOnWhenStatements.kt"><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="30" mb="0" cb="0"/><line nr="166" mi="0" ci="31" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="4"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="16" mb="0" cb="4"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="9" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="4"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="2"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="2"/><line nr="208" mi="0" ci="16" mb="0" cb="2"/><line nr="210" mi="0" ci="11" mb="0" cb="2"/><line nr="211" mi="0" ci="10" mb="0" cb="4"/><line nr="215" mi="0" ci="17" mb="0" cb="4"/><line nr="218" mi="0" ci="10" mb="0" cb="0"/><line nr="219" mi="19" ci="4" mb="1" cb="1"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="8" mb="0" cb="2"/><line nr="228" mi="0" ci="11" mb="0" cb="0"/><line nr="231" mi="19" ci="4" mb="1" cb="1"/><line nr="233" mi="0" ci="17" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="17" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="20" mb="0" cb="0"/><line nr="244" mi="3" ci="12" mb="1" cb="1"/><line nr="245" mi="26" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="396"/><counter type="BRANCH" missed="3" covered="35"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="3" covered="35"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UtilityClassWithPublicConstructor.kt"><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="1" cb="3"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="97" mi="0" ci="12" mb="0" cb="6"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="1" cb="3"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="4"/><line nr="113" mi="2" ci="17" mb="1" cb="5"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="4"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="21" mb="0" cb="6"/><counter type="INSTRUCTION" missed="2" covered="251"/><counter type="BRANCH" missed="3" covered="53"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="3" covered="34"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DoubleNegativeExpression.kt"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="4"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="1" cb="3"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="1" cb="3"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="1" cb="3"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="85" mi="3" ci="22" mb="4" cb="4"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProtectedMemberInFinalClass.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="48" mi="0" ci="18" mb="1" cb="3"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="8" mb="0" cb="2"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="12" mb="0" cb="8"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="4"/><line nr="67" mi="0" ci="10" mb="0" cb="6"/><line nr="68" mi="0" ci="20" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="155"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SerialVersionUIDInSerializableClass.kt"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="4"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="1" cb="3"/><line nr="71" mi="2" ci="9" mb="1" cb="1"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="20" mb="2" cb="4"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="12" mb="0" cb="4"/><line nr="100" mi="0" ci="11" mb="0" cb="6"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="15" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="4"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="14" mb="0" cb="4"/><line nr="122" mi="1" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="15" mb="1" cb="1"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="300"/><counter type="BRANCH" missed="7" covered="43"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="7" covered="32"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UseRequire.kt"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="44" mi="0" ci="18" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="26" mb="0" cb="6"/><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseRequireNotNull.kt"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="2"/><line nr="34" mi="0" ci="18" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringShouldBeRawString.kt"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="27" mb="0" cb="0"/><line nr="64" mi="0" ci="30" mb="0" cb="0"/><line nr="68" mi="0" ci="20" mb="2" cb="6"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="20" mb="2" cb="6"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="14" mb="1" cb="5"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="2"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="7" mb="1" cb="3"/><line nr="97" mi="10" ci="9" mb="2" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="2"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="3" ci="9" mb="1" cb="1"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="2" ci="8" mb="1" cb="1"/><line nr="131" mi="0" ci="13" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="2" ci="13" mb="1" cb="1"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="26" mb="1" cb="3"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="4"/><line nr="154" mi="1" ci="5" mb="1" cb="1"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="475"/><counter type="BRANCH" missed="13" covered="49"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="13" covered="35"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TrimMultilineRawString.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="38" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="2"/><line nr="74" mi="0" ci="11" mb="1" cb="1"/><line nr="75" mi="0" ci="13" mb="0" cb="2"/><line nr="76" mi="3" ci="11" mb="2" cb="2"/><line nr="77" mi="0" ci="14" mb="1" cb="3"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="83" mi="0" ci="12" mb="1" cb="3"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="1" cb="1"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="23" mb="0" cb="4"/><line nr="95" mi="0" ci="8" mb="0" cb="4"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="2" ci="12" mb="1" cb="3"/><line nr="99" mi="0" ci="14" mb="1" cb="5"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="2" ci="12" mb="1" cb="3"/><line nr="103" mi="0" ci="19" mb="1" cb="5"/><line nr="104" mi="0" ci="19" mb="1" cb="7"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="331"/><counter type="BRANCH" missed="11" covered="55"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="11" covered="29"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UseIfEmptyOrIfBlank.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="2"/><line nr="57" mi="2" ci="5" mb="1" cb="1"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="2" ci="15" mb="1" cb="1"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="2" ci="5" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="1" cb="1"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="15" mb="0" cb="0"/><line nr="78" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="3" ci="5" mb="1" cb="1"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="2" ci="6" mb="1" cb="1"/><line nr="86" mi="3" ci="6" mb="1" cb="1"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="3" ci="11" mb="2" cb="2"/><line nr="96" mi="0" ci="8" mb="0" cb="2"/><line nr="97" mi="3" ci="7" mb="2" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="3" ci="6" mb="1" cb="1"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="36" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="427"/><counter type="BRANCH" missed="12" covered="38"/><counter type="LINE" missed="1" covered="53"/><counter type="COMPLEXITY" missed="12" covered="23"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MagicNumber.kt"><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="47" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="27" mb="0" cb="0"/><line nr="87" mi="0" ci="27" mb="0" cb="0"/><line nr="90" mi="0" ci="27" mb="0" cb="0"/><line nr="93" mi="0" ci="27" mb="0" cb="0"/><line nr="96" mi="0" ci="27" mb="0" cb="0"/><line nr="99" mi="0" ci="27" mb="0" cb="0"/><line nr="102" mi="0" ci="27" mb="0" cb="0"/><line nr="105" mi="0" ci="27" mb="0" cb="0"/><line nr="108" mi="0" ci="27" mb="0" cb="0"/><line nr="111" mi="0" ci="33" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="4"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="1" cb="3"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="4"/><line nr="145" mi="0" ci="9" mb="0" cb="4"/><line nr="146" mi="0" ci="9" mb="0" cb="4"/><line nr="147" mi="0" ci="9" mb="0" cb="4"/><line nr="148" mi="0" ci="11" mb="0" cb="4"/><line nr="149" mi="0" ci="9" mb="0" cb="4"/><line nr="150" mi="0" ci="11" mb="1" cb="3"/><line nr="151" mi="0" ci="9" mb="0" cb="4"/><line nr="152" mi="0" ci="9" mb="0" cb="4"/><line nr="153" mi="0" ci="9" mb="1" cb="3"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="2" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="18" mb="0" cb="2"/><line nr="167" mi="0" ci="18" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="23" mb="1" cb="7"/><line nr="186" mi="0" ci="19" mb="0" cb="6"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="9" mb="1" cb="1"/><line nr="191" mi="0" ci="11" mb="1" cb="5"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="18" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="2"/><line nr="199" mi="0" ci="6" mb="0" cb="2"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="210" mi="0" ci="14" mb="0" cb="4"/><line nr="214" mi="0" ci="13" mb="0" cb="2"/><line nr="217" mi="0" ci="20" mb="0" cb="4"/><line nr="219" mi="0" ci="12" mb="0" cb="4"/><line nr="222" mi="0" ci="13" mb="0" cb="2"/><line nr="225" mi="2" ci="20" mb="1" cb="5"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="3" ci="21" mb="3" cb="3"/><counter type="INSTRUCTION" missed="9" covered="857"/><counter type="BRANCH" missed="10" covered="110"/><counter type="LINE" missed="2" covered="83"/><counter type="COMPLEXITY" missed="10" covered="81"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SafeCast.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="1" cb="1"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="4" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="1" cb="1"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="13" mb="1" cb="3"/><line nr="61" mi="2" ci="10" mb="1" cb="1"/><line nr="64" mi="3" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="14" mb="1" cb="3"/><line nr="69" mi="2" ci="20" mb="1" cb="3"/><line nr="72" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="150"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaxLineLength.kt"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="42" mi="0" ci="27" mb="0" cb="0"/><line nr="45" mi="0" ci="27" mb="0" cb="0"/><line nr="48" mi="0" ci="27" mb="0" cb="0"/><line nr="51" mi="0" ci="32" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="17" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="3" ci="8" mb="1" cb="1"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="15" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="19" mb="0" cb="8"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="93" mi="2" ci="16" mb="1" cb="3"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="11" mb="0" cb="2"/><line nr="112" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="13" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="20" mb="0" cb="2"/><line nr="126" mi="0" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="5" covered="462"/><counter type="BRANCH" missed="3" covered="43"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="3" covered="36"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ThrowsCount.kt"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="27" mb="0" cb="0"/><line nr="47" mi="0" ci="28" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="1" cb="5"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryFilter.kt"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="60" mi="2" ci="9" mb="2" cb="2"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="2"/><line nr="64" mi="0" ci="9" mb="0" cb="4"/><line nr="66" mi="0" ci="19" mb="0" cb="2"/><line nr="67" mi="0" ci="21" mb="0" cb="0"/><line nr="68" mi="0" ci="17" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="8" ci="12" mb="1" cb="1"/><line nr="74" mi="2" ci="12" mb="2" cb="2"/><line nr="78" mi="0" ci="19" mb="2" cb="6"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="2" ci="17" mb="2" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="1" cb="3"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="2" ci="8" mb="1" cb="1"/><line nr="92" mi="0" ci="2" mb="1" cb="1"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="2"/><line nr="95" mi="0" ci="22" mb="0" cb="8"/><line nr="96" mi="1" ci="10" mb="1" cb="1"/><line nr="97" mi="0" ci="9" mb="2" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="2" ci="25" mb="1" cb="5"/><line nr="110" mi="5" ci="22" mb="3" cb="3"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="117" mi="0" ci="16" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="27" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="15" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="77" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="0"/><line nr="149" mi="0" ci="11" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="0" ci="11" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="9" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="0" cb="0"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="164" mi="0" ci="11" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="866"/><counter type="BRANCH" missed="19" covered="51"/><counter type="LINE" missed="0" covered="77"/><counter type="COMPLEXITY" missed="19" covered="34"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnnecessaryParentheses.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="32" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="2" ci="5" mb="1" cb="1"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="8" mb="0" cb="4"/><line nr="71" mi="0" ci="8" mb="0" cb="4"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="74" mi="2" ci="7" mb="1" cb="1"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="17" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="27" mb="0" cb="2"/><line nr="112" mi="9" ci="13" mb="2" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="24" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="1" ci="16" mb="1" cb="1"/><line nr="129" mi="4" ci="3" mb="1" cb="1"/><line nr="130" mi="4" ci="3" mb="1" cb="1"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="2"/><line nr="139" mi="3" ci="16" mb="2" cb="2"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="147" mi="0" ci="10" mb="0" cb="2"/><line nr="148" mi="0" ci="14" mb="1" cb="3"/><line nr="150" mi="0" ci="17" mb="0" cb="4"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="18" mb="0" cb="6"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="16" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="488"/><counter type="BRANCH" missed="10" covered="48"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ModifierOrder.kt"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="66" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="20" mb="0" cb="0"/><line nr="90" mi="0" ci="24" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="212"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="9" ci="9" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="15" mb="0" cb="0"/><line nr="324" mi="0" ci="91" mb="6" cb="20"/><line nr="325" mi="0" ci="65" mb="0" cb="0"/><line nr="327" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="454"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="13" covered="80"/><counter type="METHOD" missed="7" covered="73"/><counter type="CLASS" missed="5" covered="48"/></sourcefile><sourcefile name="NestedClassesVisibility.kt"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="1" cb="5"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="18" mb="0" cb="6"/><line nr="52" mi="0" ci="21" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="1" cb="3"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectLiteralToLambda.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="18" mb="0" cb="4"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="1" cb="3"/><line nr="76" mi="1" ci="9" mb="1" cb="1"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="1" cb="3"/><line nr="87" mi="0" ci="5" mb="1" cb="1"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="1" cb="1"/><line nr="97" mi="0" ci="16" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="0" cb="4"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="18" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="243"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="5" covered="27"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedVariable.kt"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="25" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="17" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="4"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="1" ci="4" mb="1" cb="1"/><line nr="106" mi="0" ci="8" mb="1" cb="1"/><line nr="107" mi="0" ci="9" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="5" ci="12" mb="2" cb="2"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="2" ci="11" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="2" ci="12" mb="1" cb="1"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="327"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EqualsOnSignatureLine.kt"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="1" cb="3"/><line nr="43" mi="0" ci="13" mb="1" cb="3"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseEmptyCounterpart.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="2" ci="8" mb="1" cb="1"/><line nr="43" mi="2" ci="10" mb="1" cb="1"/><line nr="44" mi="0" ci="9" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="17" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="23" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="136"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnnecessaryInnerClass.kt"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="4"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="2" ci="7" mb="1" cb="1"/><line nr="89" mi="0" ci="10" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="23" mb="0" cb="4"/><line nr="105" mi="0" ci="6" mb="0" cb="2"/><line nr="108" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="1" ci="4" mb="1" cb="1"/><line nr="110" mi="0" ci="4" mb="1" cb="1"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="1" cb="1"/><counter type="INSTRUCTION" missed="3" covered="270"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="6" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AlsoCouldBeApply.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="20" mb="1" cb="5"/><line nr="45" mi="1" ci="15" mb="2" cb="4"/><line nr="46" mi="3" ci="19" mb="2" cb="2"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="17" mb="2" cb="4"/><line nr="49" mi="0" ci="24" mb="1" cb="7"/><line nr="50" mi="0" ci="18" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="128"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CascadingCallWrapping.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="28" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="1" cb="3"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="4"/><line nr="60" mi="4" ci="21" mb="3" cb="3"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="3" ci="9" mb="1" cb="1"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="2" ci="4" mb="1" cb="1"/><line nr="82" mi="3" ci="4" mb="1" cb="1"/><line nr="83" mi="3" ci="11" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="17" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="2"/><line nr="97" mi="3" ci="8" mb="2" cb="2"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="103" mi="6" ci="23" mb="3" cb="5"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="2" ci="15" mb="1" cb="3"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="9" ci="6" mb="1" cb="1"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="27" mb="0" cb="0"/><line nr="121" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="334"/><counter type="BRANCH" missed="17" covered="35"/><counter type="LINE" missed="3" covered="48"/><counter type="COMPLEXITY" missed="17" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullableBooleanCheck.kt"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="40" mi="2" ci="15" mb="1" cb="5"/><line nr="41" mi="0" ci="19" mb="1" cb="7"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="2" ci="9" mb="1" cb="3"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="13" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="102"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UselessCallOnNotNull.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="16" mb="0" cb="4"/><line nr="60" mi="0" ci="4" mb="1" cb="3"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="2" ci="8" mb="1" cb="1"/><line nr="67" mi="2" ci="10" mb="1" cb="1"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="13" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="2"/><line nr="89" mi="0" ci="17" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="13" mb="1" cb="3"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="2"/><line nr="113" mi="0" ci="18" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="28" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="121" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="355"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UseCheckOrError.kt"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="18" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="20" mb="0" cb="6"/><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoTabs.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="2"/><line nr="27" mi="0" ci="17" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="24" mb="1" cb="5"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedPrivateClass.kt"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="28" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="14" mb="0" cb="2"/><line nr="68" mi="0" ci="9" mb="0" cb="2"/><line nr="69" mi="4" ci="9" mb="2" cb="2"/><line nr="70" mi="1" ci="8" mb="2" cb="2"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="19" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="14" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="1" cb="1"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="2" ci="11" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="2" ci="17" mb="1" cb="3"/><line nr="102" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="9" mb="1" cb="1"/><line nr="106" mi="2" ci="8" mb="1" cb="1"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="1" cb="1"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="1" ci="10" mb="1" cb="1"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="11" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="13" mb="1" cb="3"/><line nr="131" mi="2" ci="9" mb="1" cb="1"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="1" ci="10" mb="1" cb="1"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="1" ci="10" mb="1" cb="1"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="1" ci="10" mb="1" cb="1"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="2" ci="14" mb="2" cb="2"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="1" ci="11" mb="1" cb="1"/><line nr="168" mi="0" ci="5" mb="1" cb="1"/><line nr="169" mi="1" ci="12" mb="2" cb="2"/><line nr="170" mi="0" ci="10" mb="1" cb="1"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="12" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="12" mb="1" cb="3"/><line nr="179" mi="0" ci="9" mb="0" cb="2"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="2" ci="14" mb="1" cb="3"/><line nr="197" mi="0" ci="21" mb="1" cb="5"/><line nr="202" mi="0" ci="15" mb="1" cb="5"/><counter type="INSTRUCTION" missed="23" covered="626"/><counter type="BRANCH" missed="27" covered="67"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="27" covered="44"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ForbiddenAnnotation.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="25" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="22" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="2" ci="13" mb="2" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="14" mb="1" cb="3"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="12" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="4" ci="18" mb="1" cb="1"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="15" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="2" ci="12" mb="1" cb="1"/><line nr="104" mi="0" ci="14" mb="0" cb="2"/><counter type="INSTRUCTION" missed="8" covered="273"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseDataClass.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="26" mb="0" cb="0"/><line nr="55" mi="0" ci="23" mb="0" cb="0"/><line nr="59" mi="0" ci="32" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="4"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="80" mi="0" ci="13" mb="0" cb="4"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="4" ci="17" mb="3" cb="3"/><line nr="88" mi="2" ci="9" mb="2" cb="2"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="20" mb="0" cb="8"/><line nr="91" mi="0" ci="20" mb="0" cb="4"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="0" ci="8" mb="0" cb="4"/><line nr="96" mi="0" ci="6" mb="0" cb="6"/><line nr="97" mi="0" ci="5" mb="1" cb="3"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="1" cb="3"/><line nr="114" mi="0" ci="27" mb="0" cb="4"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="2" ci="13" mb="1" cb="1"/><line nr="119" mi="0" ci="11" mb="1" cb="3"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="4"/><line nr="134" mi="0" ci="13" mb="0" cb="2"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="1" ci="4" mb="1" cb="1"/><line nr="140" mi="0" ci="9" mb="1" cb="1"/><line nr="141" mi="2" ci="3" mb="1" cb="1"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="1" ci="4" mb="1" cb="1"/><line nr="146" mi="0" ci="13" mb="1" cb="3"/><line nr="147" mi="2" ci="3" mb="1" cb="1"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="2" mb="1" cb="1"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="2" ci="6" mb="1" cb="1"/><line nr="159" mi="4" ci="17" mb="3" cb="3"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="5" mb="0" cb="2"/><line nr="162" mi="0" ci="19" mb="0" cb="2"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="607"/><counter type="BRANCH" missed="20" covered="100"/><counter type="LINE" missed="1" covered="75"/><counter type="COMPLEXITY" missed="20" covered="56"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenNamedParam.kt"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="27" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="17" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="13" mb="0" cb="2"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="22" mb="3" cb="3"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="1" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="10" mb="0" cb="2"/><line nr="77" mi="0" ci="34" mb="0" cb="6"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="13" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="17" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="205"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractClassCanBeConcreteClass.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="27" mb="0" cb="0"/><line nr="60" mi="0" ci="23" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="2" ci="5" mb="1" cb="1"/><line nr="81" mi="0" ci="17" mb="0" cb="6"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="4"/><line nr="85" mi="0" ci="10" mb="0" cb="4"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="17" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="4"/><line nr="97" mi="0" ci="17" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="18" mb="1" cb="5"/><line nr="102" mi="0" ci="22" mb="1" cb="5"/><line nr="104" mi="0" ci="22" mb="1" cb="7"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="2" ci="5" mb="1" cb="1"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="5" ci="20" mb="3" cb="3"/><line nr="113" mi="3" ci="20" mb="2" cb="6"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="4" ci="28" mb="2" cb="4"/><line nr="120" mi="1" ci="4" mb="1" cb="1"/><line nr="121" mi="0" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="17" covered="370"/><counter type="BRANCH" missed="14" covered="56"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="14" covered="33"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LoopWithTooManyJumpStatements.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="28" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="3" ci="21" mb="1" cb="1"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="2" ci="9" mb="1" cb="1"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="4"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="1" cb="1"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="177"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UnusedPrivateFunction.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="28" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="4"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="14" mb="0" cb="4"/><line nr="93" mi="0" ci="17" mb="0" cb="4"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="2" ci="22" mb="1" cb="3"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="2"/><line nr="105" mi="0" ci="17" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="2" ci="12" mb="1" cb="1"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="2"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="22" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="2" ci="7" mb="1" cb="1"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="2"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="4"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="18" mb="0" cb="4"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="1" cb="1"/><line nr="163" mi="0" ci="13" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="4" ci="12" mb="2" cb="2"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="1" ci="12" mb="1" cb="1"/><line nr="171" mi="4" ci="26" mb="2" cb="2"/><line nr="172" mi="2" ci="12" mb="1" cb="1"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="2"/><line nr="189" mi="0" ci="7" mb="0" cb="2"/><line nr="190" mi="0" ci="7" mb="0" cb="2"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="3" mb="1" cb="1"/><line nr="193" mi="0" ci="10" mb="0" cb="2"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="27" mb="0" cb="8"/><line nr="196" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="692"/><counter type="BRANCH" missed="11" covered="79"/><counter type="LINE" missed="1" covered="101"/><counter type="COMPLEXITY" missed="11" covered="49"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReturnCount.kt"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="27" mb="0" cb="0"/><line nr="53" mi="0" ci="37" mb="0" cb="0"/><line nr="56" mi="0" ci="27" mb="0" cb="0"/><line nr="59" mi="0" ci="27" mb="0" cb="0"/><line nr="62" mi="0" ci="28" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="18" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="4"/><line nr="87" mi="0" ci="10" mb="0" cb="4"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="16" mb="1" cb="5"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="2"/><line nr="103" mi="1" ci="20" mb="1" cb="1"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="15" mb="1" cb="3"/><counter type="INSTRUCTION" missed="1" covered="345"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Comparisons.kt"/><sourcefile name="SpacingAfterPackageDeclaration.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="4"/><line nr="42" mi="2" ci="8" mb="1" cb="1"/><line nr="43" mi="0" ci="12" mb="0" cb="4"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="20" mb="2" cb="6"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="1" cb="3"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="1" ci="19" mb="2" cb="4"/><line nr="68" mi="2" ci="15" mb="1" cb="1"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="1" cb="3"/><line nr="71" mi="3" ci="12" mb="3" cb="3"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="1" cb="3"/><line nr="83" mi="0" ci="16" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="195"/><counter type="BRANCH" missed="12" covered="36"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="12" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultilineRawStringIndentation.kt"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="27" mb="0" cb="0"/><line nr="61" mi="0" ci="38" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="4"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="2" ci="6" mb="1" cb="1"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="16" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="6" ci="15" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="4"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="23" mb="0" cb="6"/><line nr="112" mi="0" ci="12" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="13" mb="0" cb="2"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="2"/><line nr="121" mi="0" ci="15" mb="0" cb="4"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="7" ci="46" mb="2" cb="4"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="9" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="15" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="15" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="17" mb="0" cb="2"/><line nr="170" mi="0" ci="19" mb="0" cb="2"/><line nr="174" mi="4" ci="12" mb="3" cb="3"/><line nr="175" mi="0" ci="16" mb="0" cb="4"/><line nr="178" mi="0" ci="10" mb="0" cb="4"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="14" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="2"/><line nr="188" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="2"/><line nr="192" mi="0" ci="12" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="15" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="691"/><counter type="BRANCH" missed="6" covered="52"/><counter type="LINE" missed="0" covered="83"/><counter type="COMPLEXITY" missed="8" covered="41"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="VarCouldBeVal.kt"><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="32" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="1" cb="5"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="17" mb="1" cb="5"/><line nr="108" mi="0" ci="9" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="4"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="1" cb="1"/><line nr="136" mi="2" ci="9" mb="1" cb="1"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="2"/><line nr="143" mi="2" ci="9" mb="1" cb="1"/><line nr="146" mi="0" ci="15" mb="0" cb="2"/><line nr="147" mi="0" ci="7" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="1" cb="3"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="17" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="2"/><line nr="172" mi="2" ci="11" mb="1" cb="1"/><line nr="173" mi="2" ci="11" mb="1" cb="1"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="2" ci="12" mb="2" cb="2"/><line nr="178" mi="1" ci="8" mb="1" cb="1"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="16" mb="1" cb="3"/><line nr="192" mi="2" ci="18" mb="1" cb="1"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="2" ci="12" mb="2" cb="2"/><line nr="202" mi="1" ci="7" mb="1" cb="1"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="16" mb="1" cb="7"/><line nr="210" mi="0" ci="9" mb="0" cb="4"/><line nr="214" mi="0" ci="12" mb="0" cb="2"/><line nr="215" mi="0" ci="12" mb="0" cb="4"/><line nr="216" mi="0" ci="4" mb="0" cb="2"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="2" ci="29" mb="1" cb="9"/><line nr="224" mi="0" ci="11" mb="1" cb="3"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="1" ci="3" mb="1" cb="1"/><line nr="229" mi="0" ci="13" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="669"/><counter type="BRANCH" missed="20" covered="90"/><counter type="LINE" missed="0" covered="101"/><counter type="COMPLEXITY" missed="20" covered="54"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DataClassContainsFunctions.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="26" mb="0" cb="0"/><line nr="37" mi="0" ci="28" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="14" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="1" cb="1"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="16" mb="1" cb="3"/><line nr="53" mi="0" ci="8" mb="1" cb="3"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WildcardImport.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="28" mb="0" cb="0"/><line nr="51" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="2" ci="7" mb="1" cb="1"/><line nr="56" mi="0" ci="2" mb="1" cb="1"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="120"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseIfInsteadOfWhen.kt"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="28" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="1" cb="3"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="2" ci="16" mb="2" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="97"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="_Sequences.kt"><line nr="477" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DataClassShouldBeImmutable.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaxChainedCallsOnSameLine.kt"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="28" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="4"/><line nr="53" mi="0" ci="7" mb="0" cb="4"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="4"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="73" mi="3" ci="12" mb="1" cb="3"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="15" mb="1" cb="5"/><line nr="79" mi="0" ci="5" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="4"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="3" ci="5" mb="1" cb="1"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="1" cb="3"/><line nr="110" mi="0" ci="13" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="258"/><counter type="BRANCH" missed="4" covered="34"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="4" covered="24"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionBodySyntax.kt"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="28" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="2"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="12" mb="0" cb="4"/><line nr="64" mi="0" ci="10" mb="0" cb="6"/><line nr="65" mi="0" ci="18" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="26" mb="1" cb="7"/><line nr="73" mi="0" ci="27" mb="0" cb="4"/><line nr="76" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="1" covered="27"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="23"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseArrayLiteralsInAnnotations.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="20" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="5" ci="11" mb="3" cb="3"/><line nr="42" mi="0" ci="11" mb="0" cb="2"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="1" cb="1"/><line nr="45" mi="0" ci="19" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="20" mb="1" cb="5"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="30" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="202"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractClassCanBeInterface.kt"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="2" ci="5" mb="1" cb="1"/><line nr="63" mi="0" ci="7" mb="0" cb="4"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="14" mb="0" cb="4"/><line nr="67" mi="0" ci="10" mb="0" cb="4"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="0" ci="17" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="4"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="21" mb="0" cb="8"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="4"/><line nr="84" mi="0" ci="17" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="18" mb="1" cb="5"/><line nr="89" mi="0" ci="22" mb="1" cb="5"/><line nr="91" mi="0" ci="22" mb="1" cb="7"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="2"/><line nr="96" mi="2" ci="5" mb="1" cb="1"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="5" ci="20" mb="3" cb="3"/><line nr="100" mi="3" ci="20" mb="2" cb="6"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="4" ci="28" mb="2" cb="4"/><line nr="107" mi="1" ci="4" mb="1" cb="1"/><line nr="108" mi="0" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="17" covered="323"/><counter type="BRANCH" missed="14" covered="66"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="14" covered="34"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedImport.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="30" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="30" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="17" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="20" mb="0" cb="2"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="2" ci="17" mb="1" cb="5"/><line nr="79" mi="0" ci="13" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="14" mb="0" cb="4"/><line nr="82" mi="2" ci="20" mb="2" cb="4"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="4"/><line nr="88" mi="4" ci="22" mb="2" cb="6"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="5" ci="18" mb="4" cb="4"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="22" mb="0" cb="6"/><line nr="113" mi="0" ci="22" mb="0" cb="6"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="2"/><line nr="127" mi="0" ci="9" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="16" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="15" mb="0" cb="2"/><line nr="147" mi="0" ci="18" mb="0" cb="0"/><line nr="148" mi="0" ci="21" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="0" cb="2"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="1" cb="3"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="76" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><line nr="164" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="12" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="2" ci="10" mb="2" cb="2"/><counter type="INSTRUCTION" missed="15" covered="852"/><counter type="BRANCH" missed="12" covered="66"/><counter type="LINE" missed="0" covered="92"/><counter type="COMPLEXITY" missed="12" covered="52"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="StyleGuideProvider.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="192" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="394"/><counter type="LINE" missed="0" covered="99"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultilineLambdaItParameter.kt"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="0" ci="14" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="4"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="3" ci="8" mb="2" cb="2"/><line nr="98" mi="0" ci="4" mb="1" cb="2"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="2"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="115"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MayBeConstant.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="2" ci="11" mb="2" cb="2"/><line nr="59" mi="2" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="6"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="2" ci="14" mb="1" cb="3"/><line nr="98" mi="0" ci="14" mb="0" cb="0"/><line nr="99" mi="0" ci="18" mb="0" cb="6"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="8" mb="0" cb="2"/><line nr="111" mi="0" ci="12" mb="0" cb="4"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="1" cb="1"/><line nr="117" mi="0" ci="6" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="1" cb="1"/><line nr="119" mi="0" ci="6" mb="1" cb="1"/><line nr="120" mi="0" ci="6" mb="1" cb="1"/><line nr="121" mi="0" ci="6" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="2" ci="22" mb="2" cb="6"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="7" mb="1" cb="1"/><line nr="131" mi="0" ci="8" mb="1" cb="1"/><line nr="132" mi="4" ci="13" mb="3" cb="3"/><line nr="133" mi="4" ci="17" mb="3" cb="3"/><counter type="INSTRUCTION" missed="16" covered="386"/><counter type="BRANCH" missed="17" covered="69"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="17" covered="38"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenImport.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="28" mb="0" cb="0"/><line nr="32" mi="0" ci="16" mb="0" cb="0"/><line nr="36" mi="0" ci="28" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="4" ci="9" mb="2" cb="2"/><line nr="43" mi="0" ci="27" mb="0" cb="4"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="14" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="2"/><line nr="55" mi="0" ci="17" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="0" ci="20" mb="0" cb="6"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="232"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UseCheckNotNull.kt"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="2"/><line nr="34" mi="0" ci="18" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryInheritance.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="2"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="9" mb="0" cb="2"/><line nr="29" mi="0" ci="9" mb="0" cb="2"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleNegativeLambda.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="24" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="0"/><line nr="64" mi="0" ci="48" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="2" ci="8" mb="2" cb="2"/><line nr="69" mi="0" ci="16" mb="0" cb="2"/><line nr="70" mi="2" ci="10" mb="1" cb="1"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="4"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="45" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="13" mb="0" cb="0"/><line nr="100" mi="0" ci="15" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="25" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="413"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BracesOnIfStatements.kt"><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="30" mb="0" cb="0"/><line nr="156" mi="0" ci="31" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="4"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="2" ci="11" mb="1" cb="1"/><line nr="175" mi="0" ci="19" mb="0" cb="4"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="6" mb="0" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="4"/><line nr="191" mi="0" ci="12" mb="0" cb="2"/><line nr="195" mi="0" ci="16" mb="0" cb="4"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="9" mb="0" cb="0"/><line nr="204" mi="0" ci="13" mb="0" cb="2"/><line nr="205" mi="0" ci="4" mb="0" cb="4"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="7" mb="0" cb="2"/><line nr="219" mi="2" ci="7" mb="1" cb="1"/><line nr="220" mi="19" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="4"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="3" ci="18" mb="1" cb="1"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="13" mb="0" cb="4"/><line nr="254" mi="0" ci="10" mb="0" cb="2"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="11" mb="0" cb="0"/><line nr="260" mi="0" ci="7" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="19" mb="0" cb="0"/><line nr="267" mi="3" ci="12" mb="1" cb="1"/><line nr="268" mi="26" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="421"/><counter type="BRANCH" missed="4" covered="50"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="4" covered="43"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ForbiddenVoid.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="27" mb="0" cb="0"/><line nr="48" mi="0" ci="32" mb="0" cb="0"/><line nr="51" mi="2" ci="7" mb="1" cb="1"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="4"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="1" cb="3"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="18" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="4"/><line nr="68" mi="2" ci="21" mb="1" cb="5"/><line nr="71" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="1" cb="1"/><line nr="73" mi="0" ci="11" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="1" ci="9" mb="1" cb="1"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="213"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseOrEmpty.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="1" ci="5" mb="1" cb="1"/><line nr="55" mi="2" ci="5" mb="1" cb="1"/><line nr="56" mi="2" ci="5" mb="1" cb="1"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="59" mi="2" ci="7" mb="1" cb="1"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="3" ci="17" mb="2" cb="2"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="12" mb="0" cb="4"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="2" ci="7" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="74" mi="0" ci="17" mb="0" cb="0"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="3" ci="7" mb="2" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="4"/><line nr="85" mi="3" ci="13" mb="3" cb="3"/><line nr="86" mi="0" ci="21" mb="1" cb="5"/><line nr="88" mi="1" ci="15" mb="2" cb="2"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="16" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="298"/><counter type="BRANCH" missed="17" covered="39"/><counter type="LINE" missed="1" covered="48"/><counter type="COMPLEXITY" missed="17" covered="15"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenMethodCall.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="25" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="2"/><line nr="82" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="2" ci="13" mb="1" cb="5"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="16" mb="1" cb="3"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="13" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="34" mb="0" cb="6"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="15" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="139" mi="0" ci="17" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="378"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="2" covered="27"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RedundantVisibilityModifier.kt"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="4"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="2"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="5" ci="20" mb="5" cb="5"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="261"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="5" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="RedundantConstructorKeyword.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="1" cb="1"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="4"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="17" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassOrdering.kt"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="1" ci="13" mb="1" cb="1"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="17" mb="1" cb="1"/><line nr="75" mi="0" ci="21" mb="0" cb="4"/><line nr="76" mi="0" ci="9" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="2"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="1" ci="32" mb="1" cb="5"/><line nr="86" mi="2" ci="4" mb="1" cb="1"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="16" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="19" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="19" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="2"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="7" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="3" ci="20" mb="1" cb="1"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="16" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="5" mb="0" cb="2"/><line nr="153" mi="0" ci="16" mb="0" cb="2"/><line nr="154" mi="0" ci="9" mb="2" cb="2"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="8" mb="0" cb="2"/><line nr="164" mi="0" ci="12" mb="0" cb="4"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="11" ci="12" mb="3" cb="3"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="4"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="548"/><counter type="BRANCH" missed="11" covered="66"/><counter type="LINE" missed="4" covered="90"/><counter type="COMPLEXITY" missed="12" covered="40"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ExplicitCollectionElementAccessMethod.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="4"/><line nr="47" mi="0" ci="8" mb="0" cb="4"/><line nr="48" mi="0" ci="18" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="2" ci="13" mb="1" cb="5"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="2"/><line nr="61" mi="0" ci="12" mb="0" cb="4"/><line nr="65" mi="2" ci="8" mb="1" cb="3"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="0" cb="4"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="20" mb="0" cb="4"/><line nr="86" mi="0" ci="17" mb="0" cb="0"/><line nr="87" mi="0" ci="15" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="4" ci="12" mb="2" cb="2"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="2" ci="8" mb="1" cb="1"/><line nr="109" mi="2" ci="13" mb="2" cb="2"/><line nr="110" mi="0" ci="7" mb="1" cb="3"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="2" ci="10" mb="2" cb="2"/><line nr="114" mi="3" ci="17" mb="2" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="314"/><counter type="BRANCH" missed="13" covered="53"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="13" covered="29"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RangeUntilInsteadOfRangeTo.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="2" ci="9" mb="2" cb="2"/><line nr="45" mi="2" ci="14" mb="2" cb="2"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="0" ci="6" mb="0" cb="2"/><line nr="55" mi="3" ci="21" mb="2" cb="4"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="127"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RedundantExplicitType.kt"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="2" ci="13" mb="2" cb="2"/><line nr="56" mi="1" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="1" ci="9" mb="1" cb="3"/><line nr="60" mi="1" ci="6" mb="1" cb="3"/><line nr="61" mi="1" ci="10" mb="1" cb="3"/><line nr="62" mi="2" ci="15" mb="2" cb="4"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="16" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="11" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="1" cb="1"/><line nr="81" mi="0" ci="22" mb="1" cb="3"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="172"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnderscoresInNumericLiterals.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="32" mb="0" cb="0"/><line nr="42" mi="0" ci="32" mb="0" cb="0"/><line nr="45" mi="0" ci="32" mb="0" cb="0"/><line nr="47" mi="0" ci="18" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="18" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="4"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="1" cb="1"/><line nr="79" mi="0" ci="11" mb="1" cb="1"/><line nr="82" mi="3" ci="13" mb="1" cb="3"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="15" mb="0" cb="6"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="4"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="1" ci="12" mb="0" cb="2"/><line nr="93" mi="1" ci="4" mb="1" cb="1"/><line nr="94" mi="0" ci="10" mb="1" cb="1"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="17" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="19" mb="0" cb="4"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="369"/><counter type="BRANCH" missed="5" covered="37"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenSuppress.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="31" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="2"/><line nr="49" mi="2" ci="7" mb="1" cb="1"/><line nr="50" mi="0" ci="8" mb="1" cb="3"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="52" mi="0" ci="26" mb="0" cb="4"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="1" cb="1"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="4"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="25" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="2" ci="9" mb="1" cb="1"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="224"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExplicitItLambdaParameter.kt"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="14" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedPrivateProperty.kt"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="25" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="2"/><line nr="103" mi="0" ci="17" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="12" mb="0" cb="2"/><line nr="113" mi="1" ci="16" mb="1" cb="1"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="2"/><line nr="123" mi="0" ci="17" mb="0" cb="2"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="12" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="0" cb="4"/><line nr="140" mi="0" ci="4" mb="1" cb="1"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="2"/><line nr="175" mi="0" ci="8" mb="0" cb="2"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="5" ci="12" mb="2" cb="2"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="4"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="3" ci="15" mb="4" cb="4"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="2"/><line nr="192" mi="0" ci="8" mb="0" cb="2"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="4" ci="12" mb="2" cb="2"/><line nr="203" mi="4" ci="12" mb="2" cb="2"/><line nr="204" mi="0" ci="13" mb="0" cb="6"/><line nr="208" mi="0" ci="15" mb="1" cb="3"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="6" ci="29" mb="5" cb="7"/><counter type="INSTRUCTION" missed="23" covered="596"/><counter type="BRANCH" missed="18" covered="64"/><counter type="LINE" missed="0" covered="93"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UseSumOfInsteadOfFlatMapSize.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="2" ci="8" mb="2" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="1" cb="3"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="54" mi="0" ci="19" mb="2" cb="6"/><line nr="55" mi="0" ci="15" mb="0" cb="0"/><line nr="56" mi="0" ci="17" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="6"/><line nr="63" mi="3" ci="7" mb="1" cb="1"/><line nr="64" mi="4" ci="13" mb="2" cb="2"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="3" ci="19" mb="2" cb="4"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="200"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrailingWhitespace.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="4"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="17" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="21" mb="0" cb="4"/><line nr="63" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryAnnotationUseSiteTarget.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="1" cb="3"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="156"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FunctionOnlyReturningConstant.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="27" mb="0" cb="0"/><line nr="43" mi="0" ci="27" mb="0" cb="0"/><line nr="46" mi="0" ci="37" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="4"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="16" mb="0" cb="6"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="4"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="2"/><line nr="89" mi="0" ci="13" mb="0" cb="4"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="4"/><line nr="99" mi="2" ci="19" mb="2" cb="4"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="104" mi="0" ci="15" mb="1" cb="3"/><counter type="INSTRUCTION" missed="2" covered="294"/><counter type="BRANCH" missed="3" covered="47"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ForbiddenComment.kt"><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="25" mb="0" cb="0"/><line nr="99" mi="0" ci="24" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="35" mb="0" cb="0"/><line nr="111" mi="0" ci="27" mb="0" cb="0"/><line nr="115" mi="0" ci="31" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="17" mb="0" cb="6"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="1" cb="1"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="2"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="33" mb="0" cb="2"/><line nr="164" mi="0" ci="20" mb="0" cb="6"/><line nr="165" mi="0" ci="26" mb="0" cb="0"/><line nr="167" mi="0" ci="15" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="2"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="2"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="14" mb="0" cb="4"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="2"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="25" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="550"/><counter type="BRANCH" missed="1" covered="29"/><counter type="LINE" missed="0" covered="71"/><counter type="COMPLEXITY" missed="1" covered="34"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UnnecessaryLet.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="14" mb="0" cb="2"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="4"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="4"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="6"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="17" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="4" ci="12" mb="2" cb="2"/><line nr="88" mi="0" ci="12" mb="0" cb="4"/><line nr="92" mi="2" ci="2" mb="1" cb="1"/><line nr="94" mi="2" ci="15" mb="2" cb="4"/><line nr="95" mi="0" ci="6" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="4"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="3" ci="5" mb="1" cb="1"/><line nr="122" mi="3" ci="6" mb="1" cb="1"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="26" mb="0" cb="2"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="313"/><counter type="BRANCH" missed="7" covered="53"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="7" covered="32"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnnecessaryBackticks.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="18" mb="0" cb="4"/><line nr="35" mi="0" ci="19" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="24" mb="1" cb="3"/><line nr="44" mi="0" ci="9" mb="0" cb="4"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="2"/><line nr="51" mi="0" ci="20" mb="1" cb="5"/><line nr="54" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="158"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UseIsNullOrEmpty.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="3" ci="12" mb="2" cb="2"/><line nr="57" mi="2" ci="5" mb="1" cb="1"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="1" ci="8" mb="2" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="17" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="4" ci="18" mb="3" cb="5"/><line nr="72" mi="2" ci="5" mb="1" cb="1"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="1" cb="1"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="22" mb="2" cb="6"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="1" cb="1"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="2" ci="6" mb="1" cb="1"/><line nr="89" mi="0" ci="13" mb="0" cb="2"/><line nr="93" mi="2" ci="5" mb="1" cb="1"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="3" ci="13" mb="1" cb="3"/><line nr="96" mi="11" ci="5" mb="3" cb="1"/><line nr="97" mi="3" ci="13" mb="1" cb="3"/><line nr="98" mi="3" ci="13" mb="1" cb="3"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="1" ci="11" mb="1" cb="1"/><line nr="107" mi="0" ci="5" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="3" ci="8" mb="1" cb="1"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="11" mb="1" cb="3"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="1" cb="1"/><line nr="116" mi="2" ci="4" mb="1" cb="1"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="2" ci="9" mb="1" cb="1"/><line nr="123" mi="2" ci="8" mb="1" cb="1"/><line nr="125" mi="2" ci="8" mb="1" cb="1"/><line nr="128" mi="4" ci="9" mb="4" cb="2"/><line nr="129" mi="22" ci="0" mb="6" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="19" mb="2" cb="2"/><line nr="132" mi="3" ci="19" mb="3" cb="3"/><line nr="135" mi="2" ci="9" mb="1" cb="1"/><line nr="138" mi="3" ci="6" mb="1" cb="1"/><line nr="139" mi="0" ci="19" mb="0" cb="6"/><line nr="143" mi="3" ci="6" mb="1" cb="1"/><line nr="144" mi="0" ci="15" mb="0" cb="4"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="22" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="20" mb="0" cb="0"/><line nr="166" mi="0" ci="24" mb="0" cb="0"/><line nr="168" mi="0" ci="25" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="574"/><counter type="BRANCH" missed="47" covered="83"/><counter type="LINE" missed="4" covered="71"/><counter type="COMPLEXITY" missed="42" covered="41"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EqualsNullCall.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="2" ci="13" mb="1" cb="5"/><line nr="30" mi="0" ci="20" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="2" ci="14" mb="1" cb="1"/><counter type="INSTRUCTION" missed="4" covered="61"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryAny.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="3" ci="6" mb="1" cb="1"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="3" ci="7" mb="1" cb="1"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="1" ci="6" mb="1" cb="1"/><line nr="81" mi="1" ci="12" mb="1" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="14" mb="0" cb="4"/><line nr="85" mi="2" ci="10" mb="1" cb="1"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="2" ci="4" mb="1" cb="1"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="18" mb="0" cb="4"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="1" ci="19" mb="2" cb="4"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="1" ci="6" mb="1" cb="3"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="9" mb="0" cb="4"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="4"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="2" ci="26" mb="3" cb="3"/><line nr="131" mi="0" ci="4" mb="1" cb="1"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="3" ci="4" mb="1" cb="1"/><line nr="147" mi="3" ci="4" mb="1" cb="1"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="4"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="3"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="16" mb="2" cb="4"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="3" ci="13" mb="3" cb="3"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="3" ci="4" mb="1" cb="1"/><line nr="196" mi="3" ci="8" mb="1" cb="1"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="417"/><counter type="BRANCH" missed="23" covered="73"/><counter type="LINE" missed="3" covered="79"/><counter type="COMPLEXITY" missed="23" covered="35"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedParameter.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="28" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="24" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="1" ci="5" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="1" ci="3" mb="1" cb="1"/><line nr="80" mi="1" ci="5" mb="1" cb="1"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="2" ci="11" mb="2" cb="2"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="1" cb="1"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="13" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="1" cb="1"/><line nr="128" mi="0" ci="4" mb="1" cb="1"/><line nr="129" mi="0" ci="4" mb="1" cb="1"/><line nr="130" mi="0" ci="4" mb="1" cb="1"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="1" cb="1"/><line nr="133" mi="0" ci="4" mb="1" cb="1"/><line nr="134" mi="0" ci="4" mb="0" cb="2"/><line nr="135" mi="0" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="5" covered="301"/><counter type="BRANCH" missed="14" covered="24"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="RedundantHigherOrderMapUsage.kt"><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="2" ci="9" mb="1" cb="3"/><line nr="85" mi="0" ci="10" mb="0" cb="2"/><line nr="86" mi="0" ci="12" mb="2" cb="4"/><line nr="88" mi="2" ci="8" mb="1" cb="1"/><line nr="89" mi="1" ci="11" mb="1" cb="1"/><line nr="91" mi="2" ci="8" mb="2" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="6"/><line nr="97" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="17" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="3" ci="22" mb="1" cb="3"/><line nr="109" mi="3" ci="11" mb="2" cb="2"/><line nr="110" mi="0" ci="16" mb="0" cb="4"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="20" mb="0" cb="4"/><line nr="118" mi="3" ci="10" mb="1" cb="1"/><line nr="119" mi="3" ci="10" mb="1" cb="1"/><line nr="120" mi="3" ci="6" mb="1" cb="1"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="123" mi="0" ci="15" mb="1" cb="3"/><line nr="125" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="2"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="16" mb="1" cb="3"/><line nr="138" mi="0" ci="20" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="361"/><counter type="BRANCH" missed="15" covered="53"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="15" covered="27"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Junk.kt"><line nr="24" mi="0" ci="13" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="14" ci="0" mb="4" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="20" ci="0" mb="0" cb="0"/><line nr="35" mi="10" ci="0" mb="4" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="16" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="15" mb="0" cb="4"/><line nr="50" mi="0" ci="13" mb="0" cb="4"/><line nr="51" mi="0" ci="4" mb="1" cb="1"/><line nr="52" mi="2" ci="11" mb="1" cb="3"/><line nr="56" mi="0" ci="23" mb="1" cb="3"/><counter type="INSTRUCTION" missed="79" covered="123"/><counter type="BRANCH" missed="13" covered="17"/><counter type="LINE" missed="10" covered="9"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="CanBeNonNullable.kt"><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="2" ci="8" mb="1" cb="1"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="2" ci="12" mb="1" cb="1"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="2"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="2"/><line nr="167" mi="0" ci="6" mb="1" cb="1"/><line nr="168" mi="0" ci="4" mb="1" cb="1"/><line nr="169" mi="0" ci="4" mb="0" cb="2"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="12" mb="0" cb="6"/><line nr="192" mi="0" ci="12" mb="0" cb="6"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="12" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="8" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="1" ci="4" mb="1" cb="1"/><line nr="208" mi="0" ci="4" mb="1" cb="1"/><line nr="209" mi="0" ci="4" mb="1" cb="1"/><line nr="212" mi="0" ci="8" mb="0" cb="4"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="2" ci="8" mb="1" cb="1"/><line nr="215" mi="0" ci="9" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="1" cb="1"/><line nr="224" mi="1" ci="9" mb="1" cb="1"/><line nr="225" mi="0" ci="9" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="2"/><line nr="234" mi="0" ci="6" mb="0" cb="2"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="236" mi="2" ci="15" mb="1" cb="3"/><line nr="237" mi="0" ci="13" mb="0" cb="2"/><line nr="238" mi="0" ci="18" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="4"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="6" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="2"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="9" mb="0" cb="2"/><line nr="261" mi="0" ci="4" mb="0" cb="2"/><line nr="262" mi="0" ci="5" mb="0" cb="2"/><line nr="264" mi="0" ci="7" mb="2" cb="2"/><line nr="265" mi="0" ci="13" mb="0" cb="0"/><line nr="266" mi="1" ci="10" mb="1" cb="1"/><line nr="267" mi="0" ci="7" mb="1" cb="1"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="11" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="12" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="2"/><line nr="279" mi="0" ci="4" mb="1" cb="1"/><line nr="280" mi="0" ci="4" mb="0" cb="2"/><line nr="281" mi="0" ci="5" mb="1" cb="1"/><line nr="282" mi="0" ci="5" mb="0" cb="2"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="7" mb="1" cb="1"/><line nr="286" mi="0" ci="9" mb="0" cb="0"/><line nr="287" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="2"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="1" cb="1"/><line nr="297" mi="5" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="5" mb="0" cb="2"/><line nr="315" mi="0" ci="5" mb="0" cb="2"/><line nr="316" mi="0" ci="3" mb="0" cb="2"/><line nr="317" mi="4" ci="9" mb="1" cb="1"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="1" ci="4" mb="1" cb="1"/><line nr="320" mi="0" ci="9" mb="1" cb="1"/><line nr="322" mi="0" ci="5" mb="0" cb="2"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><line nr="328" mi="0" ci="9" mb="0" cb="2"/><line nr="329" mi="0" ci="8" mb="0" cb="2"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="13" mb="0" cb="2"/><line nr="335" mi="0" ci="8" mb="0" cb="2"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="2" ci="12" mb="1" cb="1"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="2" ci="8" mb="1" cb="1"/><line nr="355" mi="2" ci="8" mb="1" cb="1"/><line nr="356" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="2"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="1" ci="10" mb="1" cb="1"/><line nr="361" mi="0" ci="7" mb="1" cb="1"/><line nr="362" mi="0" ci="7" mb="0" cb="4"/><line nr="363" mi="0" ci="14" mb="0" cb="2"/><line nr="366" mi="0" ci="16" mb="0" cb="2"/><line nr="367" mi="0" ci="16" mb="0" cb="2"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="0" cb="2"/><line nr="374" mi="0" ci="6" mb="0" cb="2"/><line nr="375" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="0" ci="8" mb="0" cb="2"/><line nr="377" mi="0" ci="5" mb="1" cb="1"/><line nr="380" mi="1" ci="13" mb="2" cb="2"/><line nr="381" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="0" ci="8" mb="0" cb="2"/><line nr="383" mi="2" ci="12" mb="1" cb="1"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="5" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="2"/><line nr="399" mi="2" ci="10" mb="1" cb="3"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="1" cb="1"/><line nr="404" mi="0" ci="9" mb="0" cb="2"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="2"/><line nr="413" mi="0" ci="2" mb="1" cb="1"/><line nr="414" mi="3" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="1" cb="1"/><line nr="416" mi="0" ci="2" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="2" ci="11" mb="1" cb="1"/><line nr="421" mi="0" ci="5" mb="0" cb="2"/><line nr="422" mi="0" ci="5" mb="0" cb="2"/><line nr="423" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="7" mb="0" cb="0"/><line nr="429" mi="0" ci="12" mb="2" cb="6"/><line nr="433" mi="0" ci="12" mb="1" cb="5"/><line nr="436" mi="2" ci="21" mb="2" cb="4"/><line nr="439" mi="0" ci="11" mb="0" cb="0"/><line nr="440" mi="0" ci="5" mb="1" cb="1"/><line nr="441" mi="0" ci="10" mb="1" cb="1"/><line nr="442" mi="0" ci="7" mb="0" cb="2"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="9" mb="0" cb="0"/><line nr="447" mi="0" ci="7" mb="0" cb="0"/><line nr="448" mi="0" ci="7" mb="0" cb="0"/><line nr="449" mi="0" ci="7" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="467" mi="0" ci="12" mb="0" cb="0"/><line nr="468" mi="0" ci="2" mb="0" cb="0"/><line nr="469" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="0" ci="7" mb="0" cb="0"/><line nr="471" mi="0" ci="11" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="475" mi="0" ci="1" mb="0" cb="0"/><line nr="478" mi="0" ci="8" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="6" mb="0" cb="4"/><line nr="481" mi="0" ci="6" mb="0" cb="0"/><line nr="483" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="1" mb="0" cb="0"/><line nr="487" mi="0" ci="5" mb="0" cb="2"/><line nr="488" mi="0" ci="9" mb="0" cb="0"/><line nr="489" mi="0" ci="8" mb="1" cb="1"/><line nr="490" mi="0" ci="4" mb="0" cb="2"/><line nr="491" mi="0" ci="4" mb="1" cb="1"/><line nr="493" mi="0" ci="2" mb="0" cb="2"/><line nr="494" mi="0" ci="5" mb="0" cb="2"/><line nr="495" mi="2" ci="14" mb="1" cb="5"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="503" mi="0" ci="2" mb="0" cb="0"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="9" mb="0" cb="2"/><line nr="521" mi="0" ci="25" mb="0" cb="10"/><line nr="523" mi="0" ci="7" mb="0" cb="0"/><line nr="524" mi="0" ci="17" mb="0" cb="6"/><line nr="526" mi="0" ci="17" mb="0" cb="6"/><line nr="527" mi="0" ci="17" mb="0" cb="6"/><line nr="528" mi="0" ci="19" mb="0" cb="6"/><line nr="529" mi="0" ci="26" mb="0" cb="10"/><line nr="530" mi="0" ci="8" mb="0" cb="4"/><line nr="534" mi="6" ci="15" mb="3" cb="3"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="536" mi="1" ci="13" mb="1" cb="1"/><line nr="537" mi="1" ci="17" mb="2" cb="2"/><line nr="538" mi="1" ci="16" mb="0" cb="2"/><line nr="539" mi="1" ci="5" mb="1" cb="1"/><line nr="540" mi="0" ci="4" mb="1" cb="1"/><line nr="541" mi="0" ci="5" mb="1" cb="1"/><line nr="542" mi="1" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="2" mb="0" cb="0"/><line nr="547" mi="0" ci="3" mb="0" cb="2"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="550" mi="0" ci="3" mb="0" cb="2"/><line nr="551" mi="2" ci="14" mb="2" cb="2"/><line nr="553" mi="0" ci="3" mb="0" cb="2"/><line nr="554" mi="0" ci="19" mb="1" cb="7"/><line nr="556" mi="1" ci="16" mb="0" cb="2"/><line nr="557" mi="1" ci="8" mb="1" cb="3"/><line nr="558" mi="0" ci="8" mb="0" cb="0"/><line nr="566" mi="2" ci="18" mb="2" cb="4"/><line nr="568" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="1657"/><counter type="BRANCH" missed="62" covered="264"/><counter type="LINE" missed="3" covered="266"/><counter type="COMPLEXITY" missed="63" covered="153"/><counter type="METHOD" missed="1" covered="52"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="NewLineAtEndOfFile.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="18" mb="0" cb="6"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="105"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OptionalAbstractKeyword.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="1" cb="1"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="1" cb="3"/><line nr="54" mi="0" ci="16" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryApply.kt"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="2" ci="14" mb="1" cb="5"/><line nr="66" mi="2" ci="20" mb="3" cb="3"/><line nr="70" mi="0" ci="16" mb="1" cb="3"/><line nr="71" mi="0" ci="15" mb="2" cb="4"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="2" ci="6" mb="1" cb="1"/><line nr="77" mi="3" ci="7" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="3" ci="11" mb="1" cb="1"/><line nr="86" mi="0" ci="14" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="2" ci="11" mb="2" cb="2"/><line nr="91" mi="0" ci="12" mb="1" cb="3"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="221"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="13" covered="21"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CollapsibleIfStatements.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="4"/><line nr="42" mi="0" ci="19" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="4"/><line nr="51" mi="0" ci="19" mb="1" cb="3"/><line nr="53" mi="0" ci="11" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1075" covered="27566"/><counter type="BRANCH" missed="687" covered="3099"/><counter type="LINE" missed="42" covered="3740"/><counter type="COMPLEXITY" missed="689" covered="2170"/><counter type="METHOD" missed="12" covered="949"/><counter type="CLASS" missed="6" covered="191"/></package><package name="io/github/detekt/tooling/dsl"><class name="io/github/detekt/tooling/dsl/ReportsSpecBuilder" sourcefilename="ReportsSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReports" desc="()Ljava/util/Collection;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setReports" desc="(Ljava/util/Collection;)V" line="9"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="report" desc="(Lkotlin/jvm/functions/Function0;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ReportsSpec;" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ReportsModel" sourcefilename="ReportsSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReports" desc="()Ljava/util/Collection;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ExtensionsSpecBuilder" sourcefilename="ExtensionsSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlugins" desc="()Lio/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPlugins" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins;)V" line="11"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ExtensionsSpec;" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disableExtension" desc="(Ljava/lang/String;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromPaths" desc="(Lkotlin/jvm/functions/Function0;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromClassloader" desc="(Lkotlin/jvm/functions/Function0;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="85"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/LoggingSpecBuilder" sourcefilename="LoggingSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDebug" desc="()Z" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDebug" desc="(Z)V" line="7"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutputChannel" desc="()Ljava/lang/Appendable;" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOutputChannel" desc="(Ljava/lang/Appendable;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorChannel" desc="()Ljava/lang/Appendable;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setErrorChannel" desc="(Ljava/lang/Appendable;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/LoggingSpec;" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="46"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ProcessingModelDsl" sourcefilename="ProcessingModelDsl.kt"/><class name="io/github/detekt/tooling/dsl/ProjectModel" sourcefilename="ProjectSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/util/Collection;Lio/github/detekt/tooling/api/AnalysisMode;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputPaths" desc="()Ljava/util/Collection;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnalysisMode" desc="()Lio/github/detekt/tooling/api/AnalysisMode;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/CompilerModel" sourcefilename="CompilerSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJvmTarget" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLanguageVersion" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApiVersion" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClasspath" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJdkHome" desc="()Ljava/nio/file/Path;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFreeCompilerArgs" desc="()Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ConfigModel" sourcefilename="ConfigSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Boolean;ZLjava/util/Collection;Ljava/util/Collection;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShouldValidateBeforeAnalysis" desc="()Ljava/lang/Boolean;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseDefaultConfig" desc="()Z" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="()Ljava/util/Collection;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigPaths" desc="()Ljava/util/Collection;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ExecutionModel" sourcefilename="ExecutionSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;ZZ)V" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutorService" desc="()Ljava/util/concurrent/ExecutorService;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParallelParsing" desc="()Z" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParallelAnalysis" desc="()Z" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ConfigSpecBuilder" sourcefilename="ConfigSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShouldValidateBeforeAnalysis" desc="()Ljava/lang/Boolean;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setShouldValidateBeforeAnalysis" desc="(Ljava/lang/Boolean;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseDefaultConfig" desc="()Z" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setUseDefaultConfig" desc="(Z)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResources" desc="()Ljava/util/Collection;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setResources" desc="(Ljava/util/Collection;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigPaths" desc="()Ljava/util/Collection;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setConfigPaths" desc="(Ljava/util/Collection;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ConfigSpec;" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="46"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ProcessingModel" sourcefilename="ProcessingSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/BaselineSpec;Lio/github/detekt/tooling/api/spec/CompilerSpec;Lio/github/detekt/tooling/api/spec/ConfigSpec;Lio/github/detekt/tooling/api/spec/ExecutionSpec;Lio/github/detekt/tooling/api/spec/ExtensionsSpec;Lio/github/detekt/tooling/api/spec/RulesSpec;Lio/github/detekt/tooling/api/spec/LoggingSpec;Lio/github/detekt/tooling/api/spec/ProjectSpec;Lio/github/detekt/tooling/api/spec/ReportsSpec;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaselineSpec" desc="()Lio/github/detekt/tooling/api/spec/BaselineSpec;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompilerSpec" desc="()Lio/github/detekt/tooling/api/spec/CompilerSpec;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigSpec" desc="()Lio/github/detekt/tooling/api/spec/ConfigSpec;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutionSpec" desc="()Lio/github/detekt/tooling/api/spec/ExecutionSpec;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtensionsSpec" desc="()Lio/github/detekt/tooling/api/spec/ExtensionsSpec;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRulesSpec" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoggingSpec" desc="()Lio/github/detekt/tooling/api/spec/LoggingSpec;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProjectSpec" desc="()Lio/github/detekt/tooling/api/spec/ProjectSpec;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReportsSpec" desc="()Lio/github/detekt/tooling/api/spec/ReportsSpec;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/RulesModel" sourcefilename="RulesSpecBuilder.kt"><method name="&lt;init&gt;" desc="(ZLio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;ZZLio/github/detekt/tooling/api/spec/RulesSpec$RunPolicy;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActivateAllRules" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFailurePolicy" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeCorrectable" desc="()Z" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAutoCorrect" desc="()Z" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRunPolicy" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec$RunPolicy;" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ExecutionSpecBuilder" sourcefilename="ExecutionSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExecutorService" desc="()Ljava/util/concurrent/ExecutorService;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setExecutorService" desc="(Ljava/util/concurrent/ExecutorService;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParallelParsing" desc="()Z" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParallelParsing" desc="(Z)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParallelAnalysis" desc="()Z" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParallelAnalysis" desc="(Z)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ExecutionSpec;" line="12"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ProcessingSpecBuilderKt" sourcefilename="ProcessingSpecBuilder.kt"><method name="processingSpec" desc="(Lkotlin/jvm/functions/Function1;)Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="15"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ExtensionsModel" sourcefilename="ExtensionsSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins;Ljava/util/Set;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlugins" desc="()Lio/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDisabledExtensions" desc="()Ljava/util/Set;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ProcessingSpecBuilder" sourcefilename="ProcessingSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baseline" desc="(Lkotlin/jvm/functions/Function1;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compiler" desc="(Lkotlin/jvm/functions/Function1;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="config" desc="(Lkotlin/jvm/functions/Function1;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execution" desc="(Lkotlin/jvm/functions/Function1;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extensions" desc="(Lkotlin/jvm/functions/Function1;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rules" desc="(Lkotlin/jvm/functions/Function1;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logging" desc="(Lkotlin/jvm/functions/Function1;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="project" desc="(Lkotlin/jvm/functions/Function1;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reports" desc="(Lkotlin/jvm/functions/Function1;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="40"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/BaselineSpecBuilder" sourcefilename="BaselineSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setPath" desc="(Ljava/nio/file/Path;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShouldCreateDuringAnalysis" desc="()Z" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setShouldCreateDuringAnalysis" desc="(Z)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/BaselineSpec;" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/RulesSpecBuilder" sourcefilename="RulesSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActivateAllRules" desc="()Z" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setActivateAllRules" desc="(Z)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFailurePolicy" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFailurePolicy" desc="(Lio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeCorrectable" desc="()Z" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setExcludeCorrectable" desc="(Z)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAutoCorrect" desc="()Z" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAutoCorrect" desc="(Z)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRunPolicy" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec$RunPolicy;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setRunPolicy" desc="(Lio/github/detekt/tooling/api/spec/RulesSpec$RunPolicy;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec;" line="15"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/BaselineModel" sourcefilename="BaselineSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Z)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getShouldCreateDuringAnalysis" desc="()Z" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/Report" sourcefilename="ReportsSpecBuilder.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/file/Path;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lkotlin/Pair;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/Builder" sourcefilename="Builder.kt"/><class name="io/github/detekt/tooling/dsl/LoggingModel" sourcefilename="LoggingSpecBuilder.kt"><method name="&lt;init&gt;" desc="(ZLjava/lang/Appendable;Ljava/lang/Appendable;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDebug" desc="()Z" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutputChannel" desc="()Ljava/lang/Appendable;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getErrorChannel" desc="()Ljava/lang/Appendable;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/CompilerSpecBuilder" sourcefilename="CompilerSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJvmTarget" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setJvmTarget" desc="(Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLanguageVersion" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLanguageVersion" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getApiVersion" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setApiVersion" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClasspath" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClasspath" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getJdkHome" desc="()Ljava/nio/file/Path;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setJdkHome" desc="(Ljava/nio/file/Path;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFreeCompilerArgs" desc="()Ljava/util/List;" line="14"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFreeCompilerArgs" desc="(Ljava/util/List;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/CompilerSpec;" line="17"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/dsl/ProjectSpecBuilder" sourcefilename="ProjectSpecBuilder.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBasePath" desc="(Ljava/nio/file/Path;)V" line="14"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputPaths" desc="()Ljava/util/Collection;" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInputPaths" desc="(Ljava/util/Collection;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnalysisMode" desc="()Lio/github/detekt/tooling/api/AnalysisMode;" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAnalysisMode" desc="(Lio/github/detekt/tooling/api/AnalysisMode;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lio/github/detekt/tooling/api/spec/ProjectSpec;" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="62"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConfigSpecBuilder.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="3" ci="4" mb="0" cb="0"/><line nr="12" mi="3" ci="4" mb="0" cb="0"/><line nr="13" mi="3" ci="8" mb="0" cb="0"/><line nr="14" mi="3" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="79"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="CompilerSpecBuilder.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="3" ci="7" mb="0" cb="0"/><line nr="10" mi="3" ci="4" mb="0" cb="0"/><line nr="11" mi="3" ci="4" mb="0" cb="0"/><line nr="12" mi="3" ci="4" mb="0" cb="0"/><line nr="13" mi="3" ci="4" mb="0" cb="0"/><line nr="14" mi="3" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="17" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="101"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ReportsSpecBuilder.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="7" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="15" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="76"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectSpecBuilder.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="16" mb="0" cb="0"/><line nr="14" mi="8" ci="4" mb="1" cb="1"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="3" ci="8" mb="0" cb="0"/><line nr="18" mi="3" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="92"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ExecutionSpecBuilder.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="3" ci="4" mb="0" cb="0"/><line nr="10" mi="3" ci="4" mb="0" cb="0"/><line nr="11" mi="3" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="3" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="44"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LoggingSpecBuilder.kt"><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="3" ci="4" mb="0" cb="0"/><line nr="8" mi="3" ci="11" mb="0" cb="0"/><line nr="9" mi="3" ci="11" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="73"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Builder.kt"/><sourcefile name="ProcessingSpecBuilder.kt"><line nr="15" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="259"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="22"/><counter type="METHOD" missed="0" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ExtensionsSpecBuilder.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="7" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="15" mb="0" cb="4"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="15" mb="0" cb="4"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="103"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BaselineSpecBuilder.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="3" ci="4" mb="0" cb="0"/><line nr="10" mi="3" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RulesSpecBuilder.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="3" ci="4" mb="0" cb="0"/><line nr="10" mi="3" ci="11" mb="0" cb="0"/><line nr="11" mi="3" ci="4" mb="0" cb="0"/><line nr="12" mi="3" ci="4" mb="0" cb="0"/><line nr="13" mi="3" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="3" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="91"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="6" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ProcessingModelDsl.kt"/><counter type="INSTRUCTION" missed="106" covered="953"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="153"/><counter type="COMPLEXITY" missed="32" covered="115"/><counter type="METHOD" missed="31" covered="111"/><counter type="CLASS" missed="0" covered="22"/></package><package name="io/gitlab/arturbosch/detekt/rules/coroutines"><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunWithCoroutineScopeReceiver$isCoroutineScope$1" sourcefilename="SuspendFunWithCoroutineScopeReceiver.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SleepInsteadOfDelay$Companion" sourcefilename="SleepInsteadOfDelay.kt"/><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation" sourcefilename="SuspendFunSwallowedCancellation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="98"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldTraverseInside" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="114"><counter type="INSTRUCTION" missed="6" covered="76"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuspendCalls" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="137"><counter type="INSTRUCTION" missed="9" covered="140"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="168"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$shouldTraverseInside" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lio/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="108"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="179"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="333"/><counter type="BRANCH" missed="15" covered="51"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="15" covered="26"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/RedundantSuspendModifier$visitNamedFunction$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunWithCoroutineScopeReceiver" sourcefilename="SuspendFunWithCoroutineScopeReceiver.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkReceiver" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoroutineScope" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoroutineScope$lambda$0" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="98"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/RedundantSuspendModifier" sourcefilename="RedundantSuspendModifier.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="63"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidCandidateExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="76"><counter type="INSTRUCTION" missed="10" covered="32"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuspendCalls" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="89"><counter type="INSTRUCTION" missed="46" covered="190"/><counter type="BRANCH" missed="20" covered="32"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/coroutines/RedundantSuspendModifier;Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="58" covered="308"/><counter type="BRANCH" missed="27" covered="57"/><counter type="LINE" missed="2" covered="40"/><counter type="COMPLEXITY" missed="23" covered="24"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper$Companion" sourcefilename="CoroutineLaunchedInTestWithoutRunTest.kt"/><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper$isFunctionLaunchingCoroutines$getChildFunctionsOf$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper$isFunctionLaunchingCoroutines$getChildFunctionsOf$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper$isFunctionLaunchingCoroutines$getChildFunctionsOf$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/GlobalCoroutineUsage" sourcefilename="GlobalCoroutineUsage.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDotQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)V" line="45"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper" sourcefilename="CoroutineLaunchedInTestWithoutRunTest.kt"><method name="&lt;init&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExploredFunctionsCache" desc="()Ljava/util/Map;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunctionLaunchingCoroutines" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLaunchingCoroutine" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="134"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunctionLaunchingCoroutines$checkFunctionAndSaveToCache" desc="(Lio/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/util/List;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunctionLaunchingCoroutines$checkFunctionAndSaveToCache$default" desc="(Lio/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/util/List;ILjava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunctionLaunchingCoroutines$getChildFunctionsOf" desc="(Ljava/util/Set;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper;Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/util/List;)Ljava/util/Set;" line="107"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFunctionLaunchingCoroutines$getChildFunctionsOf$default" desc="(Ljava/util/Set;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper;Lorg/jetbrains/kotlin/psi/KtNamedFunction;Ljava/util/List;ILjava/lang/Object;)Ljava/util/Set;" line="103"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLaunchingCoroutine$lambda$5" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtDotQualifiedExpression;)Z" line="135"><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="223"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="2" covered="35"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunWithFlowReturnType$isCoroutinesFlow$1" sourcefilename="SuspendFunWithFlowReturnType.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunWithFlowReturnType" sourcefilename="SuspendFunWithFlowReturnType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoroutinesFlow" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoroutinesFlow$lambda$2" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="99"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SleepInsteadOfDelay" sourcefilename="SleepInsteadOfDelay.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallableReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAndReport" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThreadSleepFunction" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNearestParentForSuspension" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="100"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuspendAllowed" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="127"><counter type="INSTRUCTION" missed="1" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuspendAllowed" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Z" line="146"><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuspendAllowed" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="154"><counter type="INSTRUCTION" missed="8" covered="33"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSuspendAllowed" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="161"><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldReport" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="166"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThreadSleepFunction$isSleepCallableRef" desc="(Lorg/jetbrains/kotlin/psi/KtCallableReferenceExpression;Lio/gitlab/arturbosch/detekt/rules/coroutines/SleepInsteadOfDelay;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNearestParentForSuspension$isNearestParentForSuspension" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;Lio/gitlab/arturbosch/detekt/rules/coroutines/SleepInsteadOfDelay;)Z" line="90"><counter type="INSTRUCTION" missed="11" covered="68"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNearestParentForSuspension$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/coroutines/SleepInsteadOfDelay;Ljava/lang/Object;)Z" line="106"><counter type="INSTRUCTION" missed="1" covered="46"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="369"/><counter type="BRANCH" missed="19" covered="47"/><counter type="LINE" missed="4" covered="63"/><counter type="COMPLEXITY" missed="19" covered="28"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/InjectDispatcher$Companion" sourcefilename="InjectDispatcher.kt"/><class name="io/gitlab/arturbosch/detekt/rules/coroutines/GlobalCoroutineUsage$Companion" sourcefilename="GlobalCoroutineUsage.kt"/><class name="io/gitlab/arturbosch/detekt/rules/coroutines/CoroutineLaunchedInTestWithoutRunTest" sourcefilename="CoroutineLaunchedInTestWithoutRunTest.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="57"><counter type="INSTRUCTION" missed="1" covered="49"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runsInRunTestBlock" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="95"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/CoroutineLaunchedInTestWithoutRunTest$Companion" sourcefilename="CoroutineLaunchedInTestWithoutRunTest.kt"/><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation$visitCallExpression$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;Lorg/jetbrains/kotlin/psi/KtCallExpression;Lio/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/InjectDispatcher" sourcefilename="InjectDispatcher.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDispatcherNames" desc="()Ljava/util/Set;" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSimpleNameExpression" desc="(Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)V" line="51"><counter type="INSTRUCTION" missed="3" covered="88"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dispatcherNames_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/Set;" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="161"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/FunCoroutineLaunchesTraverseHelper$isLaunchingCoroutine$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/CoroutinesProvider" sourcefilename="CoroutinesProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="15"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/coroutines/SuspendFunSwallowedCancellation$Companion" sourcefilename="SuspendFunSwallowedCancellation.kt"/><sourcefile name="GlobalCoroutineUsage.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="2"/><line nr="46" mi="2" ci="23" mb="2" cb="2"/><line nr="48" mi="0" ci="18" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InjectDispatcher.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="51" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="2" ci="8" mb="1" cb="1"/><line nr="54" mi="0" ci="6" mb="0" cb="2"/><line nr="55" mi="1" ci="13" mb="1" cb="1"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="1" cb="3"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="161"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SleepInsteadOfDelay.kt"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="4"/><line nr="65" mi="0" ci="17" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="11" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="1" cb="1"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="3" ci="16" mb="1" cb="1"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="1" cb="1"/><line nr="94" mi="0" ci="5" mb="1" cb="1"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="15" mb="3" cb="3"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="9" mb="0" cb="4"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="21" mb="0" cb="2"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="3" ci="16" mb="1" cb="1"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="1" ci="6" mb="1" cb="1"/><line nr="150" mi="2" ci="14" mb="2" cb="4"/><line nr="154" mi="1" ci="16" mb="1" cb="1"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="10" mb="1" cb="1"/><line nr="157" mi="2" ci="7" mb="1" cb="1"/><line nr="161" mi="3" ci="10" mb="1" cb="1"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="3" ci="7" mb="1" cb="1"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="369"/><counter type="BRANCH" missed="19" covered="47"/><counter type="LINE" missed="4" covered="63"/><counter type="COMPLEXITY" missed="19" covered="28"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RedundantSuspendModifier.kt"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="1" cb="3"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="9" mb="0" cb="4"/><line nr="67" mi="2" ci="10" mb="1" cb="1"/><line nr="68" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="13" mb="0" cb="2"/><line nr="71" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="14" mb="1" cb="7"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="6" ci="3" mb="3" cb="1"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="9" mb="1" cb="3"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="21" mb="0" cb="0"/><line nr="97" mi="4" ci="12" mb="3" cb="3"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="1" cb="1"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="1" ci="12" mb="1" cb="1"/><line nr="104" mi="4" ci="8" mb="2" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="2" ci="12" mb="1" cb="1"/><line nr="108" mi="4" ci="8" mb="2" cb="2"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="27" mb="0" cb="10"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="3" ci="13" mb="1" cb="3"/><line nr="120" mi="6" ci="6" mb="3" cb="1"/><line nr="121" mi="20" ci="7" mb="6" cb="2"/><counter type="INSTRUCTION" missed="58" covered="308"/><counter type="BRANCH" missed="27" covered="57"/><counter type="LINE" missed="2" covered="40"/><counter type="COMPLEXITY" missed="23" covered="24"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoroutineLaunchedInTestWithoutRunTest.kt"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="1" ci="3" mb="1" cb="1"/><line nr="58" mi="0" ci="13" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="0" ci="17" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="1" cb="1"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="2"/><line nr="99" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="1" cb="1"/><line nr="111" mi="0" ci="5" mb="1" cb="1"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="13" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="1" ci="5" mb="1" cb="1"/><line nr="138" mi="2" ci="14" mb="2" cb="2"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="318"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="8" covered="22"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="1" cb="1"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="CoroutinesProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="22" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuspendFunSwallowedCancellation.kt"><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="2" ci="11" mb="2" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="105" mi="0" ci="14" mb="0" cb="4"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="4" ci="17" mb="3" cb="3"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="13" mb="1" cb="3"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="16" mb="2" cb="4"/><line nr="128" mi="0" ci="10" mb="0" cb="4"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="14" mb="0" cb="0"/><line nr="143" mi="0" ci="21" mb="0" cb="0"/><line nr="144" mi="2" ci="14" mb="2" cb="4"/><line nr="148" mi="0" ci="6" mb="0" cb="4"/><line nr="149" mi="3" ci="8" mb="1" cb="1"/><line nr="150" mi="4" ci="18" mb="2" cb="4"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="156" mi="0" ci="11" mb="0" cb="2"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="4" ci="16" mb="2" cb="2"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="333"/><counter type="BRANCH" missed="15" covered="51"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="15" covered="26"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SuspendFunWithFlowReturnType.kt"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="1" cb="3"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="1" cb="1"/><line nr="71" mi="0" ci="12" mb="1" cb="3"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="85" mi="0" ci="15" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="2" ci="8" mb="1" cb="1"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="133"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SuspendFunWithCoroutineScopeReceiver.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="1" cb="3"/><line nr="61" mi="0" ci="17" mb="1" cb="1"/><line nr="62" mi="0" ci="4" mb="1" cb="1"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="15" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="2" ci="8" mb="1" cb="1"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="132"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="137" covered="1930"/><counter type="BRANCH" missed="83" covered="219"/><counter type="LINE" missed="9" covered="285"/><counter type="COMPLEXITY" missed="80" covered="143"/><counter type="METHOD" missed="1" covered="71"/><counter type="CLASS" missed="0" covered="18"/></package><package name="io/github/detekt/metrics"><class name="io/github/detekt/metrics/ComplexityMetric" sourcefilename="ComplexityMetric.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMcc" desc="()Ljava/lang/Integer;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCognitiveComplexity" desc="()Ljava/lang/Integer;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoc" desc="()Ljava/lang/Integer;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSloc" desc="()Ljava/lang/Integer;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLloc" desc="()Ljava/lang/Integer;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCloc" desc="()Ljava/lang/Integer;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssuesCount" desc="()I" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/ComplexityReportGenerator" sourcefilename="ComplexityReportGenerator.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/metrics/ComplexityMetric;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="()Ljava/util/List;" line="14"><counter type="INSTRUCTION" missed="0" covered="291"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cannotGenerate" desc="()Z" line="30"><counter type="INSTRUCTION" missed="22" covered="105"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="405"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$FunctionComplexity" sourcefilename="CognitiveComplexity.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexity$detekt_metrics" desc="()I" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setComplexity$detekt_metrics" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addComplexity" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestAround" desc="(Lkotlin/jvm/functions/Function0;)V" line="63"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testJumpWithLabel" desc="(Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRecursion" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="75"><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitForExpression" desc="(Lorg/jetbrains/kotlin/psi/KtForExpression;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)V" line="94"><counter type="INSTRUCTION" missed="3" covered="79"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBreakExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBreakExpression;)V" line="124"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitContinueExpression" desc="(Lorg/jetbrains/kotlin/psi/KtContinueExpression;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReturnExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDoWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateBinaryExprComplexity" desc="(Ljava/util/List;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression$lambda$9" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Lio/github/detekt/metrics/CognitiveComplexity$BinExprHolder;" line="180"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression$lambda$10" desc="(Lio/github/detekt/metrics/CognitiveComplexity$BinExprHolder;)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="403"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="7" covered="81"/><counter type="COMPLEXITY" missed="8" covered="38"/><counter type="METHOD" missed="3" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$FunctionComplexity$visitBinaryExpression$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$FunctionComplexity$visitBinaryExpression$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$FunctionComplexity$visitBinaryExpression$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CyclomaticComplexity$Config" sourcefilename="CyclomaticComplexity.kt"><method name="&lt;init&gt;" desc="(ZZZLjava/util/Set;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZZZLjava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreSimpleWhenEntries" desc="()Z" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreSimpleWhenEntries" desc="(Z)V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreNestingFunctions" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreNestingFunctions" desc="(Z)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreLocalFunctions" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIgnoreLocalFunctions" desc="(Z)V" line="30"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNestingFunctions" desc="()Ljava/util/Set;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNestingFunctions" desc="(Ljava/util/Set;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$FunctionComplexity$visitBinaryExpression$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/github/detekt/metrics/CognitiveComplexity" sourcefilename="CognitiveComplexity.kt"><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/ComplexityReportGenerator$Factory" sourcefilename="ComplexityReportGenerator.kt"><method name="create" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Lio/github/detekt/metrics/ComplexityReportGenerator;" line="49"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CyclomaticComplexity$Companion" sourcefilename="CyclomaticComplexity.kt"><method name="getCONDITIONALS" desc="()Ljava/util/Set;" line="112"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDEFAULT_NESTING_FUNCTIONS" desc="()Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lkotlin/jvm/functions/Function1;)I" line="126"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate$default" desc="(Lio/github/detekt/metrics/CyclomaticComplexity$Companion;Lorg/jetbrains/kotlin/psi/KtElement;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)I" line="125"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CyclomaticComplexity" sourcefilename="CyclomaticComplexity.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/metrics/CyclomaticComplexity$Config;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexity" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInsideObjectLiteral" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInsideNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitContinueExpression" desc="(Lorg/jetbrains/kotlin/psi/KtContinueExpression;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBreakExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBreakExpression;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLoopExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractEntries" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)Lkotlin/sequences/Sequence;" line="86"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsedForNesting" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="95"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="101"><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractEntries$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtWhenEntry;)Z" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="112"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="330"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="4" covered="29"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$BinExprHolder" sourcefilename="CognitiveComplexity.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;Z)V" line="48"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpr" desc="()Lorg/jetbrains/kotlin/psi/KtBinaryExpression;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOp" desc="()Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnclosed" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/CognitiveComplexity$Companion" sourcefilename="CognitiveComplexity.kt"><method name="getKEY" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="204"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)I" line="209"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/LinesOfCodeKt$tokenSequence$1" sourcefilename="LinesOfCode.kt"><method name="invokeSuspend" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/LinesOfCodeKt" sourcefilename="LinesOfCode.kt"><method name="tokenSequence" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;Ljava/util/Set;)Lkotlin/sequences/Sequence;" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linesOfCode" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtFile;)I" line="39"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linesOfCode$default" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lorg/jetbrains/kotlin/psi/KtFile;ILjava/lang/Object;)I" line="38"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="line" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;Lorg/jetbrains/kotlin/psi/KtFile;)I" line="44"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linesOfCode$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)I" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CyclomaticComplexity.kt"><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="21" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><line nr="29" mi="0" ci="12" mb="0" cb="0"/><line nr="30" mi="0" ci="12" mb="0" cb="0"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="4"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="6" mb="0" cb="2"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="17" mb="0" cb="4"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="14" mb="0" cb="2"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="2" ci="8" mb="1" cb="1"/><line nr="96" mi="0" ci="9" mb="0" cb="2"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="4"/><line nr="102" mi="2" ci="12" mb="1" cb="1"/><line nr="103" mi="2" ci="6" mb="2" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="2" ci="18" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="24" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="452"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="5" covered="43"/><counter type="METHOD" missed="1" covered="30"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="LinesOfCode.kt"><line nr="22" mi="0" ci="12" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="17" mb="0" cb="0"/><line nr="33" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="4"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="30" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ComplexityReportGenerator.kt"><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="2"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="50" mb="0" cb="0"/><line nr="17" mi="0" ci="26" mb="0" cb="0"/><line nr="18" mi="0" ci="26" mb="0" cb="0"/><line nr="19" mi="0" ci="26" mb="0" cb="0"/><line nr="20" mi="0" ci="26" mb="0" cb="0"/><line nr="21" mi="0" ci="26" mb="0" cb="0"/><line nr="22" mi="0" ci="26" mb="0" cb="0"/><line nr="23" mi="0" ci="26" mb="0" cb="0"/><line nr="24" mi="0" ci="26" mb="0" cb="0"/><line nr="25" mi="0" ci="26" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="14" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="2" ci="13" mb="1" cb="5"/><line nr="37" mi="2" ci="13" mb="1" cb="5"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="9" ci="16" mb="1" cb="1"/><line nr="42" mi="9" ci="16" mb="1" cb="1"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="416"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="1" cb="1"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CognitiveComplexity.kt"><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="21" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="4" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="3" ci="18" mb="2" cb="4"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="2" ci="12" mb="1" cb="3"/><line nr="80" mi="0" ci="9" mb="1" cb="1"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="4"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="11" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="0" ci="6" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="3" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="2"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="15" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="10" mb="0" cb="2"/><line nr="192" mi="0" ci="2" mb="0" cb="2"/><line nr="193" mi="0" ci="9" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="4"/><line nr="195" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="15" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="491"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="7" covered="91"/><counter type="COMPLEXITY" missed="8" covered="46"/><counter type="METHOD" missed="3" covered="28"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ComplexityMetric.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="13" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Comparisons.kt"/><counter type="INSTRUCTION" missed="75" covered="1646"/><counter type="BRANCH" missed="14" covered="96"/><counter type="LINE" missed="7" covered="227"/><counter type="COMPLEXITY" missed="18" covered="122"/><counter type="METHOD" missed="4" covered="81"/><counter type="CLASS" missed="0" covered="15"/></package><package name="io/gitlab/arturbosch/detekt/rules/documentation"><class name="io/gitlab/arturbosch/detekt/rules/documentation/EndOfSentenceFormat" sourcefilename="EndOfSentenceFormat.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndOfSentenceFormat" desc="()Lkotlin/text/Regex;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startsWithHtmlTag" desc="(Ljava/lang/String;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endOfSentenceFormat_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/CommentOverPrivateProperty" sourcefilename="CommentOverPrivateProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/CommentOverPrivateFunction" sourcefilename="CommentOverPrivateFunction.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/UndocumentedPublicFunction$shouldBeDocumented$$inlined$filterIsInstance$2" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/UndocumentedPublicFunction$shouldBeDocumented$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/CommentUtilKt" sourcefilename="CommentUtil.kt"><method name="hasCommentInPrivateMember" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z" line="6"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/KDocReferencesNonPublicProperty" sourcefilename="KDocReferencesNonPublicProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="56"><counter type="INSTRUCTION" missed="3" covered="110"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="registerProperty" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonPublicInherited" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)Z" line="101"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="qualifiedName" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Ljava/lang/String;" line="115"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="275"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation" sourcefilename="OutdatedDocumentation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchTypeParameters" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchDeclarationsOrder" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowParamOnConstructorProperties" desc="()Z" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSecondaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Ljava/util/List;" line="112"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/util/List;" line="123"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrimaryConstructorDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Ljava/util/List;" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecondaryConstructorDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)Ljava/util/List;" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeclarationsForValueParameters" desc="(Ljava/util/List;)Ljava/util/List;" line="139"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDocDeclarations" desc="(Lorg/jetbrains/kotlin/kdoc/psi/api/KDoc;)Ljava/util/List;" line="154"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processDocChildren" desc="(Lorg/jetbrains/kotlin/psi/psiUtil/PsiChildRange;)Ljava/util/List;" line="157"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processDocTag" desc="(Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocTag;)Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDocumentationOutdated" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Lkotlin/jvm/functions/Function0;)Z" line="182"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInternalOrPrivate" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="193"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="declarationsMatch" desc="(Ljava/util/List;Ljava/util/List;)Z" line="201"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="declarationMatches" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$Declaration;Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$Declaration;)Z" line="215"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportCodeSmell" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toParamOrNull" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$Declaration;" line="226"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass$lambda$2" desc="(Ljava/util/List;)Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSecondaryConstructor$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation;Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation;Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processDocChildren$lambda$13" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/util/List;" line="159"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="573"/><counter type="BRANCH" missed="8" covered="51"/><counter type="LINE" missed="1" covered="84"/><counter type="COMPLEXITY" missed="8" covered="49"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/AbsentOrWrongFileLicense" sourcefilename="AbsentOrWrongFileLicense.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLicenseTemplateFile" desc="()Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLicenseTemplateIsRegex" desc="()Z" line="30"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasValidLicense" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Z" line="44"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="137"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/DeprecatedBlockTag" sourcefilename="DeprecatedBlockTag.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/CommentSmellProvider" sourcefilename="CommentSmellProvider.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="16"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$declarationsMatch$$inlined$sortedBy$2" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$declarationsMatch$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension" sourcefilename="LicenceHeaderLoaderExtension.kt"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Ljava/util/List;)V" line="76"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$isActive" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Z" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$shouldRuleRun" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$getPathToTemplate" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$isRegexTemplate" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$loadLicence" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension;Ljava/nio/file/Path;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="29" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart$cacheLicence" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtension;Ljava/nio/file/Path;Z)V" line="63"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="195"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/UndocumentedPublicClass" sourcefilename="UndocumentedPublicClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchInNestedClass" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchInInnerClass" desc="()Z" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchInInnerObject" desc="()Z" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchInInnerInterface" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchInProtectedClass" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requiresDocumentation" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportIfUndocumented" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublicAndPublicInherited" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCompanionWithoutName" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNestedClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="95"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInnerClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="97"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInnerInterface" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEnumEntry" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="321"/><counter type="BRANCH" missed="3" covered="51"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="3" covered="41"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$DeclarationType" sourcefilename="OutdatedDocumentation.kt"><method name="&lt;clinit&gt;" desc="()V" line="234"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/UndocumentedPublicProperty" sourcefilename="UndocumentedPublicProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchProtectedProperty" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnumEntry" desc="(Lorg/jetbrains/kotlin/psi/KtEnumEntry;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUndocumented" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)Z" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotReferenced" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Ljava/lang/String;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeDocumented" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTopLevelOrInPublicClass" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="71"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="300"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="5" covered="33"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$Declaration" sourcefilename="OutdatedDocumentation.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$DeclarationType;)V" line="228"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="229"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lio/gitlab/arturbosch/detekt/rules/documentation/OutdatedDocumentation$DeclarationType;" line="230"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/KDocReferencesNonPublicProperty$visitClass$1" sourcefilename="KDocReferencesNonPublicProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/documentation/KDocReferencesNonPublicProperty;Lorg/jetbrains/kotlin/psi/KtClass;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/UndocumentedPublicFunction" sourcefilename="UndocumentedPublicFunction.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSearchProtectedFunction" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="30"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeDocumented" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="43"><counter type="INSTRUCTION" missed="5" covered="41"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="120"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/AbsentOrWrongFileLicense$Companion" sourcefilename="AbsentOrWrongFileLicense.kt"><method name="getRULE_NAME" desc="()Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/documentation/LicenceHeaderLoaderExtensionKt" sourcefilename="LicenceHeaderLoaderExtension.kt"><method name="convertLineSeparators" desc="(Ljava/lang/String;)Ljava/lang/String;" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLICENCE_KEY" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="85"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLICENCE_REGEX_KEY" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="86"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLicenseHeader" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLicenseHeader" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLicenseHeaderRegex" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLicenseHeaderRegex" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Lkotlin/text/Regex;" line="95"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="65"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EndOfSentenceFormat.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="30" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="2"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="12" mb="0" cb="6"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="4"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="19" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbsentOrWrongFileLicense.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="9" ci="16" mb="0" cb="0"/><line nr="30" mi="10" ci="22" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="1" cb="5"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="27" mb="1" cb="5"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="139"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LicenceHeaderLoaderExtension.kt"><line nr="20" mi="0" ci="17" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="16" mb="0" cb="2"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="1" cb="3"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="9" ci="11" mb="1" cb="1"/><line nr="53" mi="10" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="2"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="4"/><line nr="77" mi="2" ci="8" mb="2" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="7" ci="10" mb="1" cb="1"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="7" ci="10" mb="1" cb="1"/><counter type="INSTRUCTION" missed="45" covered="260"/><counter type="BRANCH" missed="6" covered="24"/><counter type="LINE" missed="3" covered="38"/><counter type="COMPLEXITY" missed="6" covered="30"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UndocumentedPublicProperty.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="13" mb="1" cb="3"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="15" mb="0" cb="4"/><line nr="37" mi="0" ci="17" mb="0" cb="4"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="13" mb="0" cb="6"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="4"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="4"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="54" mb="0" cb="6"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="1" cb="1"/><line nr="68" mi="0" ci="6" mb="0" cb="2"/><line nr="69" mi="0" ci="21" mb="0" cb="6"/><line nr="71" mi="5" ci="18" mb="3" cb="5"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="300"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="5" covered="33"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UndocumentedPublicFunction.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="4" ci="3" mb="3" cb="1"/><line nr="32" mi="0" ci="7" mb="0" cb="4"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="4"/><line nr="44" mi="5" ci="15" mb="3" cb="1"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="9" covered="120"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentOverPrivateProperty.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OutdatedDocumentation.kt"><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="27" mb="0" cb="0"/><line nr="73" mi="0" ci="27" mb="0" cb="0"/><line nr="76" mi="0" ci="28" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="9" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="2"/><line nr="86" mi="0" ci="11" mb="1" cb="1"/><line nr="88" mi="0" ci="13" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="13" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="14" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="2" ci="8" mb="1" cb="1"/><line nr="141" mi="0" ci="8" mb="0" cb="4"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="3" ci="5" mb="1" cb="1"/><line nr="171" mi="3" ci="9" mb="2" cb="3"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="4"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="9" mb="0" cb="2"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="3" ci="4" mb="1" cb="1"/><line nr="194" mi="0" ci="12" mb="1" cb="3"/><line nr="201" mi="0" ci="5" mb="0" cb="2"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="0" ci="18" mb="0" cb="0"/><line nr="215" mi="0" ci="19" mb="0" cb="6"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="2" ci="11" mb="1" cb="1"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="619"/><counter type="BRANCH" missed="8" covered="51"/><counter type="LINE" missed="1" covered="90"/><counter type="COMPLEXITY" missed="8" covered="53"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="DeprecatedBlockTag.kt"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="1" cb="3"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="_Sequences.kt"><line nr="477" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="KDocReferencesNonPublicProperty.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="1" cb="3"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="1" ci="16" mb="1" cb="1"/><line nr="72" mi="2" ci="2" mb="1" cb="1"/><line nr="74" mi="0" ci="14" mb="0" cb="4"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="20" mb="0" cb="4"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="14" mb="0" cb="2"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="4"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="14" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="298"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="0" covered="49"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Comparisons.kt"/><sourcefile name="UndocumentedPublicClass.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="27" mb="0" cb="0"/><line nr="33" mi="0" ci="27" mb="0" cb="0"/><line nr="36" mi="0" ci="27" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="42" mi="0" ci="28" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="19" mb="0" cb="8"/><line nr="60" mi="0" ci="8" mb="0" cb="4"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="2"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="13" mb="1" cb="3"/><line nr="95" mi="0" ci="16" mb="1" cb="7"/><line nr="97" mi="0" ci="13" mb="0" cb="6"/><line nr="100" mi="0" ci="13" mb="1" cb="5"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="321"/><counter type="BRANCH" missed="3" covered="51"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="3" covered="41"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentOverPrivateFunction.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="2"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentUtil.kt"><line nr="6" mi="0" ci="11" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentSmellProvider.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="26" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="95" covered="2406"/><counter type="BRANCH" missed="35" covered="256"/><counter type="LINE" missed="4" covered="343"/><counter type="COMPLEXITY" missed="35" covered="230"/><counter type="METHOD" missed="2" covered="117"/><counter type="CLASS" missed="0" covered="20"/></package><package name="io/gitlab/arturbosch/detekt/generator/out"><class name="io/gitlab/arturbosch/detekt/generator/out/MarkdownWriter" sourcefilename="AbstractWriter.kt"><method name="&lt;init&gt;" desc="(Ljava/io/PrintStream;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/out/YamlWriter" sourcefilename="AbstractWriter.kt"><method name="&lt;init&gt;" desc="(Ljava/io/PrintStream;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/out/AbstractWriter" sourcefilename="AbstractWriter.kt"><method name="&lt;init&gt;" desc="(Ljava/io/PrintStream;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/file/Path;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/out/PropertiesWriter" sourcefilename="AbstractWriter.kt"><method name="&lt;init&gt;" desc="(Ljava/io/PrintStream;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractWriter.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="14" mb="0" cb="0"/><line nr="16" mi="0" ci="15" mb="0" cb="0"/><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="3" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="3" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="92"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="6" covered="92"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="4"/></package><package name="io/gitlab/arturbosch/detekt/formatting/wrappers"><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/UnnecessaryParenthesesBeforeTrailingLambda" sourcefilename="UnnecessaryParenthesesBeforeTrailingLambda.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/UnnecessaryParenthesesBeforeTrailingLambdaRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoSingleLineBlockComment" sourcefilename="NoSingleLineBlockComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoSingleLineBlockCommentRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundKeyword" sourcefilename="SpacingAroundKeyword.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundKeywordRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionStartOfBodySpacing" sourcefilename="FunctionStartOfBodySpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionStartOfBodySpacingRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoUnusedImports" sourcefilename="NoUnusedImports.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoUnusedImportsRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/MultilineExpressionWrapping" sourcefilename="MultilineExpressionWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/MultilineExpressionWrappingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TypeArgumentComment" sourcefilename="TypeArgumentComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TypeArgumentCommentRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoTrailingSpaces" sourcefilename="NoTrailingSpaces.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoTrailingSpacesRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/Filename" sourcefilename="Filename.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FilenameRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/StatementWrapping" sourcefilename="StatementWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/StatementWrappingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoConsecutiveComments" sourcefilename="NoConsecutiveComments.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoConsecutiveCommentsRule;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoUnitReturn" sourcefilename="NoUnitReturn.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoUnitReturnRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundUnaryOperator" sourcefilename="SpacingAroundUnaryOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundUnaryOperatorRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/AnnotationOnSeparateLine" sourcefilename="AnnotationOnSeparateLine.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/AnnotationRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TryCatchFinallySpacing" sourcefilename="TryCatchFinallySpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TryCatchFinallySpacingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/BinaryExpressionWrapping" sourcefilename="BinaryExpressionWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/BinaryExpressionWrappingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/BlankLineBetweenWhenConditions" sourcefilename="BlankLineBetweenWhenConditions.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/BlankLineBetweenWhenConditions;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLineBreakAfterWhenEntries" desc="()Z" line="25"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/StringTemplateIndent" sourcefilename="StringTemplateIndent.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/StringTemplateIndentRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundDoubleColon" sourcefilename="SpacingAroundDoubleColon.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundDoubleColonRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/Indentation" sourcefilename="Indentation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/IndentationRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContinuationIndentSize" desc="()I" line="31"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="73"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/MaximumLineLength" sourcefilename="MaximumLineLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/MaxLineLengthRule;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreBackTickedIdentifier" desc="()Z" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="36"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ConditionWrapping" sourcefilename="ConditionWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ConditionWrappingRule;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TrailingCommaOnDeclarationSite" sourcefilename="TrailingCommaOnDeclarationSite.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TrailingCommaOnDeclarationSiteRule;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseTrailingCommaOnDeclarationSite" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ParameterListSpacing" sourcefilename="ParameterListSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ParameterListSpacingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ParameterListWrapping" sourcefilename="ParameterListWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ParameterListWrappingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundOperators" sourcefilename="SpacingAroundOperators.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundOperatorsRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoWildcardImports" sourcefilename="NoWildcardImports.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoWildcardImportsRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackagesToUseImportOnDemandProperty" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NullableTypeSpacing" sourcefilename="NullableTypeSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NullableTypeSpacingRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoBlankLineInList" sourcefilename="NoBlankLineInList.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoBlankLineInListRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoEmptyFile" sourcefilename="NoEmptyFile.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoEmptyFileRule;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ValueParameterComment" sourcefilename="ValueParameterComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ValueParameterCommentRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoLineBreakAfterElse" sourcefilename="NoLineBreakAfterElse.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoLineBreakAfterElseRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundRangeOperator" sourcefilename="SpacingAroundRangeOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundRangeOperatorRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ArgumentListWrapping" sourcefilename="ArgumentListWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ArgumentListWrappingRule;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreRuleParameterThreshold" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="38"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/EnumEntryNameCase" sourcefilename="EnumEntryNameCase.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/EnumEntryNameCaseRule;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundDot" sourcefilename="SpacingAroundDot.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundDotRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TypeParameterListSpacing" sourcefilename="TypeParameterListSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TypeParameterListSpacingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/AnnotationSpacing" sourcefilename="AnnotationSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/AnnotationSpacingRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/MixedConditionOperators" sourcefilename="MixedConditionOperators.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/MixedConditionOperatorsRule;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunKeywordSpacing" sourcefilename="FunKeywordSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunKeywordSpacingRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoSemicolons" sourcefilename="NoSemicolons.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoSemicolonsRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/PackageName" sourcefilename="PackageName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/PackageNameRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundColon" sourcefilename="SpacingAroundColon.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundColonRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingBetweenDeclarationsWithAnnotations" sourcefilename="SpacingBetweenDeclarationsWithAnnotations.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingBetweenDeclarationsWithAnnotationsRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ValueArgumentComment" sourcefilename="ValueArgumentComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ValueArgumentCommentRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/CommentSpacing" sourcefilename="CommentSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/CommentSpacingRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionTypeReferenceSpacing" sourcefilename="FunctionTypeReferenceSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionTypeReferenceSpacingRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundCurly" sourcefilename="SpacingAroundCurly.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundCurlyRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ContextReceiverMapping" sourcefilename="ContextReceiverMapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ContextReceiverWrappingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoConsecutiveBlankLines" sourcefilename="NoConsecutiveBlankLines.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoConsecutiveBlankLinesRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoLineBreakBeforeAssignment" sourcefilename="NoLineBreakBeforeAssignment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoLineBreakBeforeAssignmentRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/BlockCommentInitialStarAlignment" sourcefilename="BlockCommentInitialStarAlignment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/BlockCommentInitialStarAlignmentRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ModifierOrdering" sourcefilename="ModifierOrdering.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ModifierOrderRule;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionName" sourcefilename="FunctionName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionNamingRule;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="20"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TrailingCommaOnCallSite" sourcefilename="TrailingCommaOnCallSite.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TrailingCommaOnCallSiteRule;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUseTrailingCommaOnCallSite" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ImportOrdering" sourcefilename="ImportOrdering.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ImportOrderingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLayout" desc="()Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundComma" sourcefilename="SpacingAroundComma.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundCommaRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FinalNewline" sourcefilename="FinalNewline.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FinalNewlineRule;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInsertFinalNewLine" desc="()Z" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoBlankLinesInChainedMethodCalls" sourcefilename="NoBlankLinesInChainedMethodCalls.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoBlankLinesInChainedMethodCallsRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ChainWrapping" sourcefilename="ChainWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ChainWrappingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/CommentWrapping" sourcefilename="CommentWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/CommentWrappingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionExpressionBody" sourcefilename="FunctionExpressionBody.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionExpressionBodyRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="33"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ClassSignature" sourcefilename="ClassSignature.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ClassSignatureRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoWildcardImports$Companion" sourcefilename="NoWildcardImports.kt"/><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundSquareBrackets" sourcefilename="SpacingAroundSquareBrackets.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundSquareBracketsRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionLiteral" sourcefilename="FunctionLiteral.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionLiteralRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="32"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ParameterWrapping" sourcefilename="ParameterWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ParameterWrappingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/MultiLineIfElse" sourcefilename="MultiLineIfElse.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/MultiLineIfElseRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ChainMethodContinuation" sourcefilename="ChainMethodContinuation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ChainMethodContinuationRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForceMultilineWhenChainOperatorCountGreaterOrEqualThan" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="37"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/IfElseBracing" sourcefilename="IfElseBracing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/IfElseBracingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundParens" sourcefilename="SpacingAroundParens.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundParensRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ClassName" sourcefilename="ClassName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ClassNamingRule;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/BackingPropertyNaming" sourcefilename="BackingPropertyNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/BackingPropertyNamingRule;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TypeArgumentListSpacing" sourcefilename="TypeArgumentListSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TypeArgumentListSpacingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/BlankLineBeforeDeclaration" sourcefilename="BlankLineBeforeDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/BlankLineBeforeDeclarationRule;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoEmptyClassBody" sourcefilename="NoEmptyClassBody.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoEmptyClassBodyRule;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoBlankLineBeforeRbrace" sourcefilename="NoBlankLineBeforeRbrace.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoBlankLineBeforeRbraceRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/IfElseWrapping" sourcefilename="IfElseWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/IfElseWrappingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/Wrapping" sourcefilename="Wrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/WrappingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/TypeParameterComment" sourcefilename="TypeParameterComment.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/TypeParameterCommentRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/KdocWrapping" sourcefilename="KdocWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/KdocWrappingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/MultilineLoop" sourcefilename="MultilineLoop.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/MultilineLoopRule;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionSignature" sourcefilename="FunctionSignature.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionSignatureRule;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForceMultilineWhenParameterCountGreaterOrEqualThan" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionBodyExpressionWrapping" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="41"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingBetweenDeclarationsWithComments" sourcefilename="SpacingBetweenDeclarationsWithComments.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingBetweenDeclarationsWithCommentsRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/PropertyWrapping" sourcefilename="PropertyWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/PropertyWrappingRule;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="34"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionTypeModifierSpacing" sourcefilename="FunctionTypeModifierSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionTypeModifierSpacingRule;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoMultipleSpaces" sourcefilename="NoMultipleSpaces.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoMultipleSpacesRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/Kdoc" sourcefilename="Kdoc.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/KdocRule;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoEmptyFirstLineInMethodBlock" sourcefilename="NoEmptyFirstLineInMethodBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoEmptyFirstLineInMethodBlockRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingAroundAngleBrackets" sourcefilename="SpacingAroundAngleBrackets.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingAroundAngleBracketsRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/SpacingBetweenFunctionNameAndOpeningParenthesis" sourcefilename="SpacingBetweenFunctionNameAndOpeningParenthesis.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/SpacingBetweenFunctionNameAndOpeningParenthesisRule;" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/EnumWrapping" sourcefilename="EnumWrapping.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/EnumWrappingRule;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/FunctionReturnTypeSpacing" sourcefilename="FunctionReturnTypeSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/FunctionReturnTypeSpacingRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxLineLength" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ImportOrdering$Companion" sourcefilename="ImportOrdering.kt"/><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/ModifierListSpacing" sourcefilename="ModifierListSpacing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/ModifierListSpacingRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/PropertyName" sourcefilename="PropertyName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/PropertyNamingRule;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/StringTemplate" sourcefilename="StringTemplate.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/StringTemplateRule;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/formatting/wrappers/NoEmptyFirstLineInClassBody" sourcefilename="NoEmptyFirstLineInClassBody.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapping" desc="()Lcom/pinterest/ktlint/ruleset/standard/rules/NoEmptyFirstLineInClassBodyRule;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentSize" desc="()I" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="overrideEditorConfigProperties" desc="()Ljava/util/Map;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NoLineBreakBeforeAssignment.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeParameterComment.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoLineBreakAfterElse.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParameterWrapping.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="30" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultilineLoop.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="28" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParameterListSpacing.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="30" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeArgumentListSpacing.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoWildcardImports.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="31" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoConsecutiveBlankLines.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PackageName.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoBlankLinesInChainedMethodCalls.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundCurly.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MixedConditionOperators.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundParens.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlankLineBetweenWhenConditions.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="25" mi="0" ci="28" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrailingCommaOnCallSite.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="26" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyName.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeArgumentComment.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrailingCommaOnDeclarationSite.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="26" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryExpressionWrapping.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="29" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArgumentListWrapping.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="27" mb="0" cb="0"/><line nr="32" mi="0" ci="29" mb="0" cb="0"/><line nr="35" mi="0" ci="28" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationSpacing.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumWrapping.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentSpacing.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassName.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContextReceiverMapping.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="29" mb="0" cb="0"/><line nr="31" mi="0" ci="28" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierOrdering.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionTypeModifierSpacing.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingBetweenDeclarationsWithComments.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ParameterListWrapping.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="29" mb="0" cb="0"/><line nr="31" mi="0" ci="28" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunKeywordSpacing.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundKeyword.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassSignature.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="30" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="16" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaximumLineLength.kt"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="29" mb="0" cb="0"/><line nr="33" mi="0" ci="28" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionStartOfBodySpacing.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FinalNewline.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="28" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyWrapping.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="30" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundAngleBrackets.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionReturnTypeSpacing.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="30" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Kdoc.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlockCommentInitialStarAlignment.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundDot.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoSemicolons.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundUnaryOperator.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundDoubleColon.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoMultipleSpaces.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Filename.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoEmptyFile.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingBetweenDeclarationsWithAnnotations.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionExpressionBody.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="27" mb="0" cb="0"/><line nr="30" mi="0" ci="30" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryParenthesesBeforeTrailingLambda.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringTemplateIndent.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConditionWrapping.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="28" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IfElseWrapping.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoConsecutiveComments.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KdocWrapping.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoTrailingSpaces.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModifierListSpacing.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoBlankLineBeforeRbrace.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueArgumentComment.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingBetweenFunctionNameAndOpeningParenthesis.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoUnitReturn.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundSquareBrackets.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueParameterComment.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Indentation.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="10" ci="18" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="73"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundColon.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionTypeReferenceSpacing.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiLineIfElse.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullableTypeSpacing.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImportOrdering.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="32" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoSingleLineBlockComment.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundComma.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionLiteral.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="27" mb="0" cb="0"/><line nr="29" mi="0" ci="30" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="14" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BlankLineBeforeDeclaration.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IfElseBracing.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultilineExpressionWrapping.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BackingPropertyNaming.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoEmptyFirstLineInMethodBlock.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionSignature.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="27" mb="0" cb="0"/><line nr="32" mi="0" ci="25" mb="0" cb="0"/><line nr="35" mi="0" ci="29" mb="0" cb="0"/><line nr="38" mi="0" ci="28" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="169"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoEmptyClassBody.kt"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundRangeOperator.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionName.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeParameterListSpacing.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ChainWrapping.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringTemplate.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnumEntryNameCase.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoUnusedImports.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoEmptyFirstLineInClassBody.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoBlankLineInList.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Wrapping.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="30" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TryCatchFinallySpacing.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ChainMethodContinuation.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="29" mb="0" cb="0"/><line nr="34" mi="0" ci="28" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="16" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StatementWrapping.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="28" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommentWrapping.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SpacingAroundOperators.kt"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnnotationOnSeparateLine.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="28" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="3938"/><counter type="LINE" missed="0" covered="590"/><counter type="COMPLEXITY" missed="1" covered="333"/><counter type="METHOD" missed="1" covered="333"/><counter type="CLASS" missed="0" covered="96"/></package><package name="io/gitlab/arturbosch/detekt/rules/naming"><class name="io/gitlab/arturbosch/detekt/rules/naming/ForbiddenClassName" sourcefilename="ForbiddenClassName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForbiddenName" desc="()Ljava/util/List;" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="26"><counter type="INSTRUCTION" missed="2" covered="64"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forbiddenName_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="22"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="122"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableMaxLength$Companion" sourcefilename="VariableMaxLength.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/NonBooleanPropertyPrefixedWithIs" sourcefilename="NonBooleanPropertyPrefixedWithIs.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)V" line="57"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)Lkotlin/Pair;" line="67"><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBoolean" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="74"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;Ljava/lang/String;Lorg/jetbrains/kotlin/name/FqName;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="207"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/LambdaParameterNaming" sourcefilename="LambdaParameterNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterPattern" desc="()Lkotlin/text/Regex;" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNamedDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Ljava/util/List;" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionNameMaxLength" sourcefilename="FunctionNameMaxLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaximumFunctionNameLength" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="27"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableNaming" sourcefilename="VariableNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVariablePattern" desc="()Lkotlin/text/Regex;" line="30"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrivateVariablePattern" desc="()Lkotlin/text/Regex;" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeClassPattern" desc="()Lkotlin/text/Regex;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="44"><counter type="INSTRUCTION" missed="2" covered="75"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPropertyTopLevelOrInCompanion" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="68"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="234"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionNameMaxLength$Companion" sourcefilename="FunctionNameMaxLength.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/BooleanPropertyNaming$Companion" sourcefilename="BooleanPropertyNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/MatchingDeclarationNameKt" sourcefilename="MatchingDeclarationName.kt"><method name="fileNameWithoutSuffix" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Ljava/util/List;)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fileNameWithoutSuffix$default" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;Ljava/util/List;ILjava/lang/Object;)Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/TopLevelPropertyNaming" sourcefilename="TopLevelPropertyNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstantPattern" desc="()Lkotlin/text/Regex;" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyPattern" desc="()Lkotlin/text/Regex;" line="28"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrivatePropertyPattern" desc="()Lkotlin/text/Regex;" line="31"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleConstant" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="45"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/String;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantPattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyPattern_delegate$lambda$1" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="privatePropertyPattern_delegate$lambda$2" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="260"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/TopLevelPropertyNaming$Companion" sourcefilename="TopLevelPropertyNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionNaming" sourcefilename="FunctionNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctionPattern" desc="()Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeClassPattern" desc="()Lkotlin/text/Regex;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnTypeName" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="177"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionParameterNaming" sourcefilename="FunctionParameterNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterPattern" desc="()Lkotlin/text/Regex;" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeClassPattern" desc="()Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverriddenFunctions" desc="()Z" line="33"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreOverridden" desc="()Z" line="38"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="61"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParameterInFunction" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="61"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="196"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/ConstructorParameterNaming" sourcefilename="ConstructorParameterNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParameterPattern" desc="()Lkotlin/text/Regex;" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrivateParameterPattern" desc="()Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludeClassPattern" desc="()Lkotlin/text/Regex;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="37"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="40"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrivateParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="63"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parameterPattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="privateParameterPattern_delegate$lambda$1" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeClassPattern_delegate$lambda$2" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="251"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/EnumNaming" sourcefilename="EnumNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnumEntryPattern" desc="()Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitEnumEntry" desc="(Lorg/jetbrains/kotlin/psi/KtEnumEntry;)V" line="27"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="enumEntryPattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="96"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableMinLength" sourcefilename="VariableMinLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimumVariableNameLength" desc="()I" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="25"><counter type="INSTRUCTION" missed="3" covered="47"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="93"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionNaming$Companion" sourcefilename="FunctionNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/FunctionNameMinLength" sourcefilename="FunctionNameMinLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinimumFunctionNameLength" desc="()I" line="24"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="27"><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableMinLength$Companion" sourcefilename="VariableMinLength.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/MatchingDeclarationName" sourcefilename="MatchingDeclarationName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMustBeFirst" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMultiplatformTargets" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile$matchesFirstClassOrObjectCondition" desc="(Lio/gitlab/arturbosch/detekt/rules/naming/MatchingDeclarationName;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtFile;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile$hasNoMatchingTypeAlias" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/String;)Z" line="71"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="241"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/MatchingDeclarationName$visitKtFile$$inlined$filterIsInstance$1" sourcefilename="_Sequences.kt"><method name="invoke" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableMaxLength" sourcefilename="VariableMaxLength.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaximumVariableNameLength" desc="()I" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="24"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/PackageNaming" sourcefilename="PackageNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackagePattern" desc="()Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPackageDirective" desc="(Lorg/jetbrains/kotlin/psi/KtPackageDirective;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="packagePattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/MemberNameEqualsClassName" sourcefilename="MemberNameEqualsClassName.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverriddenFunction" desc="()Z" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIgnoreOverridden" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedMembers" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)Lkotlin/sequences/Sequence;" line="89"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedCompanionObjectMembers" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Lkotlin/sequences/Sequence;" line="96"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFactoryMethod" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="102"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedMembers$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/rules/naming/MemberNameEqualsClassName;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedMembers$lambda$3" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="92"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedCompanionObjectMembers$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/rules/naming/MemberNameEqualsClassName;Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Lkotlin/sequences/Sequence;" line="98"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMisnamedCompanionObjectMembers$lambda$5" desc="(Lio/gitlab/arturbosch/detekt/rules/naming/MemberNameEqualsClassName;Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="329"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="11" covered="21"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/NoNameShadowing" sourcefilename="NoNameShadowing.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDestructuringDeclarationEntry" desc="(Lorg/jetbrains/kotlin/psi/KtDestructuringDeclarationEntry;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNameShadowing" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="71"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)V" line="78"><counter type="INSTRUCTION" missed="17" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParentImplicitParameterLambda" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="93"><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="127"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/VariableNaming$Companion" sourcefilename="VariableNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/PackageNaming$Companion" sourcefilename="PackageNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/ObjectPropertyNaming" sourcefilename="ObjectPropertyNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstantPattern" desc="()Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyPattern" desc="()Lkotlin/text/Regex;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPrivatePropertyPattern" desc="()Lkotlin/text/Regex;" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPropertyOfObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleConstant" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="53"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="59"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantPattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyPattern_delegate$lambda$1" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="privatePropertyPattern_delegate$lambda$2" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="258"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/ClassNaming$Companion" sourcefilename="ClassNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/NamingProvider" sourcefilename="NamingProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="15"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/BooleanPropertyNaming" sourcefilename="BooleanPropertyNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedPattern" desc="()Lkotlin/text/Regex;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)V" line="58"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportCodeSmell" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/CodeSmell;" line="73"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTypeName" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="192"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/InvalidPackageDeclaration" sourcefilename="InvalidPackageDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootPackage" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequireRootInDeclaration" desc="()Z" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPackageDirective" desc="(Lorg/jetbrains/kotlin/psi/KtPackageDirective;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportInvalidPackageDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Ljava/lang/String;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toNormalizedForm" desc="(Ljava/lang/Iterable;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutPrefix" desc="(Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/name/FqName;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/naming/EnumNaming$Companion" sourcefilename="EnumNaming.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/MatchingDeclarationName$Companion" sourcefilename="MatchingDeclarationName.kt"/><class name="io/gitlab/arturbosch/detekt/rules/naming/ClassNaming" sourcefilename="ClassNaming.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassPattern" desc="()Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="27"><counter type="INSTRUCTION" missed="4" covered="58"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classPattern_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="111"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EnumNaming.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="35" mb="0" cb="0"/><line nr="27" mi="2" ci="17" mb="1" cb="5"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="96"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LambdaParameterNaming.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="28" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="10" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="1" cb="3"/><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableNaming.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="27" mb="0" cb="0"/><line nr="33" mi="0" ci="27" mb="0" cb="0"/><line nr="36" mi="0" ci="27" mb="0" cb="0"/><line nr="41" mi="10" ci="23" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="1" cb="3"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="2" ci="5" mb="1" cb="1"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="2"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="1" cb="1"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="2" ci="14" mb="3" cb="3"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="234"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchingDeclarationName.kt"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="27" mb="0" cb="0"/><line nr="58" mi="0" ci="30" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="1" cb="5"/><line nr="71" mi="1" ci="17" mb="1" cb="1"/><line nr="73" mi="0" ci="9" mb="0" cb="4"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="1" cb="3"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="26" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="33" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="319"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VariableMaxLength.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="33" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="2"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="2" ci="5" mb="1" cb="1"/><line nr="30" mi="0" ci="5" mb="0" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="_Sequences.kt"><line nr="477" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionNaming.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="27" mb="0" cb="0"/><line nr="32" mi="0" ci="27" mb="0" cb="0"/><line nr="37" mi="10" ci="23" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="1" cb="3"/><line nr="47" mi="0" ci="6" mb="0" cb="2"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="23" mb="0" cb="6"/><counter type="INSTRUCTION" missed="10" covered="177"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionNameMinLength.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="28" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="4"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="2" ci="5" mb="1" cb="1"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TopLevelPropertyNaming.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="29" mb="0" cb="0"/><line nr="28" mi="0" ci="29" mb="0" cb="0"/><line nr="31" mi="0" ci="35" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="12" mb="0" cb="4"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="17" mb="1" cb="5"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="52" mi="2" ci="17" mb="1" cb="5"/><line nr="53" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="2" ci="17" mb="1" cb="5"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="260"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionNameMaxLength.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="33" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="4"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="2" ci="5" mb="1" cb="1"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="93"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanPropertyNaming.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="27" mb="0" cb="0"/><line nr="41" mi="10" ci="23" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="1" cb="1"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="2" ci="5" mb="1" cb="1"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="4"/><line nr="62" mi="0" ci="10" mb="0" cb="4"/><line nr="64" mi="0" ci="14" mb="0" cb="6"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="192"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VariableMinLength.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="33" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="1" cb="1"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="5" mb="1" cb="1"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="93"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NonBooleanPropertyPrefixedWithIs.kt"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="12" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="2" ci="5" mb="1" cb="1"/><line nr="58" mi="0" ci="24" mb="1" cb="7"/><line nr="59" mi="0" ci="16" mb="0" cb="2"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="3" ci="10" mb="2" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="2"/><line nr="69" mi="3" ci="5" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="2" ci="16" mb="2" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="207"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstructorParameterNaming.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="29" mb="0" cb="0"/><line nr="29" mi="0" ci="29" mb="0" cb="0"/><line nr="32" mi="0" ci="29" mb="0" cb="0"/><line nr="37" mi="10" ci="18" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="1"/><line nr="41" mi="0" ci="6" mb="1" cb="1"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="2" ci="15" mb="1" cb="5"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="2" ci="15" mb="1" cb="5"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="251"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ForbiddenClassName.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="27" mb="0" cb="0"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="2" ci="5" mb="1" cb="1"/><line nr="27" mi="0" ci="13" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="24" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="122"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionParameterNaming.kt"><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="27" mb="0" cb="0"/><line nr="29" mi="0" ci="27" mb="0" cb="0"/><line nr="33" mi="10" ci="17" mb="0" cb="0"/><line nr="38" mi="10" ci="23" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="13" mb="1" cb="5"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="2" ci="5" mb="1" cb="1"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="1" cb="1"/><line nr="62" mi="2" ci="10" mb="3" cb="3"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="26" covered="196"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NoNameShadowing.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="2" ci="5" mb="1" cb="1"/><line nr="72" mi="0" ci="15" mb="0" cb="2"/><line nr="73" mi="0" ci="24" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="2"/><line nr="80" mi="0" ci="6" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="4" ci="15" mb="2" cb="2"/><counter type="INSTRUCTION" missed="23" covered="127"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NamingProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="48" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PackageNaming.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="35" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="16" mb="0" cb="6"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectPropertyNaming.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="29" mb="0" cb="0"/><line nr="32" mi="0" ci="29" mb="0" cb="0"/><line nr="35" mi="0" ci="30" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="4"/><line nr="53" mi="2" ci="17" mb="1" cb="5"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="2" ci="17" mb="1" cb="5"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="2" ci="17" mb="1" cb="5"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="258"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidPackageDeclaration.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="25" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="4"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="14" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="16" mb="0" cb="4"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="17" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="210"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassNaming.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="35" mb="0" cb="0"/><line nr="27" mi="2" ci="14" mb="3" cb="5"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="2" ci="17" mb="1" cb="5"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="111"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MemberNameEqualsClassName.kt"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="10" ci="17" mb="0" cb="0"/><line nr="70" mi="0" ci="33" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="21" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="21" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="2"/><line nr="90" mi="0" ci="12" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="4"/><line nr="92" mi="2" ci="17" mb="1" cb="3"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="18" mb="1" cb="3"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="4" ci="15" mb="3" cb="3"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="9" mb="2" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="2" ci="14" mb="3" cb="3"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="329"/><counter type="BRANCH" missed="10" covered="28"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="11" covered="21"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="158" covered="3787"/><counter type="BRANCH" missed="63" covered="285"/><counter type="LINE" missed="6" covered="483"/><counter type="COMPLEXITY" missed="70" covered="264"/><counter type="METHOD" missed="7" covered="153"/><counter type="CLASS" missed="0" covered="24"/></package><package name="io/gitlab/arturbosch/detekt/core/util"><class name="io/gitlab/arturbosch/detekt/core/util/PerformanceMonitor" sourcefilename="PerformanceMonitor.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allFinished" desc="()Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="measure" desc="(Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/util/PerformanceMonitorKt" sourcefilename="PerformanceMonitor.kt"><method name="getOrCreateMonitor" desc="(Lio/gitlab/arturbosch/detekt/api/PropertiesAware;)Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor;" line="37"><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase" sourcefilename="PerformanceMonitor.kt"><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/util/ConfigExtensionsKt" sourcefilename="ConfigExtensions.kt"><method name="isActiveOrDefault" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Z)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldAnalyzeFile" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lorg/jetbrains/kotlin/psi/KtFile;Ljava/nio/file/Path;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createPathFilters" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Lio/github/detekt/utils/PathFilters;" line="19"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored" desc="(Lio/github/detekt/utils/PathFilters;Lorg/jetbrains/kotlin/psi/KtFile;Ljava/nio/file/Path;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indentCompat" desc="(Ljava/lang/String;I)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indentCompat$lambda$0" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/CharSequence;" line="32"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="79"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Entry" sourcefilename="PerformanceMonitor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase;J)V" line="21"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPhase" desc="()Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDuration-UwyO8pc" desc="()J" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/util/SimpleNotification" sourcefilename="SimpleNotification.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Notification$Level;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Notification$Level;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevel" desc="()Lio/gitlab/arturbosch/detekt/api/Notification$Level;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConfigExtensions.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="11" mb="0" cb="4"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="28" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="26" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="79"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SimpleNotification.kt"><line nr="5" mi="0" ci="10" mb="0" cb="0"/><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="8" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PerformanceMonitor.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="13" mb="0" cb="0"/><line nr="21" mi="6" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="12" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="18" covered="114"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="61" covered="224"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="27"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="5" covered="14"/><counter type="CLASS" missed="0" covered="6"/></package><package name="io/gitlab/arturbosch/detekt/generator"><class name="io/gitlab/arturbosch/detekt/generator/GeneratorArgs$PathSplitter" sourcefilename="GeneratorArgs.kt"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;)Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/GeneratorKt" sourcefilename="Generator.kt"><method name="parseAll" desc="(Lio/github/detekt/parser/KtCompiler;Ljava/nio/file/Path;)Ljava/util/Collection;" line="59"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAll$lambda$0" desc="(Ljava/nio/file/Path;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseAll$lambda$1" desc="(Lio/github/detekt/parser/KtCompiler;Ljava/nio/file/Path;)Lorg/jetbrains/kotlin/psi/KtFile;" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/Generator" sourcefilename="Generator.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/Map;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/io/PrintStream;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;Ljava/util/Map;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/io/PrintStream;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="24"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="executeCustomRuleConfig" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="130"/><counter type="LINE" missed="9" covered="23"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/GeneratorArgs$DirectoryValidator" sourcefilename="GeneratorArgs.kt"><method name="&lt;init&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validate" desc="(Ljava/lang/String;Ljava/nio/file/Path;)V" line="77"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/generator/GeneratorArgs$PathValidator" sourcefilename="GeneratorArgs.kt"><method name="&lt;init&gt;" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/lang/String;Ljava/util/List;)V" line="69"><counter type="INSTRUCTION" missed="12" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/DetektPrinter" sourcefilename="DetektPrinter.kt"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="print" desc="(Ljava/util/List;)V" line="25"><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printCustomRuleConfig" desc="(Ljava/util/List;Ljava/nio/file/Path;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markdownHeader" desc="(Ljava/lang/String;)Ljava/lang/String;" line="68"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$1$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/generator/DetektPrinter;Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetPage;)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$3" desc="(Ljava/util/List;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$4" desc="(Ljava/util/List;)Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$7" desc="(Ljava/util/List;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$10" desc="(Ljava/util/List;)Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="print$lambda$13" desc="(Ljava/util/List;)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printCustomRuleConfig$lambda$14" desc="(Ljava/util/List;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="235" covered="57"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="30" covered="9"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/Main" sourcefilename="Main.kt"><method name="main" desc="([Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/GeneratorArgs" sourcefilename="GeneratorArgs.kt"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputPath" desc="()Ljava/util/List;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInputPath" desc="(Ljava/util/List;)V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDocumentationPath" desc="()Ljava/nio/file/Path;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDocumentationPath" desc="(Ljava/nio/file/Path;)V" line="25"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigPath" desc="()Ljava/nio/file/Path;" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConfigPath" desc="(Ljava/nio/file/Path;)V" line="33"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHelp" desc="()Z" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHelp" desc="(Z)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGenerateCustomRuleConfig" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGenerateCustomRuleConfig" desc="(Z)V" line="48"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTextReplacements" desc="()Ljava/util/Map;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTextReplacements" desc="(Ljava/util/Map;)V" line="55"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="30"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DetektPrinter.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="0" cb="0"/><line nr="22" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="2" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="11" ci="0" mb="0" cb="0"/><line nr="28" mi="17" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="2" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="27" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="8" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="13" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="13" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="13" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="13" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="13" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="13" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="13" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="235" covered="57"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="30" covered="9"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Generator.kt"><line nr="13" mi="0" ci="13" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="7" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="11" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="15" mb="0" cb="0"/><line nr="42" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="162"/><counter type="LINE" missed="9" covered="28"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Main.kt"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="1" cb="1"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="7" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="1" cb="1"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GeneratorArgs.kt"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="3" ci="3" mb="0" cb="0"/><line nr="23" mi="1" ci="3" mb="0" cb="0"/><line nr="25" mi="3" ci="3" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="3" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="3" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="3" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="3" mb="0" cb="0"/><line nr="61" mi="1" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="20" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="12" ci="9" mb="1" cb="1"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="23" ci="0" mb="2" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="81"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="8" covered="11"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="375" covered="344"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="49" covered="65"/><counter type="COMPLEXITY" missed="23" covered="21"/><counter type="METHOD" missed="17" covered="21"/><counter type="CLASS" missed="1" covered="7"/></package><package name="io/gitlab/arturbosch/detekt/rules/exceptions"><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException" sourcefilename="ThrowingNewInstanceOfSameException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="45"><counter type="INSTRUCTION" missed="6" covered="55"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createsSameExceptionType" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/lang/String;)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSameExceptionParameter" desc="(Ljava/util/List;Ljava/lang/String;)Z" line="62"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="48"><counter type="INSTRUCTION" missed="1" covered="36"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="123"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException$visitCatchSection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionsProvider" sourcefilename="ExceptionsProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="15"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/RethrowCaughtException" sourcefilename="RethrowCaughtException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="66"><counter type="INSTRUCTION" missed="2" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="violatingThrowExpressionFrom" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Lorg/jetbrains/kotlin/psi/KtThrowExpression;" line="78"><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="111"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain" sourcefilename="ThrowingExceptionInMain.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="35"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ErrorUsageWithThrowable$Companion" sourcefilename="ErrorUsageWithThrowable.kt"/><class name="io/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace" sourcefilename="PrintStackTrace.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="53"><counter type="INSTRUCTION" missed="2" covered="45"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="62"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrintStacktraceCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="70"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;Lio/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Lkotlin/Unit;" line="63"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="138"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain$containsThrowExpression$$inlined$anyDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionInMain$containsThrowExpression$$inlined$anyDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ErrorUsageWithThrowable" sourcefilename="ErrorUsageWithThrowable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="54"><counter type="INSTRUCTION" missed="5" covered="83"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThrowableSubtypeOfThrowable" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="137"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionsWithoutMessageOrCause" sourcefilename="ThrowingExceptionsWithoutMessageOrCause.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptions" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="60"><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="134"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ObjectExtendsThrowable" sourcefilename="ObjectExtendsThrowable.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSubtypeOfThrowable" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)Z" line="62"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingNewInstanceOfSameException$visitCatchSection$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation$hasThrowExpression$$inlined$anyDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation$hasThrowExpression$$inlined$anyDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionCaught$Companion" sourcefilename="TooGenericExceptionCaught.kt"><method name="getCaughtExceptionDefaults" desc="()Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$Companion" sourcefilename="SwallowedException.kt"><method name="getEXCEPTIONS_IGNORED_BY_DEFAULT" desc="()Ljava/util/List;" line="163"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionCaught" sourcefilename="TooGenericExceptionCaught.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionNames" desc="()Ljava/util/Set;" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="49"><counter type="INSTRUCTION" missed="1" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTooGenericException" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exceptionNames_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/Set;" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="171"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$findReferenceInVariable$find$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally$visitTryExpression$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally$visitTryExpression$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/TooGenericExceptionThrown" sourcefilename="TooGenericExceptionThrown.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExceptionNames" desc="()Ljava/util/Set;" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="52"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exceptionNames_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/Set;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="118"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally" sourcefilename="ThrowingExceptionFromFinally.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFinallySection" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFinallySection$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally;Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Lkotlin/Unit;" line="34"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionUnused$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/PrintStackTrace$visitCatchSection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException" sourcefilename="InstanceOfCheckForException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="54"><counter type="INSTRUCTION" missed="4" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCheckForSubTypeOf" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="63"><counter type="INSTRUCTION" missed="7" covered="89"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/InstanceOfCheckForException;Lorg/jetbrains/kotlin/psi/KtParameter;Lorg/jetbrains/kotlin/psi/KtExpression;)Lkotlin/Unit;" line="56"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="152"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$isExceptionSwallowed$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException$parameterReferences$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ThrowingExceptionFromFinally$visitFinallySection$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/NotImplementedDeclaration" sourcefilename="NotImplementedDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="43"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="83"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ExceptionRaisedInUnexpectedLocation" sourcefilename="ExceptionRaisedInUnexpectedLocation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodNames" desc="()Ljava/util/List;" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPotentialMethod" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasThrowExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="60"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="110"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally" sourcefilename="ReturnFromFinally.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreLabeled" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isReturnFromTargetFunction" desc="(Lorg/jetbrains/kotlin/psi/KtBlockExpression;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="79"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canFilterLabeledExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeEqualsTo" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="94"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/ReturnFromFinally;Lorg/jetbrains/kotlin/psi/KtFinallySection;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="193"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException" sourcefilename="SwallowedException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredExceptionTypes" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="83"><counter type="INSTRUCTION" missed="5" covered="71"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionSwallowedOrUnused" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="96"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionUnused" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="99"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionSwallowed" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="107"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parameterReferences" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="3" covered="67"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findReferenceInVariable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="141"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoredExceptionTypes_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionUnused$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExceptionSwallowed$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/rules/exceptions/SwallowedException;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findReferenceInVariable$find$lambda$9" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="144"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findReferenceInVariable$find" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtBlockExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="143"><counter type="INSTRUCTION" missed="21" covered="66"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEXCEPTIONS_IGNORED_BY_DEFAULT" desc="()Ljava/util/List;" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="75"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="471"/><counter type="BRANCH" missed="18" covered="52"/><counter type="LINE" missed="1" covered="57"/><counter type="COMPLEXITY" missed="16" covered="35"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ErrorUsageWithThrowable.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="2" ci="11" mb="2" cb="2"/><line nr="56" mi="0" ci="13" mb="0" cb="4"/><line nr="57" mi="2" ci="11" mb="1" cb="1"/><line nr="58" mi="0" ci="12" mb="1" cb="1"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="1" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="18" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="13" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="137"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TooGenericExceptionCaught.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="30" mb="0" cb="0"/><line nr="46" mi="0" ci="32" mb="0" cb="0"/><line nr="49" mi="1" ci="9" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="18" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="2" ci="10" mb="1" cb="1"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="22" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="173"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SwallowedException.kt"><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="26" mb="0" cb="0"/><line nr="76" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="0" ci="32" mb="0" cb="0"/><line nr="83" mi="1" ci="9" mb="1" cb="1"/><line nr="84" mi="2" ci="7" mb="1" cb="1"/><line nr="85" mi="2" ci="21" mb="1" cb="5"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="89" mi="0" ci="18" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="12" mb="0" cb="4"/><line nr="99" mi="2" ci="7" mb="1" cb="1"/><line nr="100" mi="3" ci="5" mb="1" cb="1"/><line nr="101" mi="0" ci="14" mb="0" cb="2"/><line nr="102" mi="0" ci="15" mb="0" cb="4"/><line nr="107" mi="2" ci="7" mb="1" cb="1"/><line nr="108" mi="3" ci="5" mb="1" cb="1"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="29" mb="0" cb="10"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="1" ci="3" mb="1" cb="1"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="1" cb="1"/><line nr="128" mi="0" ci="20" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="2" ci="2" mb="1" cb="1"/><line nr="141" mi="3" ci="9" mb="1" cb="1"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="12" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="1" cb="1"/><line nr="148" mi="2" ci="13" mb="1" cb="1"/><line nr="150" mi="17" ci="0" mb="4" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="7" mb="0" cb="2"/><line nr="156" mi="2" ci="15" mb="1" cb="1"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="14" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="473"/><counter type="BRANCH" missed="18" covered="52"/><counter type="LINE" missed="1" covered="58"/><counter type="COMPLEXITY" missed="16" covered="36"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="InstanceOfCheckForException.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="2" ci="5" mb="1" cb="1"/><line nr="55" mi="2" ci="12" mb="1" cb="1"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="18" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="17" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="2" ci="15" mb="1" cb="3"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="3" ci="11" mb="2" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="2"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="2" ci="8" mb="2" cb="2"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="152"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExceptionRaisedInUnexpectedLocation.kt"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="25" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="14" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="9" mb="0" cb="4"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="60" mi="2" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="2" covered="110"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReturnFromFinally.kt"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="28" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="72" mi="0" ci="21" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="1" ci="7" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="1" cb="3"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="2" ci="4" mb="1" cb="1"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="193"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TooGenericExceptionThrown.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="25" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="14" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="1" ci="15" mb="3" cb="3"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="118"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowingNewInstanceOfSameException.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="7" mb="1" cb="1"/><line nr="46" mi="2" ci="10" mb="2" cb="2"/><line nr="47" mi="2" ci="14" mb="1" cb="1"/><line nr="48" mi="1" ci="10" mb="1" cb="1"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="13" mb="0" cb="2"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="18" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="2" ci="9" mb="1" cb="1"/><line nr="62" mi="0" ci="15" mb="1" cb="3"/><counter type="INSTRUCTION" missed="9" covered="123"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="14" mb="1" cb="3"/><line nr="325" mi="0" ci="10" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="27"/><counter type="CLASS" missed="0" covered="16"/></sourcefile><sourcefile name="PrintStackTrace.kt"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="2" ci="8" mb="1" cb="3"/><line nr="55" mi="0" ci="11" mb="0" cb="4"/><line nr="57" mi="0" ci="18" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="2" ci="12" mb="1" cb="1"/><line nr="63" mi="2" ci="14" mb="1" cb="5"/><line nr="64" mi="0" ci="18" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="2" ci="7" mb="1" cb="1"/><line nr="71" mi="0" ci="19" mb="0" cb="4"/><counter type="INSTRUCTION" missed="8" covered="138"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExceptionsProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="36" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ObjectExtendsThrowable.kt"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="4"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="1" ci="4" mb="1" cb="1"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="3" ci="4" mb="1" cb="1"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowingExceptionFromFinally.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="18" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotImplementedDeclaration.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="2" ci="8" mb="1" cb="1"/><line nr="37" mi="2" ci="8" mb="2" cb="2"/><line nr="38" mi="0" ci="18" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="2" ci="9" mb="2" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="1" cb="1"/><line nr="46" mi="0" ci="18" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="83"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowingExceptionsWithoutMessageOrCause.kt"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="25" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="24" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="2" ci="7" mb="1" cb="1"/><line nr="61" mi="2" ci="19" mb="1" cb="5"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="19" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="134"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RethrowCaughtException.kt"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="2" ci="7" mb="1" cb="1"/><line nr="71" mi="0" ci="18" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="2" ci="7" mb="1" cb="1"/><line nr="79" mi="2" ci="19" mb="2" cb="4"/><line nr="80" mi="0" ci="13" mb="1" cb="5"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="111"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowingExceptionInMain.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="4"/><line nr="30" mi="0" ci="15" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="2" ci="13" mb="1" cb="3"/><counter type="INSTRUCTION" missed="2" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="108" covered="2334"/><counter type="BRANCH" missed="69" covered="195"/><counter type="LINE" missed="2" covered="318"/><counter type="COMPLEXITY" missed="67" covered="176"/><counter type="METHOD" missed="0" covered="111"/><counter type="CLASS" missed="0" covered="34"/></package><package name="io/gitlab/arturbosch/detekt/core/reporting"><class name="io/gitlab/arturbosch/detekt/core/reporting/ConsoleReportLocator$loadReports$$inlined$loadExtensions$2$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/ConsoleReportLocator$loadReports$$inlined$loadExtensions$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/reporting/ConsoleReportLocator$loadReports$$inlined$loadExtensions$2" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/OutputReportLocator" sourcefilename="ReportLocator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadReports" desc="()Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="1" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/OutputFacade" sourcefilename="OutputFacade.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)V" line="9"><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleConsoleReports" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleOutputReports" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="153"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/OutputReportLocator$loadReports$$inlined$loadExtensions$2" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/OutputReportLocator$loadReports$$inlined$loadExtensions$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/reporting/ColorizerKt" sourcefilename="Colorizer.kt"><method name="colorized" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/core/reporting/Color;)Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="red" desc="(Ljava/lang/String;)Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yellow" desc="(Ljava/lang/String;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decolorized" desc="(Ljava/lang/String;)Ljava/lang/String;" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="71"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/Color" sourcefilename="Colorizer.kt"><method name="&lt;init&gt;" desc="(B)V" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEscapeSequence" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/ReportingKt" sourcefilename="Reporting.kt"><method name="defaultReportMapping" desc="(Lio/gitlab/arturbosch/detekt/api/OutputReport;)Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printIssues" desc="(Ljava/util/Map;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="excludeCorrectable" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterEmptyIssues" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterAutoCorrectedIssues" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;)Ljava/util/List;" line="39"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="truncatedMessage" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detailed" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compact" desc="(Lio/gitlab/arturbosch/detekt/api/Location;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="193"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/ConsoleReportLocator" sourcefilename="ReportLocator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadReports" desc="()Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/OutputReportLocator$loadReports$$inlined$loadExtensions$2$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/reporting/ReportLocator" sourcefilename="ReportLocator.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSettings" desc="()Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExcludes" desc="()Ljava/util/Set;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Ljava/util/List;" line="17"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Loading.kt"><line nr="23" mi="0" ci="18" mb="0" cb="0"/><line nr="24" mi="0" ci="46" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ReportLocator.kt"><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="2"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="15" mb="0" cb="2"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="1" ci="14" mb="1" cb="1"/><counter type="INSTRUCTION" missed="1" covered="89"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Reporting.kt"><line nr="11" mi="0" ci="9" mb="0" cb="2"/><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="2" ci="11" mb="1" cb="1"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="2"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="20" mb="0" cb="0"/><line nr="57" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="193"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OutputFacade.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="10" mb="0" cb="0"/><line nr="15" mi="1" ci="9" mb="1" cb="1"/><line nr="16" mi="2" ci="4" mb="1" cb="1"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="12" mb="1" cb="5"/><line nr="30" mi="0" ci="16" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="13" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="24" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="153"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Colorizer.kt"><line nr="6" mi="0" ci="5" mb="0" cb="0"/><line nr="7" mi="0" ci="5" mb="0" cb="0"/><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="12" mb="0" cb="0"/><line nr="17" mi="1" ci="6" mb="1" cb="1"/><line nr="18" mi="0" ci="2" mb="1" cb="1"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="89"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Comparisons.kt"/><counter type="INSTRUCTION" missed="8" covered="588"/><counter type="BRANCH" missed="7" covered="29"/><counter type="LINE" missed="1" covered="75"/><counter type="COMPLEXITY" missed="7" covered="43"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="11"/></package><package name="io/github/detekt/tooling/api"><class name="io/github/detekt/tooling/api/DetektError" sourcefilename="DetektError.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/BaselineProviderKt" sourcefilename="BaselineProvider.kt"/><class name="io/github/detekt/tooling/api/DetektProvider" sourcefilename="DetektProvider.kt"/><class name="io/github/detekt/tooling/api/BaselineProvider$Companion" sourcefilename="BaselineProvider.kt"><method name="load" desc="(Ljava/lang/ClassLoader;)Lio/github/detekt/tooling/api/BaselineProvider;" line="15"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load$default" desc="(Lio/github/detekt/tooling/api/BaselineProvider$Companion;Ljava/lang/ClassLoader;ILjava/lang/Object;)Lio/github/detekt/tooling/api/BaselineProvider;" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/DetektProvider$Companion" sourcefilename="DetektProvider.kt"><method name="load" desc="(Ljava/lang/ClassLoader;)Lio/github/detekt/tooling/api/DetektProvider;" line="31"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load$default" desc="(Lio/github/detekt/tooling/api/DetektProvider$Companion;Ljava/lang/ClassLoader;ILjava/lang/Object;)Lio/github/detekt/tooling/api/DetektProvider;" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/AnalysisResult" sourcefilename="AnalysisResult.kt"/><class name="io/github/detekt/tooling/api/DetektCli" sourcefilename="DetektCli.kt"/><class name="io/github/detekt/tooling/api/DetektCli$Companion" sourcefilename="DetektCli.kt"><method name="load" desc="(Ljava/lang/ClassLoader;)Lio/github/detekt/tooling/api/DetektCli;" line="16"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load$default" desc="(Lio/github/detekt/tooling/api/DetektCli$Companion;Ljava/lang/ClassLoader;ILjava/lang/Object;)Lio/github/detekt/tooling/api/DetektCli;" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/VersionProvider" sourcefilename="VersionProvider.kt"/><class name="io/github/detekt/tooling/api/VersionProvider$Companion" sourcefilename="VersionProvider.kt"><method name="load" desc="(Ljava/lang/ClassLoader;)Lio/github/detekt/tooling/api/VersionProvider;" line="14"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load$default" desc="(Lio/github/detekt/tooling/api/VersionProvider$Companion;Ljava/lang/ClassLoader;ILjava/lang/Object;)Lio/github/detekt/tooling/api/VersionProvider;" line="11"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/Detekt" sourcefilename="Detekt.kt"/><class name="io/github/detekt/tooling/api/InvalidConfig" sourcefilename="DetektError.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/Baseline" sourcefilename="BaselineProvider.kt"/><class name="io/github/detekt/tooling/api/UnexpectedError" sourcefilename="DetektError.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCause" desc="()Ljava/lang/Throwable;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/AnalysisMode" sourcefilename="AnalysisMode.kt"><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/DefaultConfigurationProvider$Companion" sourcefilename="DefaultConfigurationProvider.kt"><method name="load" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec;Ljava/lang/ClassLoader;)Lio/github/detekt/tooling/api/DefaultConfigurationProvider;" line="22"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load$default" desc="(Lio/github/detekt/tooling/api/DefaultConfigurationProvider$Companion;Lio/github/detekt/tooling/api/spec/ExtensionsSpec;Ljava/lang/ClassLoader;ILjava/lang/Object;)Lio/github/detekt/tooling/api/DefaultConfigurationProvider;" line="18"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/IssuesFound" sourcefilename="DetektError.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/DetektProvider$DefaultImpls" sourcefilename="DetektProvider.kt"><method name="getPriority" desc="(Lio/github/detekt/tooling/api/DetektProvider;)I" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/BaselineProvider" sourcefilename="BaselineProvider.kt"/><class name="io/github/detekt/tooling/api/DefaultConfigurationProvider" sourcefilename="DefaultConfigurationProvider.kt"/><sourcefile name="DetektCli.kt"><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Detekt.kt"/><sourcefile name="AnalysisResult.kt"/><sourcefile name="VersionProvider.kt"><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaselineProvider.kt"><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnalysisMode.kt"><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektError.kt"><line nr="3" mi="0" ci="9" mb="0" cb="0"/><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="6" mi="0" ci="5" mb="0" cb="0"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="10" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="DefaultConfigurationProvider.kt"><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="12" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektProvider.kt"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="3" ci="10" mb="1" cb="1"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="33" mi="4" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="34"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="222"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="11"/></package><package name="io/gitlab/arturbosch/detekt/core/rules"><class name="io/gitlab/arturbosch/detekt/core/rules/SingleRuleProvider" sourcefilename="SingleRuleProvider.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Lio/gitlab/arturbosch/detekt/api/RuleSet;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/rules/RuleSetsKt" sourcefilename="RuleSets.kt"><method name="createRuleProviders" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Ljava/util/List;" line="12"><counter type="INSTRUCTION" missed="24" covered="127"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRuleProviders$lambda$7$lambda$6$lambda$5" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSetProvider;)Ljava/lang/CharSequence;" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createRuleProviders$lambda$7$lambda$6" desc="(Ljava/util/List;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="160"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/rules/SingleRuleProvider$Companion" sourcefilename="SingleRuleProvider.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Rule$Name;Lio/gitlab/arturbosch/detekt/api/RuleSetProvider;)Lio/gitlab/arturbosch/detekt/core/rules/SingleRuleProvider;" line="16"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SingleRuleProvider.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="19" mb="0" cb="2"/><line nr="17" mi="0" ci="15" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RuleSets.kt"><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="7" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="37" mb="0" cb="6"/><line nr="26" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="10" ci="5" mb="1" cb="1"/><line nr="29" mi="14" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="21" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="160"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="231"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/github/detekt/tooling/api/spec"><class name="io/github/detekt/tooling/api/spec/ReportsSpec" sourcefilename="ReportsSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy$NeverFail" sourcefilename="RulesSpec.kt"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/spec/RulesSpec" sourcefilename="RulesSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ReportsSpec$Report" sourcefilename="ReportsSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ExtensionsSpec$Plugins" sourcefilename="ExtensionsSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ConfigSpec" sourcefilename="ConfigSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ExecutionSpec" sourcefilename="ExecutionSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$RunPolicy" sourcefilename="RulesSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$RunPolicy$NoRestrictions" sourcefilename="RulesSpec.kt"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/spec/ExtensionsSpec" sourcefilename="ExtensionsSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$RunPolicy$RestrictToSingleRule" sourcefilename="RulesSpec.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/lang/String;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleId" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/spec/ProcessingSpec$Companion" sourcefilename="ProcessingSpec.kt"><method name="invoke" desc="(Lkotlin/jvm/functions/Function1;)Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/spec/LoggingSpec" sourcefilename="LoggingSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ProjectSpec" sourcefilename="ProjectSpec.kt"/><class name="io/github/detekt/tooling/api/spec/BaselineSpec" sourcefilename="BaselineSpec.kt"/><class name="io/github/detekt/tooling/api/spec/CompilerSpec" sourcefilename="CompilerSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ExtensionsSpecKt" sourcefilename="ExtensionsSpec.kt"/><class name="io/github/detekt/tooling/api/spec/ProcessingSpec" sourcefilename="ProcessingSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy" sourcefilename="RulesSpec.kt"/><class name="io/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy$FailOnSeverity" sourcefilename="RulesSpec.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Severity;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinSeverity" desc="()Lio/gitlab/arturbosch/detekt/api/Severity;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/api/spec/RulesSpec$RunPolicy$DisableDefaultRuleSets" sourcefilename="RulesSpec.kt"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LoggingSpec.kt"/><sourcefile name="ExtensionsSpec.kt"/><sourcefile name="ExecutionSpec.kt"/><sourcefile name="BaselineSpec.kt"/><sourcefile name="ReportsSpec.kt"/><sourcefile name="CompilerSpec.kt"/><sourcefile name="ProjectSpec.kt"/><sourcefile name="ProcessingSpec.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigSpec.kt"/><sourcefile name="RulesSpec.kt"><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="6"/></package><package name="io/gitlab/arturbosch/detekt/rules/bugs"><class name="io/gitlab/arturbosch/detekt/rules/bugs/RedundantElseInWhen" sourcefilename="RedundantElseInWhen.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IteratorHasNextCallsNextMethod" sourcefilename="IteratorHasNextCallsNextMethod.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callsNextMethod" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callsNextMethod$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="54"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall$Companion" sourcefilename="MissingUseCall.kt"/><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingPackageDeclaration" sourcefilename="MissingPackageDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="18"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/DoubleMutabilityForCollection" sourcefilename="DoubleMutabilityForCollection.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMutableTypes" desc="()Ljava/util/Set;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="59"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutableTypes_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/Set;" line="55"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="162"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/PotentialBugProvider" sourcefilename="PotentialBugProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="16"><counter type="INSTRUCTION" missed="0" covered="178"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ElseCaseInsteadOfExhaustiveWhen" sourcefilename="ElseCaseInsteadOfExhaustiveWhen.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredSubjectTypes" desc="()Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForElseCaseInsteadOfExhaustiveWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="71"><counter type="INSTRUCTION" missed="4" covered="98"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNonExpectedSealedClass" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="100"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="159"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MapGetWithNotNullAssertionOperator" sourcefilename="MapGetWithNotNullAssertionOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMapGet" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)Z" line="60"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="65"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnnecessarySafeCall" sourcefilename="UnnecessarySafeCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSafeQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;)V" line="36"><counter type="INSTRUCTION" missed="1" covered="65"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="73"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ExitOutsideMain$Companion" sourcefilename="ExitOutsideMain.kt"><method name="getExitCalls" desc="()Ljava/util/Set;" line="62"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse$isSingleReturnWithBooleanConstant$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse$isSingleReturnWithBooleanConstant$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/DuplicateCaseInWhenExpression" sourcefilename="DuplicateCaseInWhenExpression.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression$lambda$1$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtWhenCondition;)Ljava/lang/CharSequence;" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression$lambda$3$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtWhenCondition;)Ljava/lang/CharSequence;" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsWithHashCodeExist$ViolationHolder" sourcefilename="EqualsWithHashCodeExist.kt"><method name="&lt;init&gt;" desc="(ZZ)V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEquals" desc="()Z" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEquals" desc="(Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHashCode" desc="()Z" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHashCode" desc="(Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="violation" desc="()Z" line="56"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/DoubleMutabilityForCollection$Companion" sourcefilename="DoubleMutabilityForCollection.kt"><method name="getDefaultMutableTypes" desc="()Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/DontDowncastCollectionTypes$Companion" sourcefilename="DontDowncastCollectionTypes.kt"><method name="getImmutableTypes" desc="()Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMutableTypes" desc="()Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnnecessaryNotNullOperator" sourcefilename="UnnecessaryNotNullOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitUnaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtUnaryExpression;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingSuperCall$hasSuperCall$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IteratorHasNextCallsNextMethod$callsNextMethod$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UselessPostfixExpression" sourcefilename="UselessPostfixExpression.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProperties" desc="()Ljava/util/Set;" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperties" desc="(Ljava/util/Set;)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReturnExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)V" line="70"><counter type="INSTRUCTION" missed="3" covered="53"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="83"><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPostFixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtPostfixExpression;" line="91"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkPostfixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;Ljava/lang/String;)V" line="100"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeReported" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)Z" line="106"><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPostfixExpressionChildren" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Ljava/util/List;" line="123"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldBeReported$lambda$8" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="108"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="271"/><counter type="BRANCH" missed="13" covered="27"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="14" covered="18"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/CastNullableToNonNullableType" sourcefilename="CastNullableToNonNullableType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnorePlatformTypes" desc="()Z" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryWithTypeRHSExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V" line="51"><counter type="INSTRUCTION" missed="6" covered="116"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="157"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/WrongEqualsTypeParameter" sourcefilename="WrongEqualsTypeParameter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasWrongEqualsSignature" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UselessPostfixExpression$shouldBeReported$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/NullCheckOnMutableProperty" sourcefilename="NullCheckOnMutableProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IgnoredReturnValue$Companion" sourcefilename="IgnoredReturnValue.kt"/><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnusedUnaryOperator" sourcefilename="UnusedUnaryOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrefixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPrefixExpression;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="114"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentBinaryExpressionOrThis" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="71"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrefixExpression$lambda$0" desc="(Lorg/jetbrains/kotlin/com/intellij/lang/ASTNode;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentBinaryExpressionOrThis$lambda$2" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="162"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall$checkAndReport$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall$checkAndReport$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsWithHashCodeExist" sourcefilename="EqualsWithHashCodeExist.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFile" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnnamedParameterUse" sourcefilename="UnnamedParameterUse.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowAdjacentDifferentTypeParams" desc="()Z" line="82"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowSingleParamUse" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="89"><counter type="INSTRUCTION" missed="10" covered="179"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="6" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAdjacentUnnamedParamsAllowed" desc="(Ljava/util/List;)Z" line="129"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeCanBeAssigned" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/psi/KtValueArgument;)Z" line="135"><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="338"/><counter type="BRANCH" missed="11" covered="45"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="11" covered="24"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/NullableToStringCall$Companion" sourcefilename="NullableToStringCall.kt"><method name="getToString" desc="()Lorg/jetbrains/kotlin/name/FqName;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/InvalidRange" sourcefilename="InvalidRange.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInvalidLoopRange" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="45"><counter type="INSTRUCTION" missed="4" covered="76"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="112"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/CastToNullableType" sourcefilename="CastToNullableType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryWithTypeRHSExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V" line="39"><counter type="INSTRUCTION" missed="11" covered="116"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="124"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall" sourcefilename="MissingUseCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectLiteralExpression" desc="(Lorg/jetbrains/kotlin/psi/KtObjectLiteralExpression;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkAndReport" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="92"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChildOfCloseable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="110"><counter type="INSTRUCTION" missed="3" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isChildOfCloseable" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldReport" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="126"><counter type="INSTRUCTION" missed="21" covered="91"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParentFunctionReturnsCloseable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="168"><counter type="INSTRUCTION" missed="3" covered="49"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isParamForClosableOrFunReturningClosable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="180"><counter type="INSTRUCTION" missed="10" covered="40"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doesEndWithUse" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z" line="189"><counter type="INSTRUCTION" missed="1" covered="44"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCloseableNotUsed" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Z" line="199"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpressionUsedOnSameOrNextLine" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="204"><counter type="INSTRUCTION" missed="1" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartOfIfElseExpressionReturningCloseable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="236"><counter type="INSTRUCTION" missed="8" covered="83"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParentChainExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="259"><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstCallableReceiverOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Lorg/jetbrains/kotlin/psi/KtElement;" line="280"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpressionUsedOnSameOrNextLine$lambda$4" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="217"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpressionUsedOnSameOrNextLine$lambda$6" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;" line="219"><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpressionUsedOnSameOrNextLine$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall;Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z" line="222"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstCallableReceiverOrNull$isCallableExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lio/gitlab/arturbosch/detekt/rules/bugs/MissingUseCall;)Z" line="278"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="294"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="685"/><counter type="BRANCH" missed="26" covered="86"/><counter type="LINE" missed="3" covered="127"/><counter type="COMPLEXITY" missed="25" covered="52"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ImplicitDefaultLocaleKt" sourcefilename="ImplicitDefaultLocale.kt"><method name="containsLocaleObject" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="68"><counter type="INSTRUCTION" missed="5" covered="58"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="58"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse$isSingleReturnWithBooleanConstant$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse$isSingleReturnWithBooleanConstant$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse$isSingleReturnWithBooleanConstant$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnreachableCatchBlock" sourcefilename="UnreachableCatchBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="54"><counter type="INSTRUCTION" missed="4" covered="72"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="catchClassDescriptor" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;" line="66"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSubclassOf" desc="(Lorg/jetbrains/kotlin/descriptors/ClassDescriptor;Lorg/jetbrains/kotlin/psi/KtCatchClause;)Z" line="73"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="124"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnconditionalJumpStatementInLoop$hasJumpStatements$lambda$0$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/HasPlatformType" sourcefilename="HasPlatformType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasImplicitPlatformType" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;)Z" line="70"><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasImplicitPlatformType$isPlatFormType" desc="(Lorg/jetbrains/kotlin/psi/KtCallableDeclaration;Lio/gitlab/arturbosch/detekt/rules/bugs/HasPlatformType;)Z" line="61"><counter type="INSTRUCTION" missed="12" covered="49"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="137"/><counter type="BRANCH" missed="8" covered="28"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsAlwaysReturnsTrueOrFalse" sourcefilename="EqualsAlwaysReturnsTrueOrFalse.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsBooleanConstant" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="58"><counter type="INSTRUCTION" missed="3" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSingleReturnWithBooleanConstant" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="67"><counter type="INSTRUCTION" missed="2" covered="69"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBooleanConstant" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSingleReturnWithBooleanConstant$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="151"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnconditionalJumpStatementInLoop$isConditionalJumpStatement$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnconditionalJumpStatementInLoop$hasJumpStatements$lambda$0$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnnecessaryNotNullCheck$Companion" sourcefilename="UnnecessaryNotNullCheck.kt"/><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingSuperCall" sourcefilename="MissingSuperCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMustInvokeSuperAnnotations" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="64"><counter type="INSTRUCTION" missed="3" covered="58"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superFunctionWithAnnotation" desc="(Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" line="75"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuperCall" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mustInvokeSuperAnnotations_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="61"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuperCall$lambda$4" desc="(Lio/gitlab/arturbosch/detekt/rules/bugs/MissingSuperCall;Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)Z" line="80"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="209"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/NullableToStringCall" sourcefilename="NullableToStringCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSimpleNameExpression" desc="(Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)V" line="47"><counter type="INSTRUCTION" missed="3" covered="98"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNullableExpression" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;)Z" line="60"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="166"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/LateinitUsage" sourcefilename="LateinitUsage.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOnClassesPattern" desc="()Lkotlin/text/Regex;" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="45"><counter type="INSTRUCTION" missed="2" covered="57"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="117"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ExplicitGarbageCollectionCall" sourcefilename="ExplicitGarbageCollectionCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="33"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchesGCCall" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/psi/KtSimpleNameExpression;)V" line="39"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="84"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnreachableCode" sourcefilename="UnreachableCode.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/PropertyUsedBeforeDeclaration$visitClassOrObject$lambda$3$$inlined$forEachDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IgnoredReturnValue" sourcefilename="IgnoredReturnValue.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRestrictToAnnotatedMethods" desc="()Z" line="60"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRestrictToConfig" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnValueAnnotations" desc="()Ljava/util/List;" line="67"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreReturnValueAnnotations" desc="()Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReturnValueTypes" desc="()Ljava/util/List;" line="89"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreFunctionCall" desc="()Ljava/util/List;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="110"><counter type="INSTRUCTION" missed="7" covered="149"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsedAsExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="142"><counter type="INSTRUCTION" missed="9" covered="87"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLambdaResult" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtLambdaExpression;)Z" line="156"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/types/KotlinType;)Z" line="172"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/descriptors/annotations/AnnotationDescriptor;)Z" line="174"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/name/FqName;)Z" line="177"><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueAnnotations_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoreReturnValueAnnotations_delegate$lambda$2" desc="(Ljava/util/List;)Ljava/util/List;" line="85"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnValueTypes_delegate$lambda$4" desc="(Ljava/util/List;)Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoreFunctionCall_delegate$lambda$6" desc="(Ljava/util/List;)Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="118"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="642"/><counter type="BRANCH" missed="16" covered="50"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="17" covered="34"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IteratorNotThrowingNoSuchElementException$throwsNoSuchElementExceptionThrown$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/Deprecation" sourcefilename="Deprecation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="25"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasDeprecationCompilerWarnings" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Lorg/jetbrains/kotlin/diagnostics/DiagnosticWithParameters2;" line="34"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="84"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/IteratorNotThrowingNoSuchElementException" sourcefilename="IteratorNotThrowingNoSuchElementException.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsNoSuchElementExceptionThrown" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNoSuchElementExpression" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="71"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwsNoSuchElementExceptionThrown$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/bugs/IteratorNotThrowingNoSuchElementException;Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="68"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="86"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ImplicitDefaultLocale" sourcefilename="ImplicitDefaultLocale.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkStringFormatting" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/PropertyUsedBeforeDeclaration" sourcefilename="PropertyUsedBeforeDeclaration.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="57"><counter type="INSTRUCTION" missed="6" covered="83"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="descriptor" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" line="82"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject$lambda$3$lambda$2" desc="(Ljava/util/Map;Ljava/util/Set;Lio/gitlab/arturbosch/detekt/rules/bugs/PropertyUsedBeforeDeclaration;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Lkotlin/Unit;" line="71"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="160"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/MissingWhenCase" sourcefilename="MissingWhenCase.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowElseExpression" desc="()Z" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkMissingWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="85"><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportMissingCases" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnsafeCallOnNullableType" sourcefilename="UnsafeCallOnNullableType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPostfixExpression" desc="(Lorg/jetbrains/kotlin/psi/KtPostfixExpression;)V" line="41"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/DontDowncastCollectionTypes" sourcefilename="DontDowncastCollectionTypes.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIsExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIsExpression;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryWithTypeRHSExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkForDowncast" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" line="55"><counter type="INSTRUCTION" missed="3" covered="109"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="215"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnconditionalJumpStatementInLoop" sourcefilename="UnconditionalJumpStatementInLoop.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLoopExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasJumpStatements" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;Ljava/lang/String;)Z" line="55"><counter type="INSTRUCTION" missed="3" covered="52"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJumpStatement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="75"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFollowedByElvisJump" desc="(Lorg/jetbrains/kotlin/psi/KtReturnExpression;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isElvisJump" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="85"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAfterConditionalJumpStatement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="88"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConditionalJumpStatement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConditionalJumpStatement$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/rules/bugs/UnconditionalJumpStatementInLoop;Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="196"/><counter type="BRANCH" missed="1" covered="37"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="27"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnnecessaryNotNullCheck" sourcefilename="UnnecessaryNotNullCheck.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="92"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="126"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/CharArrayToStringCall" sourcefilename="CharArrayToStringCall.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtQualifiedExpression;)V" line="43"><counter type="INSTRUCTION" missed="3" covered="27"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="52"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateEntry" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateEntry;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCharArrayToString" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCharArray" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="71"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isString" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="73"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="137"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/EqualsWithHashCodeExistKt" sourcefilename="EqualsWithHashCodeExist.kt"/><class name="io/gitlab/arturbosch/detekt/rules/bugs/AvoidReferentialEquality" sourcefilename="AvoidReferentialEquality.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForbiddenTypePatterns" desc="()Ljava/util/List;" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forbiddenTypePatterns_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ImplicitUnitReturnType" sourcefilename="ImplicitUnitReturnType.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowExplicitReturnType" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="48"><counter type="INSTRUCTION" missed="2" covered="87"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="128"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/UnsafeCast" sourcefilename="UnsafeCast.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryWithTypeRHSExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpressionWithTypeRHS;)V" line="40"><counter type="INSTRUCTION" missed="4" covered="64"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/NullCheckOnMutableProperty$NullCheckVisitor" sourcefilename="NullCheckOnMutableProperty.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/bugs/NullCheckOnMutableProperty;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="81"><counter type="INSTRUCTION" missed="6" covered="131"/><counter type="BRANCH" missed="6" covered="18"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="6" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitReferenceExpression" desc="(Lorg/jetbrains/kotlin/psi/KtReferenceExpression;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectNonNullChecks" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Ljava/util/List;" line="136"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Lorg/jetbrains/kotlin/name/FqName;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="359"/><counter type="BRANCH" missed="8" covered="48"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="8" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/bugs/ExitOutsideMain" sourcefilename="ExitOutsideMain.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="51"><counter type="INSTRUCTION" missed="4" covered="62"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="98"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IgnoredReturnValue.kt"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="10" ci="17" mb="0" cb="0"/><line nr="64" mi="0" ci="32" mb="0" cb="0"/><line nr="67" mi="0" ci="24" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="24" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="24" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="0" ci="31" mb="0" cb="0"/><line nr="105" mi="0" ci="13" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="2" ci="11" mb="2" cb="2"/><line nr="115" mi="2" ci="13" mb="1" cb="5"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="11" mb="0" cb="2"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="3" ci="8" mb="2" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="2"/><line nr="144" mi="0" ci="21" mb="0" cb="4"/><line nr="145" mi="0" ci="8" mb="0" cb="4"/><line nr="146" mi="3" ci="16" mb="2" cb="2"/><line nr="147" mi="4" ci="12" mb="2" cb="2"/><line nr="148" mi="2" ci="14" mb="1" cb="3"/><line nr="149" mi="0" ci="6" mb="1" cb="3"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="12" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="2"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="2" ci="12" mb="2" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="2" ci="9" mb="1" cb="1"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="3" ci="7" mb="2" cb="2"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="0" ci="36" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="642"/><counter type="BRANCH" missed="16" covered="50"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="17" covered="34"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HasPlatformType.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="4"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="6" ci="11" mb="3" cb="3"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="4" ci="14" mb="2" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="2" ci="8" mb="1" cb="1"/><line nr="67" mi="0" ci="11" mb="0" cb="4"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="19" mb="1" cb="7"/><line nr="72" mi="0" ci="19" mb="1" cb="7"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="137"/><counter type="BRANCH" missed="8" covered="28"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="8" covered="14"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryNotNullCheck.kt"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="2" ci="5" mb="1" cb="1"/><line nr="38" mi="2" ci="5" mb="1" cb="1"/><line nr="39" mi="0" ci="15" mb="1" cb="3"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="126"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingUseCall.kt"><line nr="72" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="1" ci="8" mb="1" cb="1"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="3" ci="7" mb="1" cb="1"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="3" ci="6" mb="1" cb="1"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="11" mb="0" cb="2"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="8" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="18" ci="0" mb="2" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="11" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="13" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="3" ci="12" mb="2" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="2"/><line nr="181" mi="4" ci="14" mb="2" cb="2"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="3" ci="10" mb="2" cb="2"/><line nr="184" mi="3" ci="5" mb="1" cb="1"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="17" mb="1" cb="3"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="1" ci="4" mb="1" cb="1"/><line nr="195" mi="0" ci="6" mb="1" cb="1"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="200" mi="0" ci="15" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="10" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="12" mb="0" cb="2"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="2"/><line nr="220" mi="1" ci="10" mb="1" cb="1"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="16" mb="1" cb="3"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="4"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="2" ci="3" mb="1" cb="1"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="3" ci="4" mb="1" cb="1"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="2" ci="7" mb="1" cb="3"/><line nr="263" mi="2" ci="7" mb="1" cb="3"/><line nr="264" mi="0" ci="10" mb="1" cb="1"/><line nr="267" mi="0" ci="6" mb="0" cb="2"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="13" mb="0" cb="2"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="6" mb="0" cb="2"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="1" cb="1"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="13" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="13" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="685"/><counter type="BRANCH" missed="26" covered="86"/><counter type="LINE" missed="3" covered="127"/><counter type="COMPLEXITY" missed="25" covered="52"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EqualsAlwaysReturnsTrueOrFalse.kt"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="4"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="3" ci="5" mb="1" cb="1"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="19" mb="1" cb="5"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="0" ci="17" mb="0" cb="6"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="2" ci="18" mb="1" cb="3"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="151"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullCheckOnMutableProperty.kt"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="6"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="1" ci="13" mb="1" cb="1"/><line nr="82" mi="1" ci="4" mb="1" cb="1"/><line nr="83" mi="2" ci="2" mb="1" cb="1"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="2"/><line nr="87" mi="2" ci="9" mb="1" cb="1"/><line nr="89" mi="0" ci="10" mb="0" cb="2"/><line nr="90" mi="0" ci="7" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="1" cb="1"/><line nr="93" mi="0" ci="15" mb="1" cb="3"/><line nr="94" mi="0" ci="6" mb="0" cb="2"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="0" ci="10" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="8" mb="0" cb="4"/><line nr="123" mi="0" ci="17" mb="1" cb="3"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="23" mb="0" cb="4"/><line nr="141" mi="0" ci="23" mb="0" cb="4"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="380"/><counter type="BRANCH" missed="8" covered="48"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="8" covered="30"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EqualsWithHashCodeExist.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="6" ci="32" mb="0" cb="0"/><line nr="56" mi="0" ci="16" mb="0" cb="8"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="1" cb="3"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="143"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ElseCaseInsteadOfExhaustiveWhen.kt"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="26" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="2" ci="13" mb="2" cb="4"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="2" ci="11" mb="1" cb="3"/><line nr="83" mi="0" ci="6" mb="0" cb="6"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="0" ci="17" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="4"/><counter type="INSTRUCTION" missed="4" covered="159"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnusedUnaryOperator.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="1" ci="3" mb="1" cb="1"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="1" ci="8" mb="1" cb="3"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="12" mb="1" cb="3"/><line nr="54" mi="0" ci="15" mb="1" cb="5"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="62" mi="2" ci="17" mb="2" cb="2"/><line nr="63" mi="2" ci="5" mb="1" cb="1"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="17" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="24" mb="0" cb="4"/><counter type="INSTRUCTION" missed="6" covered="162"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PropertyUsedBeforeDeclaration.kt"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="16" mb="1" cb="3"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="3" ci="5" mb="1" cb="1"/><line nr="63" mi="3" ci="9" mb="1" cb="1"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="12" mb="0" cb="6"/><line nr="73" mi="0" ci="27" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="2" ci="10" mb="1" cb="1"/><counter type="INSTRUCTION" missed="8" covered="160"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingPackageDeclaration.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="2" ci="17" mb="2" cb="6"/><line nr="19" mi="0" ci="17" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExplicitGarbageCollectionCall.kt"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="2" ci="9" mb="1" cb="1"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="4"/><line nr="40" mi="2" ci="8" mb="1" cb="1"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="1" cb="3"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="84"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PotentialBugProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="90" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="190"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InvalidRange.kt"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="18" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="24" mb="2" cb="6"/><line nr="46" mi="4" ci="20" mb="4" cb="4"/><line nr="47" mi="0" ci="10" mb="1" cb="5"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="2"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="112"/><counter type="BRANCH" missed="7" covered="23"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DuplicateCaseInWhenExpression.kt"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="32" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="27" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="21" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImplicitDefaultLocale.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="20" mb="1" cb="5"/><line nr="55" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="1" ci="10" mb="1" cb="1"/><line nr="69" mi="0" ci="8" mb="1" cb="1"/><line nr="70" mi="0" ci="4" mb="1" cb="1"/><line nr="71" mi="0" ci="4" mb="1" cb="1"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="12" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="1" cb="1"/><line nr="77" mi="0" ci="3" mb="1" cb="1"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="134"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MissingWhenCase.kt"><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="28" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="4"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="1" ci="6" mb="1" cb="1"/><line nr="86" mi="2" ci="5" mb="1" cb="1"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="4"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="4"/><line nr="102" mi="0" ci="21" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="17" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="154"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="14" mb="1" cb="3"/><line nr="325" mi="0" ci="10" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="26"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="15"/></sourcefile><sourcefile name="UnnecessaryNotNullOperator.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnreachableCode.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="17" mb="0" cb="6"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CastNullableToNonNullableType.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="28" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="2"/><line nr="55" mi="0" ci="8" mb="0" cb="2"/><line nr="56" mi="2" ci="5" mb="1" cb="1"/><line nr="57" mi="2" ci="10" mb="1" cb="1"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="2" ci="5" mb="1" cb="1"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="17" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="157"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Deprecation.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="2"/><line nr="27" mi="5" ci="10" mb="1" cb="1"/><line nr="28" mi="0" ci="26" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="2"/><counter type="INSTRUCTION" missed="5" covered="84"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnconditionalJumpStatementInLoop.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="20" mb="0" cb="6"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="3" ci="5" mb="1" cb="1"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="4"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="24" mb="0" cb="6"/><line nr="85" mi="0" ci="17" mb="0" cb="6"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="196"/><counter type="BRANCH" missed="1" covered="37"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="27"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LateinitUsage.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="28" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="1" cb="1"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="2" ci="26" mb="2" cb="4"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="17" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="117"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsafeCast.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="4" ci="21" mb="2" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapGetWithNotNullAssertionOperator.kt"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="2" cb="2"/><line nr="54" mi="0" ci="18" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="1" ci="4" mb="1" cb="1"/><line nr="64" mi="0" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="1" covered="65"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnreachableCatchBlock.kt"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="2" ci="9" mb="1" cb="1"/><line nr="57" mi="0" ci="17" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="2" ci="6" mb="1" cb="1"/><line nr="60" mi="0" ci="12" mb="0" cb="2"/><line nr="61" mi="0" ci="17" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="3" ci="8" mb="2" cb="2"/><line nr="67" mi="1" ci="17" mb="1" cb="1"/><line nr="68" mi="1" ci="5" mb="1" cb="1"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="73" mi="3" ci="6" mb="1" cb="1"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="124"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleMutabilityForCollection.kt"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="31" mb="0" cb="0"/><line nr="55" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="2" ci="13" mb="2" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="4"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="2" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="22" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="162"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="UselessPostfixExpression.kt"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="7" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="19" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="2" ci="9" mb="1" cb="1"/><line nr="72" mi="0" ci="6" mb="0" cb="4"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="1" ci="8" mb="1" cb="1"/><line nr="78" mi="0" ci="8" mb="1" cb="1"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="2" ci="9" mb="1" cb="1"/><line nr="84" mi="2" ci="7" mb="1" cb="1"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="1" ci="8" mb="1" cb="1"/><line nr="88" mi="0" ci="9" mb="1" cb="1"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="10" mb="0" cb="4"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="2" ci="9" mb="1" cb="3"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="2" ci="7" mb="1" cb="1"/><line nr="107" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="1" cb="1"/><line nr="109" mi="8" ci="0" mb="2" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="15" mb="1" cb="3"/><counter type="INSTRUCTION" missed="30" covered="271"/><counter type="BRANCH" missed="13" covered="27"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="14" covered="18"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IteratorNotThrowingNoSuchElementException.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="4"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="3" ci="14" mb="2" cb="2"/><line nr="72" mi="2" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="5" covered="86"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExitOutsideMain.kt"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="2" ci="17" mb="1" cb="5"/><line nr="54" mi="2" ci="15" mb="3" cb="3"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="18" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="2" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="98"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="ImplicitUnitReturnType.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="28" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="4"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="2" ci="10" mb="1" cb="3"/><line nr="56" mi="0" ci="5" mb="0" cb="2"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="58" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="128"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DontDowncastCollectionTypes.kt"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="1" ci="4" mb="1" cb="1"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="0" ci="4" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="1" ci="4" mb="1" cb="1"/><line nr="63" mi="1" ci="11" mb="2" cb="2"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="66" mi="0" ci="10" mb="1" cb="3"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="1" cb="3"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="2" ci="18" mb="0" cb="0"/><line nr="80" mi="2" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="22" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="215"/><counter type="BRANCH" missed="9" covered="13"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="CharArrayToStringCall.kt"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="3" ci="12" mb="2" cb="2"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="2" ci="5" mb="1" cb="1"/><line nr="55" mi="0" ci="8" mb="1" cb="3"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="2" ci="14" mb="1" cb="1"/><line nr="73" mi="2" ci="15" mb="1" cb="1"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="137"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AvoidReferentialEquality.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="25" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="4"/><line nr="59" mi="0" ci="15" mb="2" cb="4"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NullableToStringCall.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="2"/><line nr="50" mi="0" ci="11" mb="0" cb="2"/><line nr="51" mi="0" ci="24" mb="0" cb="6"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="25" mb="1" cb="7"/><line nr="55" mi="0" ci="19" mb="0" cb="6"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="3" ci="5" mb="1" cb="1"/><line nr="61" mi="3" ci="5" mb="1" cb="1"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="2" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="166"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="RedundantElseInWhen.kt"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="17" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IteratorHasNextCallsNextMethod.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="4"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="2" ci="17" mb="1" cb="1"/><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WrongEqualsTypeParameter.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="12" mb="0" cb="6"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnsafeCallOnNullableType.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="1" cb="1"/><line nr="43" mi="2" ci="13" mb="2" cb="4"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessarySafeCall.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="2" cb="2"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="73"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnamedParameterUse.kt"><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="27" mb="0" cb="0"/><line nr="85" mi="0" ci="28" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="2" ci="8" mb="1" cb="1"/><line nr="96" mi="3" ci="19" mb="2" cb="6"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="4"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="2" ci="21" mb="1" cb="7"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="19" mb="0" cb="4"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="14" mb="1" cb="3"/><line nr="118" mi="3" ci="5" mb="1" cb="1"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="16" mb="0" cb="2"/><line nr="130" mi="0" ci="16" mb="0" cb="4"/><line nr="131" mi="0" ci="19" mb="0" cb="2"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="3" ci="13" mb="2" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="1" ci="13" mb="2" cb="2"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="16" covered="338"/><counter type="BRANCH" missed="11" covered="45"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="11" covered="24"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CastToNullableType.kt"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="8" mb="0" cb="2"/><line nr="44" mi="5" ci="16" mb="3" cb="3"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="2" ci="13" mb="2" cb="2"/><line nr="47" mi="2" ci="11" mb="1" cb="1"/><line nr="49" mi="0" ci="10" mb="0" cb="4"/><line nr="51" mi="2" ci="18" mb="1" cb="1"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="17" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="124"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MissingSuperCall.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="25" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="3" ci="15" mb="2" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="2"/><line nr="71" mi="0" ci="17" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="26" mb="0" cb="2"/><line nr="76" mi="0" ci="27" mb="0" cb="4"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="2" ci="12" mb="1" cb="1"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="209"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="301" covered="7028"/><counter type="BRANCH" missed="195" covered="723"/><counter type="LINE" missed="8" covered="1056"/><counter type="COMPLEXITY" missed="203" covered="518"/><counter type="METHOD" missed="10" covered="251"/><counter type="CLASS" missed="4" covered="61"/></package><package name="io/gitlab/arturbosch/detekt/core/baseline"><class name="io/gitlab/arturbosch/detekt/core/baseline/IndentingXMLStreamWriter" sourcefilename="IndentingXMLStreamWriter.kt"><method name="&lt;init&gt;" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStartTag" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onEndTag" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onEmptyTag" desc="()V" line="34"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeNL" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeIndent" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStartDocument" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStartDocument" desc="(Ljava/lang/String;)V" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartDocument" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartElement" desc="(Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeStartElement" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="74"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeStartElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="79"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="84"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="89"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEmptyElement" desc="(Ljava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeEndElement" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCharacters" desc="(Ljava/lang/String;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeCharacters" desc="([CII)V" line="109"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="writeCData" desc="(Ljava/lang/String;)V" line="114"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="162"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="31" covered="41"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="10" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/BaselineHandler" sourcefilename="BaselineHandler.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBaseline$detekt_core" desc="()Lio/gitlab/arturbosch/detekt/core/baseline/DefaultBaseline;" line="13"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="startElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endElement" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="2" covered="75"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="characters" desc="([CII)V" line="38"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="153"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/BaselineFormat" sourcefilename="BaselineFormat.kt"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPositions" desc="(Ljavax/xml/stream/XMLStreamException;)Lkotlin/Pair;" line="18"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Ljava/util/Set;Ljava/util/Set;)Lio/gitlab/arturbosch/detekt/core/baseline/DefaultBaseline;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="(Ljava/nio/file/Path;)Lio/gitlab/arturbosch/detekt/core/baseline/DefaultBaseline;" line="26"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Ljava/nio/file/Path;Lio/github/detekt/tooling/api/Baseline;)V" line="44"><counter type="INSTRUCTION" missed="40" covered="57"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="save" desc="(Ljavax/xml/stream/XMLStreamWriter;Lio/github/detekt/tooling/api/Baseline;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="217"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/DefaultBaselineKt" sourcefilename="DefaultBaseline.kt"><method name="getBaselineId" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/DefaultBaseline$Companion" sourcefilename="DefaultBaseline.kt"><method name="load" desc="(Ljava/nio/file/Path;)Lio/github/detekt/tooling/api/Baseline;" line="22"><counter type="INSTRUCTION" missed="16" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/XmlExtensionsKt" sourcefilename="XmlExtensions.kt"><method name="addFinalNewLine" desc="(Ljava/io/Writer;)Ljava/io/Writer;" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="streamXml" desc="(Ljava/io/Writer;)Ljavax/xml/stream/XMLStreamWriter;" line="16"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prettyPrinter" desc="(Ljavax/xml/stream/XMLStreamWriter;)Ljavax/xml/stream/XMLStreamWriter;" line="18"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="document" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljavax/xml/stream/XMLStreamWriter;" line="24"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="document$default" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljavax/xml/stream/XMLStreamWriter;" line="20"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tag" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljavax/xml/stream/XMLStreamWriter;" line="37"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tag" desc="(Ljavax/xml/stream/XMLStreamWriter;Ljava/lang/String;Ljava/lang/String;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="49"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="8"/><counter type="COMPLEXITY" missed="9" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/BaselineFormat$InvalidState" sourcefilename="BaselineFormat.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/BaselineResultMapping" sourcefilename="BaselineResultMapping.kt"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformIssues" desc="(Ljava/util/List;)Ljava/util/List;" line="25"><counter type="INSTRUCTION" missed="11" covered="31"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformWithBaseline" desc="(Ljava/util/List;Ljava/nio/file/Path;)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterByBaseline" desc="(Ljava/nio/file/Path;Ljava/util/List;)Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOrUpdate" desc="(Ljava/nio/file/Path;Ljava/util/List;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="baselineExists" desc="(Ljava/nio/file/Path;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onRawResult" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinalResult" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="189"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/IndentingXMLStreamWriter$Companion" sourcefilename="IndentingXMLStreamWriter.kt"/><class name="io/gitlab/arturbosch/detekt/core/baseline/DefaultBaseline" sourcefilename="DefaultBaseline.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Set;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getManuallySuppressedIssues" desc="()Ljava/util/Set;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentIssues" desc="()Ljava/util/Set;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/String;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/baseline/XmlExtensionsKt$addFinalNewLine$1" sourcefilename="XmlExtensions.kt"><method name="&lt;init&gt;" desc="(Ljava/io/Writer;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BaselineFormat.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="24" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="13" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="18" mb="0" cb="0"/><line nr="39" mi="0" ci="20" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="5" ci="41" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="14" ci="0" mb="0" cb="0"/><line nr="50" mi="20" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="228"/><counter type="LINE" missed="4" covered="32"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultBaseline.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="14" mb="0" cb="4"/><line nr="22" mi="8" ci="9" mb="1" cb="1"/><line nr="23" mi="8" ci="9" mb="1" cb="1"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="84"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="BaselineHandler.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="4"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="2" ci="17" mb="3" cb="7"/><line nr="26" mi="0" ci="17" mb="0" cb="4"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="29" mi="0" ci="10" mb="1" cb="1"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="19" mb="0" cb="2"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="153"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlExtensions.kt"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="18" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="14" ci="0" mb="0" cb="0"/><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="14" ci="0" mb="0" cb="0"/><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="18" ci="0" mb="8" cb="0"/><line nr="27" mi="14" ci="0" mb="4" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="59"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="16" covered="11"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IndentingXMLStreamWriter.kt"><line nr="6" mi="0" ci="10" mb="0" cb="0"/><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="2"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="14" mb="0" cb="2"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="162"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="31" covered="41"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="10" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaselineResultMapping.kt"><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="13" mb="0" cb="2"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="10" ci="11" mb="3" cb="5"/><line nr="27" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="14" mb="1" cb="3"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="22" mb="1" cb="3"/><counter type="INSTRUCTION" missed="11" covered="189"/><counter type="BRANCH" missed="5" covered="21"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="338" covered="875"/><counter type="BRANCH" missed="23" covered="55"/><counter type="LINE" missed="52" covered="139"/><counter type="COMPLEXITY" missed="31" covered="68"/><counter type="METHOD" missed="14" covered="44"/><counter type="CLASS" missed="0" covered="10"/></package><package name="io/github/detekt/metrics/processors"><class name="io/github/detekt/metrics/processors/ProjectCognitiveComplexityProcessor" sourcefilename="ProjectCognitiveComplexityProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/gitlab/arturbosch/detekt/api/DetektVisitor;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/KtFileCountProcessorKt" sourcefilename="KtFileCountProcessor.kt"><method name="getNumberOfFilesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="14"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountProcessor" sourcefilename="ClassCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/ClassCountVisitor;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/LOCVisitor" sourcefilename="ProjectLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountVisitor" sourcefilename="PropertyCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/CLOCVisitor" sourcefilename="ProjectCLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/KtFileCountVisitor" sourcefilename="KtFileCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountProcessorKt" sourcefilename="ClassCountProcessor.kt"><method name="getNumberOfClassesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/SLOCVisitor$SLOC" sourcefilename="ProjectSLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="count" desc="(Ljava/util/List;)I" line="27"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/LLOCVisitor" sourcefilename="ProjectLLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PackageCountProcessor" sourcefilename="PackageCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/KtFileCountProcessor" sourcefilename="KtFileCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/KtFileCountVisitor;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectLOCProcessorKt" sourcefilename="ProjectLOCProcessor.kt"><method name="getLinesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="22"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectComplexityProcessorKt" sourcefilename="ProjectComplexityProcessor.kt"><method name="getComplexityKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/CLOCCountVisitor" sourcefilename="ProjectCLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCount$detekt_metrics" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCount$detekt_metrics" desc="(I)V" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="increment" desc="(I)V" line="33"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitComment" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiComment;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtDeclaration;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="75"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectSLOCProcessorKt" sourcefilename="ProjectSLOCProcessor.kt"><method name="getSourceLinesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="33"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/AbstractProcessor" sourcefilename="AbstractProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Ljava/util/List;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ClassCountVisitor" sourcefilename="ClassCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PackageCountProcessorKt" sourcefilename="PackageCountProcessor.kt"><method name="getNumberOfPackagesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountProcessorKt" sourcefilename="PropertyCountProcessor.kt"><method name="getNumberOfFieldsKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectCognitiveComplexityProcessor$visitor$1" sourcefilename="ProjectCognitiveComplexityProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PropertyCountProcessor" sourcefilename="PropertyCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/PropertyCountVisitor;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountProcessor" sourcefilename="FunctionCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/FunctionCountVisitor;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountVisitor$visitKtFile$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ComplexityVisitor" sourcefilename="ProjectComplexityProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile$lambda$0" desc="(Lio/github/detekt/metrics/CyclomaticComplexity$Config;)Lkotlin/Unit;" line="21"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectLLOCProcessor" sourcefilename="ProjectLLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/LLOCVisitor;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectLLOCProcessorKt" sourcefilename="ProjectLLOCProcessor.kt"><method name="getLogicalLinesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="15"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectComplexityProcessor" sourcefilename="ProjectComplexityProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/ComplexityVisitor;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectLOCProcessor" sourcefilename="ProjectLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/gitlab/arturbosch/detekt/api/DetektVisitor;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectCLOCProcessor" sourcefilename="ProjectCLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/github/detekt/metrics/processors/CLOCVisitor;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountProcessorKt" sourcefilename="FunctionCountProcessor.kt"><method name="getNumberOfFunctionsKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/PackageCountVisitor" sourcefilename="PackageCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/FunctionCountVisitor" sourcefilename="FunctionCountProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/AbstractProjectMetricProcessor" sourcefilename="AbstractProjectMetricProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectCLOCProcessorKt" sourcefilename="ProjectCLOCProcessor.kt"><method name="getCommentLinesKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="16"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/ProjectSLOCProcessor" sourcefilename="ProjectSLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisitor" desc="()Lio/gitlab/arturbosch/detekt/api/DetektVisitor;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/metrics/processors/SLOCVisitor" sourcefilename="ProjectSLOCProcessor.kt"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KtFileCountProcessor.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="PropertyCountProcessor.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ClassCountProcessor.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectCLOCProcessor.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="4" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="22" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="2"/><line nr="43" mi="0" ci="19" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="131"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ProjectComplexityProcessor.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectLLOCProcessor.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="20" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectLOCProcessor.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="18" mb="0" cb="2"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectSLOCProcessor.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="20" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="22" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="29" mi="0" ci="27" mb="0" cb="6"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="138"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="PackageCountProcessor.kt"><line nr="10" mi="0" ci="16" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="17" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="AbstractProjectMetricProcessor.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="13" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionCountProcessor.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ProjectCognitiveComplexityProcessor.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="12" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractProcessor.kt"><line nr="9" mi="0" ci="16" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="309" mi="0" ci="9" mb="0" cb="0"/><line nr="324" mi="0" ci="21" mb="3" cb="3"/><line nr="325" mi="0" ci="15" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="973"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="145"/><counter type="COMPLEXITY" missed="4" covered="124"/><counter type="METHOD" missed="1" covered="118"/><counter type="CLASS" missed="0" covered="45"/></package><package name="io/gitlab/arturbosch/detekt/core/tooling"><class name="io/gitlab/arturbosch/detekt/core/tooling/ParsingStrategyKt" sourcefilename="ParsingStrategy.kt"><method name="getInputPathsToKtFiles" desc="()Lkotlin/jvm/functions/Function1;" line="9"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inputPathsToKtFiles$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Ljava/util/List;" line="10"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/DefaultDetektProvider" sourcefilename="DefaultDetektProvider.kt"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)Lio/github/detekt/tooling/api/Detekt;" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/Lifecycle" sourcefilename="Lifecycle.kt"/><class name="io/gitlab/arturbosch/detekt/core/tooling/ProcessingSpecSettingsBridgeKt" sourcefilename="ProcessingSpecSettingsBridge.kt"><method name="withSettings" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadConfiguration" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)Lio/gitlab/arturbosch/detekt/api/Config;" line="44"><counter type="INSTRUCTION" missed="5" covered="92"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="workaroundConfiguration" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;Lio/gitlab/arturbosch/detekt/api/Config;)Lio/gitlab/arturbosch/detekt/api/Config;" line="54"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withSettings$lambda$0" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)Lio/gitlab/arturbosch/detekt/api/Config;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withSettings$lambda$3" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor;)Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;" line="27"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withSettings$lambda$5" desc="(Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase;J)Ljava/lang/String;" line="38"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="311"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/DefaultVersionProvider" sourcefilename="DefaultVersionProvider.kt"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="current" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/Lifecycle$DefaultImpls" sourcefilename="Lifecycle.kt"><method name="measure" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;Lio/gitlab/arturbosch/detekt/core/util/PerformanceMonitor$Phase;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;)Lio/gitlab/arturbosch/detekt/api/Detektion;" line="34"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;)Lkotlin/Unit;" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;)Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;Ljava/util/List;)Lorg/jetbrains/kotlin/resolve/BindingContext;" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;)Lkotlin/Pair;" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lio/gitlab/arturbosch/detekt/api/Detektion;" line="42"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;Lio/gitlab/arturbosch/detekt/api/Detektion;)Lio/gitlab/arturbosch/detekt/api/Detektion;" line="51"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="180"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/DefaultLifecycle" sourcefilename="Lifecycle.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBaselineConfig" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSettings" desc="()Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParsingStrategy" desc="()Lkotlin/jvm/functions/Function1;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBindingProvider" desc="()Lkotlin/jvm/functions/Function1;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getProcessorsProvider" desc="()Lkotlin/jvm/functions/Function0;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetsProvider" desc="()Lkotlin/jvm/functions/Function0;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_init_$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Ljava/util/List;)Lorg/jetbrains/kotlin/resolve/BindingContext;" line="64"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_init_$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_init_$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="117"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/AnalysisFacade" sourcefilename="AnalysisFacade.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="()Lio/github/detekt/tooling/api/AnalysisResult;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lio/github/detekt/tooling/api/AnalysisResult;" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAnalysis$detekt_core" desc="(Lkotlin/jvm/functions/Function1;)Lio/github/detekt/tooling/api/AnalysisResult;" line="36"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkFailurePolicy" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/gitlab/arturbosch/detekt/api/Config;)Lio/github/detekt/tooling/api/DetektError;" line="50"><counter type="INSTRUCTION" missed="6" covered="50"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/AnalysisFacade;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run$lambda$3$lambda$1" desc="(Ljava/util/Collection;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run$lambda$3$lambda$2" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Ljava/util/List;)Lorg/jetbrains/kotlin/resolve/BindingContext;" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run$lambda$3" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/AnalysisFacade;Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Lio/gitlab/arturbosch/detekt/core/tooling/Lifecycle;" line="28"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAnalysis$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/core/tooling/AnalysisFacade;Lkotlin/jvm/functions/Function1;Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Lio/github/detekt/tooling/internal/DefaultAnalysisResult;" line="37"><counter type="INSTRUCTION" missed="11" covered="76"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="232"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/DefaultConfigProvider" sourcefilename="DefaultConfigProvider.kt"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Ljava/nio/file/Path;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/tooling/DefaultConfigProviderKt" sourcefilename="DefaultConfigProvider.kt"><method name="configInputStream" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec;)Ljava/io/InputStream;" line="33"><counter type="INSTRUCTION" missed="19" covered="76"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSafeResourcesAsStreams" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;)Lkotlin/sequences/Sequence;" line="49"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultConfiguration" desc="(Lio/github/detekt/tooling/api/spec/ExtensionsSpec;)Lio/gitlab/arturbosch/detekt/api/Config;" line="53"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultConfiguration" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)Lio/gitlab/arturbosch/detekt/api/Config;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSafeResourcesAsStreams$lambda$3" desc="(Ljava/net/URL;)Ljava/io/InputStream;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="113"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultVersionProvider.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Lifecycle.kt"><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="13" mb="0" cb="0"/><line nr="35" mi="0" ci="14" mb="0" cb="0"/><line nr="36" mi="0" ci="14" mb="0" cb="0"/><line nr="37" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="20" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="1" cb="1"/><line nr="65" mi="15" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="297"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="19"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DefaultConfigProvider.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="9" ci="7" mb="1" cb="1"/><line nr="36" mi="5" ci="20" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="5" ci="22" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="147"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ParsingStrategy.kt"><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessingSpecSettingsBridge.kt"><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="28" mi="0" ci="13" mb="0" cb="2"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="24" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="17" mb="0" cb="2"/><line nr="38" mi="0" ci="20" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="19" mb="0" cb="4"/><line nr="47" mi="5" ci="46" mb="0" cb="4"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="2"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="4"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="311"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnalysisFacade.kt"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="15" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="24" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="11" ci="8" mb="2" cb="2"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="22" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="6" ci="2" mb="1" cb="1"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="232"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultDetektProvider.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="1032"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="1" covered="125"/><counter type="COMPLEXITY" missed="5" covered="66"/><counter type="METHOD" missed="0" covered="51"/><counter type="CLASS" missed="0" covered="9"/></package><package name="io/gitlab/arturbosch/detekt/core"><class name="io/gitlab/arturbosch/detekt/core/FileProcessorLocator" sourcefilename="FileProcessorLocator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="()Ljava/util/List;" line="16"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/RuleDescriptor" sourcefilename="Analyzer.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleProvider" desc="()Lkotlin/jvm/functions/Function1;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfig" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleId" desc="()Ljava/lang/String;" line="159"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/ModificationNotification" sourcefilename="KtFileModifier.kt"><method name="&lt;init&gt;" desc="(Ljava/nio/file/Path;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLevel" desc="()Lio/gitlab/arturbosch/detekt/api/Notification$Level;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="24"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/DelegatingResult" sourcefilename="DelegatingResult.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Ljava/util/List;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssues" desc="()Ljava/util/List;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/FileProcessorLocator$load$$inlined$loadExtensions$2" sourcefilename="Loading.kt"><method name="invoke" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/FileProcessorLocator$load$$inlined$loadExtensions$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/core/Analyzer" sourcefilename="Analyzer.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;Ljava/util/List;Ljava/util/List;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="(Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;)Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="6" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run$default" desc="(Lio/gitlab/arturbosch/detekt/core/Analyzer;Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;ILjava/lang/Object;)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runSync" desc="(Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="10" covered="70"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAsync" desc="(Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="analyze" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;" line="90"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runAsync$lambda$9$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/core/Analyzer;Lorg/jetbrains/kotlin/psi/KtFile;Lorg/jetbrains/kotlin/resolve/BindingContext;Lio/gitlab/arturbosch/detekt/api/CompilerResources;)Ljava/util/List;" line="76"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runAsync$lambda$9$lambda$8" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Throwable;)Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="analyze$lambda$10" desc="(Lio/gitlab/arturbosch/detekt/core/Analyzer;Lio/gitlab/arturbosch/detekt/api/RuleSetProvider;)Lkotlin/Pair;" line="91"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$11" desc="(Lkotlin/Pair;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$12" desc="(Lkotlin/Pair;)Lkotlin/Pair;" line="93"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$13" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lio/gitlab/arturbosch/detekt/core/Analyzer;Lkotlin/Pair;)Z" line="94"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21$lambda$15" desc="(Ljava/lang/String;)Lkotlin/Pair;" line="101"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21$lambda$17" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet;Lio/gitlab/arturbosch/detekt/api/Config;Lkotlin/Pair;)Lio/gitlab/arturbosch/detekt/core/RuleDescriptor;" line="103"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21$lambda$18" desc="(Lio/gitlab/arturbosch/detekt/core/RuleDescriptor;)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21$lambda$19" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lio/gitlab/arturbosch/detekt/core/Analyzer;Lio/gitlab/arturbosch/detekt/core/RuleDescriptor;)Z" line="113"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21$lambda$20" desc="(Lio/gitlab/arturbosch/detekt/api/RuleSet;Lio/gitlab/arturbosch/detekt/core/RuleDescriptor;)Lkotlin/Pair;" line="114"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$21" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lio/gitlab/arturbosch/detekt/core/Analyzer;Lkotlin/Pair;)Lkotlin/sequences/Sequence;" line="97"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$22" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Lkotlin/Pair;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze$lambda$23" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Lkotlin/Pair;)Z" line="122"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$28" desc="(Lio/gitlab/arturbosch/detekt/core/Analyzer;Lio/gitlab/arturbosch/detekt/api/RuleSetProvider;)Lkotlin/Pair;" line="139"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$29" desc="(Lkotlin/Pair;)Z" line="140"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$30" desc="(Lkotlin/Pair;)Lkotlin/Pair;" line="141"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$34$lambda$31" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/util/Map$Entry;)Lkotlin/Pair;" line="145"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$34$lambda$32" desc="(Lkotlin/Pair;)Z" line="146"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$34$lambda$33" desc="(Lkotlin/Pair;)Lio/gitlab/arturbosch/detekt/api/Rule;" line="147"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$34" desc="(Lkotlin/Pair;)Lkotlin/sequences/Sequence;" line="142"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$35" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;)Z" line="149"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warnAboutEnabledRequiresTypeResolutionRules$lambda$37$lambda$36" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;)Ljava/lang/String;" line="151"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="672"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="10" covered="72"/><counter type="COMPLEXITY" missed="6" covered="32"/><counter type="METHOD" missed="3" covered="27"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/TaskPoolKt" sourcefilename="TaskPool.kt"><method name="task" desc="(Lio/gitlab/arturbosch/detekt/core/TaskPool;Lkotlin/jvm/functions/Function0;)Ljava/util/concurrent/CompletableFuture;" line="12"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recover" desc="(Ljava/util/concurrent/CompletableFuture;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;" line="14"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="awaitAll" desc="(Ljava/util/List;)Ljava/util/List;" line="16"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="task$lambda$0" desc="(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;" line="12"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="recover$lambda$1" desc="(Lkotlin/jvm/functions/Function1;Ljava/lang/Throwable;)Ljava/lang/Object;" line="14"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/core/ProcessingSettings" sourcefilename="ProcessingSettings.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;Lio/gitlab/arturbosch/detekt/api/Config;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSpec" desc="()Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfig" desc="()Lio/gitlab/arturbosch/detekt/api/Config;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigUris" desc="()Ljava/util/Collection;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTaskPool" desc="()Lio/gitlab/arturbosch/detekt/core/TaskPool;" line="46"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="taskPool_delegate$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/core/ProcessingSettings;)Lio/gitlab/arturbosch/detekt/core/TaskPool;" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/DetektResult" sourcefilename="DetektResult.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssues" desc="()Ljava/util/List;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNotifications" desc="()Ljava/util/Collection;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetrics" desc="()Ljava/util/Collection;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lio/gitlab/arturbosch/detekt/api/ProjectMetric;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/RuleInstanceImpl" sourcefilename="Analyzer.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/Rule$Name;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/lang/String;)V" line="202"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lio/gitlab/arturbosch/detekt/api/Rule$Name;" line="204"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="205"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/TaskPool" sourcefilename="TaskPool.kt"><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;Z)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/concurrent/ExecutorService;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/IssueImpl" sourcefilename="Analyzer.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/RuleInstance;Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Severity;Z)V" line="193"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/RuleInstance;Lio/gitlab/arturbosch/detekt/api/Entity;Ljava/lang/String;Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Severity;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleInstance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleInstance;" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntity" desc="()Lio/gitlab/arturbosch/detekt/api/Entity;" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMessage" desc="()Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferences" desc="()Ljava/util/List;" line="197"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSeverity" desc="()Lio/gitlab/arturbosch/detekt/api/Severity;" line="198"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAutoCorrectEnabled" desc="()Z" line="199"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="62"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/JunkKt" sourcefilename="Junk.kt"><method name="getNL" desc="()Ljava/lang/String;" line="3"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/KtFileModifier" sourcefilename="KtFileModifier.kt"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unnormalizeContent" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="23" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Ljava/util/List;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="82"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/FileProcessorLocator$load$$inlined$loadExtensions$2$1" sourcefilename="Loading.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Extension;)Ljava/lang/CharSequence;" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/AnalyzerKt" sourcefilename="Analyzer.kt"><method name="extractRuleName" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Rule$Name;" line="157"><counter type="INSTRUCTION" missed="9" covered="37"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterSuppressedFindings" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Rule;Lorg/jetbrains/kotlin/resolve/BindingContext;)Ljava/util/List;" line="162"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIllegalStateException" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/lang/Throwable;)Ljava/lang/Void;" line="171"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIssue" desc="(Lio/gitlab/arturbosch/detekt/api/Finding;Lio/gitlab/arturbosch/detekt/api/RuleInstance;Lio/gitlab/arturbosch/detekt/api/Severity;)Lio/gitlab/arturbosch/detekt/api/Issue;" line="182"><counter type="INSTRUCTION" missed="6" covered="47"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRuleInstance" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;)Lio/gitlab/arturbosch/detekt/api/RuleInstance;" line="191"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSeverity" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;)Lio/gitlab/arturbosch/detekt/api/Severity;" line="216"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseToSeverity" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/api/Severity;" line="223"><counter type="INSTRUCTION" missed="17" covered="41"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAliases" desc="(Lio/gitlab/arturbosch/detekt/api/Rule;)Ljava/util/Set;" line="228"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="248"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="8" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/core/ProcessingSettingsKt" sourcefilename="ProcessingSettings.kt"><method name="extractUris" desc="(Lio/github/detekt/tooling/api/spec/ConfigSpec;)Ljava/util/Collection;" line="67"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractUris$initFileSystem" desc="(Lio/github/detekt/tooling/api/spec/ConfigSpec;Ljava/net/URI;)V" line="57"><counter type="INSTRUCTION" missed="17" covered="18"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="55"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Comparisons.kt"/><sourcefile name="TaskPool.kt"><line nr="12" mi="12" ci="0" mb="0" cb="0"/><line nr="14" mi="12" ci="0" mb="0" cb="0"/><line nr="16" mi="10" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="2"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="DelegatingResult.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtFileModifier.kt"><line nr="13" mi="4" ci="16" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="11" mb="0" cb="2"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="9" ci="4" mb="1" cb="1"/><line nr="31" mi="11" ci="5" mb="1" cb="1"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="15" mb="0" cb="0"/><line nr="40" mi="3" ci="3" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="106"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Loading.kt"><line nr="23" mi="0" ci="9" mb="0" cb="0"/><line nr="24" mi="0" ci="23" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FileProcessorLocator.kt"><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="2"/><line nr="17" mi="0" ci="14" mb="0" cb="2"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="2"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="1"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Junk.kt"><line nr="3" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProcessingSettings.kt"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="20" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="3" ci="16" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="149"/><counter type="LINE" missed="4" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DetektResult.kt"><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Analyzer.kt"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="1" cb="1"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="26" mb="0" cb="0"/><line nr="62" mi="8" ci="10" mb="0" cb="2"/><line nr="63" mi="2" ci="7" mb="1" cb="1"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="13" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="14" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="93" mi="0" ci="14" mb="0" cb="0"/><line nr="94" mi="0" ci="17" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="2" ci="10" mb="1" cb="1"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="104" mi="0" ci="13" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="16" mb="0" cb="0"/><line nr="114" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="16" mb="0" cb="4"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="18" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="14" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="15" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="19" mb="0" cb="0"/><line nr="146" mi="0" ci="10" mb="0" cb="0"/><line nr="147" mi="0" ci="15" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="17" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="9" ci="34" mb="1" cb="1"/><line nr="159" mi="9" ci="12" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="4"/><line nr="164" mi="2" ci="15" mb="1" cb="1"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="19" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="15" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="22" mb="0" cb="2"/><line nr="185" mi="2" ci="22" mb="1" cb="1"/><line nr="187" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="0" ci="14" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="3" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="3" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="3" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="3" ci="3" mb="0" cb="0"/><line nr="216" mi="1" ci="10" mb="2" cb="2"/><line nr="217" mi="2" ci="10" mb="1" cb="1"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="224" mi="4" ci="31" mb="2" cb="4"/><line nr="225" mi="13" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="1036"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="13" covered="109"/><counter type="COMPLEXITY" missed="21" covered="55"/><counter type="METHOD" missed="10" covered="45"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><counter type="INSTRUCTION" missed="266" covered="1516"/><counter type="BRANCH" missed="14" covered="48"/><counter type="LINE" missed="22" covered="184"/><counter type="COMPLEXITY" missed="32" covered="97"/><counter type="METHOD" missed="18" covered="80"/><counter type="CLASS" missed="1" covered="16"/></package><package name="io/gitlab/arturbosch/detekt/rules/empty/internal"><class name="io/gitlab/arturbosch/detekt/rules/empty/internal/ContainsCommentsKt" sourcefilename="ContainsComments.kt"><method name="hasCommentInside" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasCommentInside" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="10"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ContainsComments.kt"><line nr="8" mi="0" ci="10" mb="0" cb="2"/><line nr="10" mi="0" ci="14" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="io/gitlab/arturbosch/detekt/rules/empty"><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyDoWhileBlock" sourcefilename="EmptyDoWhileBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDoWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyWhileBlock" sourcefilename="EmptyWhileBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyCatchBlock" sourcefilename="EmptyCatchBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedExceptionNameRegex" desc="()Lkotlin/text/Regex;" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCatchSection" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;)V" line="30"><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowedExceptionNameRegex_delegate$lambda$0" desc="(Ljava/lang/String;)Lkotlin/text/Regex;" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="70"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyFunctionBlock" sourcefilename="EmptyFunctionBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverriddenFunctions" desc="()Z" line="27"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="31"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="34"><counter type="INSTRUCTION" missed="2" covered="54"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDefaultFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="51"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="157"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptySecondaryConstructor" sourcefilename="EmptySecondaryConstructor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSecondaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyCodeProvider" sourcefilename="EmptyCodeProvider.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="16"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyKotlinFile" sourcefilename="EmptyKotlinFile.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyClassBlock" sourcefilename="EmptyClassBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyTryBlock" sourcefilename="EmptyTryBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyIfBlock" sourcefilename="EmptyIfBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/empty/EmptyIfBlock;Lorg/jetbrains/kotlin/psi/KtIfExpression;)Lkotlin/Unit;" line="17"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyDefaultConstructor" sourcefilename="EmptyDefaultConstructor.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExpectedOrActualClass" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="34"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSuitableSignature" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPublicVisibility" desc="(Lorg/jetbrains/kotlin/lexer/KtModifierKeywordToken;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotCalled" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)Z" line="50"><counter type="INSTRUCTION" missed="1" covered="19"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="109"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyWhenBlock" sourcefilename="EmptyWhenBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyRule" sourcefilename="EmptyRule.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/String;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFindingIfBlockExprIsEmpty" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFindingIfBlockExprIsEmptyAndNotCommented" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkThenBodyForLoneSemicolon" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;Lkotlin/jvm/functions/Function1;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBlockExpr" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Z)V" line="43"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBlockExpr$default" desc="(Lio/gitlab/arturbosch/detekt/rules/empty/EmptyRule;Lorg/jetbrains/kotlin/psi/KtExpression;ZILjava/lang/Object;)V" line="42"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="147"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyFinallyBlock" sourcefilename="EmptyFinallyBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitFinallySection" desc="(Lorg/jetbrains/kotlin/psi/KtFinallySection;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyForBlock" sourcefilename="EmptyForBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitForExpression" desc="(Lorg/jetbrains/kotlin/psi/KtForExpression;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyElseBlock" sourcefilename="EmptyElseBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/empty/EmptyElseBlock;Lorg/jetbrains/kotlin/psi/KtIfExpression;)Lkotlin/Unit;" line="17"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/empty/EmptyInitBlock" sourcefilename="EmptyInitBlock.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassInitializer" desc="(Lorg/jetbrains/kotlin/psi/KtClassInitializer;)V" line="14"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="EmptyWhenBlock.kt"><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="1" cb="1"/><line nr="18" mi="0" ci="17" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyCodeProvider.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="36" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyInitBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="1" ci="8" mb="1" cb="1"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyIfBlock.kt"><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="14" mb="0" cb="2"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptySecondaryConstructor.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="1" ci="9" mb="1" cb="1"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyTryBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyKotlinFile.kt"><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="1" cb="1"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="19" mb="0" cb="0"/><line nr="22" mi="0" ci="12" mb="1" cb="5"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyRule.kt"><line nr="18" mi="0" ci="12" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="25" mb="0" cb="6"/><line nr="37" mi="0" ci="15" mb="1" cb="5"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="4"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="17" mb="0" cb="6"/><line nr="49" mi="0" ci="18" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="147"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyDefaultConstructor.kt"><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="4" mb="0" cb="2"/><line nr="26" mi="0" ci="17" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="1" cb="1"/><line nr="36" mi="0" ci="12" mb="0" cb="4"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="10" mb="0" cb="4"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="1" ci="11" mb="2" cb="2"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="109"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyDoWhileBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="1" ci="8" mb="1" cb="1"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyWhileBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="1" ci="8" mb="1" cb="1"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyClassBlock.kt"><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="10" mb="0" cb="2"/><line nr="23" mi="0" ci="4" mb="0" cb="2"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyForBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="1" ci="8" mb="1" cb="1"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyFunctionBlock.kt"><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="27" mb="0" cb="0"/><line nr="31" mi="0" ci="33" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="4"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="2"/><line nr="41" mi="2" ci="7" mb="1" cb="1"/><line nr="43" mi="0" ci="9" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="27" mb="0" cb="8"/><counter type="INSTRUCTION" missed="2" covered="157"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyElseBlock.kt"><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="14" mb="0" cb="2"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyFinallyBlock.kt"><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="1" ci="9" mb="1" cb="1"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyCatchBlock.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="30" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="2"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="1" ci="8" mb="1" cb="1"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="70"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="22" covered="1044"/><counter type="BRANCH" missed="15" covered="97"/><counter type="LINE" missed="2" covered="156"/><counter type="COMPLEXITY" missed="16" covered="93"/><counter type="METHOD" missed="1" covered="52"/><counter type="CLASS" missed="0" covered="17"/></package><package name="io/gitlab/arturbosch/detekt/rules"><class name="io/gitlab/arturbosch/detekt/rules/KtCallExpressionKt" sourcefilename="KtCallExpression.kt"><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="14"><counter type="INSTRUCTION" missed="4" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCallingWithNonNullCheckArgument" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/name/FqName;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="22"><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="90"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KotlinEnvironmentResolver$CloseableWrapper" sourcefilename="KotlinEnvironmentTestSetup.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapper" desc="()Lio/github/detekt/test/utils/KotlinCoreEnvironmentWrapper;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="close" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtAnnotatedExtensionsKt" sourcefilename="KtAnnotatedExtensions.kt"><method name="hasAnnotation" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;[Ljava/lang/String;)Z" line="10"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasAnnotation$lambda$1" desc="(Ljava/util/HashSet;Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Z" line="12"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtValueArgumentKt" sourcefilename="KtValueArgument.kt"><method name="isString" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="10"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmptyOrSingleStringArgument" desc="(Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="71"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/ThrowExtensionsKt" sourcefilename="ThrowExtensions.kt"><method name="isIllegalStateException" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="11"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIllegalArgumentException" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArguments" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Ljava/util/List;" line="20"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEnclosedByConditionalStatement" desc="(Lorg/jetbrains/kotlin/psi/KtThrowExpression;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/AllowedExceptionNamePatternKt" sourcefilename="AllowedExceptionNamePattern.kt"><method name="isAllowedExceptionName" desc="(Lorg/jetbrains/kotlin/psi/KtCatchClause;Lkotlin/text/Regex;)Z" line="6"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtBinaryExpressionKt" sourcefilename="KtBinaryExpression.kt"><method name="isNonNullCheck" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="7"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullCheck" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)Z" line="10"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="60"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/MethodSignatureKt" sourcefilename="MethodSignature.kt"><method name="isEqualsFunction" desc="(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" line="12"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHashCodeFunction" desc="(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isJvmFinalizeFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasCorrectEqualsParameter" desc="(Lorg/jetbrains/kotlin/psi/KtFunction;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMainFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMainSignature" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMainParameter" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="42"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMainInsideObject" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="47"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasImplicitUnitReturnType" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="53"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="254"/><counter type="BRANCH" missed="10" covered="64"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="10" covered="37"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KotlinEnvironmentResolver$Companion" sourcefilename="KotlinEnvironmentTestSetup.kt"><method name="additionalJavaSourcePaths" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/util/List;" line="46"><counter type="INSTRUCTION" missed="5" covered="51"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="51"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtModifierListKt" sourcefilename="KtModifierList.kt"><method name="isPublicNotOverridden" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="10"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublicNotOverridden" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;Z)Z" line="13"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAbstract" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="20"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOverride" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOpen" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExternal" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOperator" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConstant" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInternal" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLateinit" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInline" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isExpect" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isActual" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProtected" desc="(Lorg/jetbrains/kotlin/psi/KtModifierListOwner;)Z" line="42"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="107"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtLambdaExpressionKt" sourcefilename="KtLambdaExpression.kt"><method name="firstParameter" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;" line="12"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="implicitParameter" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;" line="15"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasImplicitParameterReference" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isImplicitParameterReference" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="34"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasImplicitParameterReference$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtLambdaExpression;Lorg/jetbrains/kotlin/descriptors/ValueParameterDescriptor;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="26"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="112"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KotlinEnvironmentResolver" sourcefilename="KotlinEnvironmentTestSetup.kt"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWrapper" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;)Lio/gitlab/arturbosch/detekt/rules/KotlinEnvironmentResolver$CloseableWrapper;" line="23"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setWrapper" desc="(Lorg/junit/jupiter/api/extension/ExtensionContext;Lio/gitlab/arturbosch/detekt/rules/KotlinEnvironmentResolver$CloseableWrapper;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportsParameter" desc="(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveParameter" desc="(Lorg/junit/jupiter/api/extension/ParameterContext;Lorg/junit/jupiter/api/extension/ExtensionContext;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="11" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="91"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/StringExtensionsKt" sourcefilename="StringExtensions.kt"><method name="lastArgumentMatchesUrl" desc="(Ljava/lang/String;)Z" line="6"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastArgumentMatchesMarkdownUrlSyntax" desc="(Ljava/lang/String;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastArgumentMatchesKotlinReferenceUrlSyntax" desc="(Ljava/lang/String;)Z" line="27"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/JunkKt" sourcefilename="Junk.kt"><method name="companionObject" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;" line="10"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="receiverIsUsed" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="13"><counter type="INSTRUCTION" missed="3" covered="45"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="57"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/ThrowExtensionsKt$special$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KotlinCoreEnvironmentTest" sourcefilename="KotlinEnvironmentTestSetup.kt"/><class name="io/gitlab/arturbosch/detekt/rules/TypeUtilsKt" sourcefilename="TypeUtils.kt"><method name="fqNameOrNull" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Lorg/jetbrains/kotlin/name/FqName;" line="20"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFlowAwareTypes" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/util/Set;" line="42"><counter type="INSTRUCTION" missed="15" covered="82"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDataFlowAwareTypes$default" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Lorg/jetbrains/kotlin/types/KotlinType;ILjava/lang/Object;)Ljava/util/Set;" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNullable" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/config/LanguageVersionSettings;Lorg/jetbrains/kotlin/resolve/calls/smartcasts/DataFlowValueFactory;Z)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="descriptor" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;" line="100"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="216"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/KtLambdaExpressionKt$hasImplicitParameterReference$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/ThrowExtensionsKt$isExceptionOfType$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/IsPartOfUtilsKt" sourcefilename="IsPartOfUtils.kt"><method name="isPartOfString" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Z" line="15"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KtValueArgument.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="1" cb="1"/><line nr="12" mi="0" ci="16" mb="2" cb="4"/><line nr="13" mi="0" ci="12" mb="1" cb="5"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="23" mb="0" cb="8"/><counter type="INSTRUCTION" missed="2" covered="71"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtAnnotatedExtensions.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="1" ci="4" mb="1" cb="1"/><line nr="14" mi="1" ci="13" mb="2" cb="2"/><line nr="15" mi="0" ci="7" mb="1" cb="1"/><line nr="17" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringExtensions.kt"><line nr="6" mi="0" ci="20" mb="0" cb="0"/><line nr="7" mi="0" ci="21" mb="0" cb="0"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="14" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodSignature.kt"><line nr="12" mi="0" ci="5" mb="0" cb="2"/><line nr="13" mi="0" ci="4" mb="0" cb="2"/><line nr="14" mi="0" ci="3" mb="0" cb="2"/><line nr="15" mi="0" ci="7" mb="0" cb="2"/><line nr="18" mi="0" ci="5" mb="0" cb="2"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="4" mb="0" cb="2"/><line nr="21" mi="0" ci="7" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="8" mb="0" cb="2"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="34" mi="0" ci="20" mb="1" cb="3"/><line nr="36" mi="0" ci="13" mb="0" cb="6"/><line nr="39" mi="0" ci="16" mb="0" cb="6"/><line nr="42" mi="0" ci="4" mb="0" cb="2"/><line nr="43" mi="2" ci="18" mb="1" cb="5"/><line nr="44" mi="2" ci="29" mb="2" cb="6"/><line nr="47" mi="0" ci="5" mb="1" cb="1"/><line nr="48" mi="0" ci="4" mb="1" cb="1"/><line nr="49" mi="2" ci="8" mb="1" cb="3"/><line nr="50" mi="0" ci="20" mb="0" cb="2"/><line nr="53" mi="2" ci="21" mb="3" cb="5"/><counter type="INSTRUCTION" missed="8" covered="254"/><counter type="BRANCH" missed="10" covered="64"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="10" covered="37"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IsPartOfUtils.kt"><line nr="15" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtLambdaExpression.kt"><line nr="12" mi="2" ci="16" mb="2" cb="2"/><line nr="15" mi="0" ci="12" mb="0" cb="4"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="8" mb="1" cb="1"/><line nr="36" mi="2" ci="15" mb="1" cb="3"/><counter type="INSTRUCTION" missed="4" covered="112"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtBinaryExpression.kt"><line nr="7" mi="4" ci="27" mb="2" cb="8"/><line nr="10" mi="4" ci="27" mb="2" cb="8"/><counter type="INSTRUCTION" missed="8" covered="60"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TypeUtils.kt"><line nr="20" mi="0" ci="10" mb="0" cb="2"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="9" ci="7" mb="2" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="2"/><line nr="46" mi="0" ci="14" mb="1" cb="1"/><line nr="47" mi="0" ci="3" mb="1" cb="1"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="1" cb="1"/><line nr="51" mi="0" ci="9" mb="1" cb="1"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="22" mb="0" cb="6"/><line nr="82" mi="0" ci="2" mb="0" cb="2"/><line nr="83" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="21" mb="2" cb="6"/><line nr="88" mi="0" ci="11" mb="0" cb="6"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="2" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="17" covered="216"/><counter type="BRANCH" missed="9" covered="33"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="9" covered="17"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KtCallExpression.kt"><line nr="11" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="2" ci="4" mb="1" cb="1"/><line nr="15" mi="2" ci="16" mb="2" cb="2"/><line nr="22" mi="2" ci="25" mb="1" cb="5"/><line nr="23" mi="0" ci="12" mb="1" cb="3"/><counter type="INSTRUCTION" missed="6" covered="90"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ThrowExtensions.kt"><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="4" ci="11" mb="2" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="2"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KotlinEnvironmentTestSetup.kt"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="1" cb="1"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="10" ci="2" mb="1" cb="1"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="2" ci="16" mb="2" cb="2"/><line nr="47" mi="3" ci="24" mb="1" cb="3"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="158"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Junk.kt"><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="13" mi="2" ci="16" mb="2" cb="2"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="1" cb="3"/><line nr="17" mi="0" ci="12" mb="1" cb="3"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="1" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="57"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AllowedExceptionNamePattern.kt"><line nr="6" mi="2" ci="18" mb="2" cb="4"/><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="276" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="KtModifierList.kt"><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="4"/><line nr="14" mi="2" ci="8" mb="1" cb="3"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="2"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="107"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="1426"/><counter type="BRANCH" missed="54" covered="192"/><counter type="LINE" missed="5" covered="148"/><counter type="COMPLEXITY" missed="55" covered="140"/><counter type="METHOD" missed="1" covered="71"/><counter type="CLASS" missed="0" covered="21"/></package><package name="io/github/detekt/parser"><class name="io/github/detekt/parser/KtCompiler" sourcefilename="KtCompiler.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnvironment" desc="()Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compile" desc="(Ljava/nio/file/Path;)Lorg/jetbrains/kotlin/psi/KtFile;" line="14"><counter type="INSTRUCTION" missed="9" covered="71"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="100"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/parser/BindingContextUtilsKt" sourcefilename="BindingContextUtils.kt"><method name="generateBindingContext" desc="(Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;Ljava/util/List;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/resolve/BindingContext;" line="21"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateBindingContext$lambda$0" desc="(Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;Ljava/util/List;)Lorg/jetbrains/kotlin/analyzer/AnalysisResult;" line="33"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/github/detekt/parser/DetektMessageCollector" sourcefilename="BindingContextUtils.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSeverity;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSeverity;Ljava/lang/String;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printIssuesCountIfAny" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report$lambda$0" desc="(Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSeverity;Ljava/lang/String;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/parser/DetektMessageRenderer" sourcefilename="BindingContextUtils.kt"><method name="getName" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/github/detekt/parser/KotlinEnvironmentUtilsKt" sourcefilename="KotlinEnvironmentUtils.kt"><method name="createKotlinCoreEnvironment" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lorg/jetbrains/kotlin/com/intellij/openapi/Disposable;Ljava/io/PrintStream;)Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="38"><counter type="INSTRUCTION" missed="21" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createKotlinCoreEnvironment$default" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lorg/jetbrains/kotlin/com/intellij/openapi/Disposable;Ljava/io/PrintStream;ILjava/lang/Object;)Lorg/jetbrains/kotlin/cli/jvm/compiler/KotlinCoreEnvironment;" line="33"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCompilerConfiguration" desc="(Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Ljava/io/PrintStream;)Lorg/jetbrains/kotlin/config/CompilerConfiguration;" line="76"><counter type="INSTRUCTION" missed="28" covered="170"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="35"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCompilerConfiguration$lambda$2$lambda$1" desc="(Ljava/io/File;)Z" line="78"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCompilerConfiguration$lambda$6$lambda$3" desc="(Ljava/io/File;)Z" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCompilerConfiguration$lambda$6$lambda$4" desc="(Ljava/io/File;)Z" line="84"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createCompilerConfiguration$lambda$6$lambda$5" desc="(Ljava/io/File;)Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="277"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="6" covered="50"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/parser/DetektPomModel" sourcefilename="DetektPomModel.kt"><method name="runTransaction" desc="(Lorg/jetbrains/kotlin/com/intellij/pom/PomTransaction;)V" line="18"><counter type="INSTRUCTION" missed="25" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getModelAspect" desc="(Ljava/lang/Class;)Lorg/jetbrains/kotlin/com/intellij/pom/PomModelAspect;" line="28"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KtCompiler.kt"><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="10" mi="0" ci="16" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="26" mb="0" cb="2"/><line nr="16" mi="9" ci="8" mb="1" cb="1"/><line nr="17" mi="0" ci="26" mb="0" cb="4"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="100"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektPomModel.kt"><line nr="18" mi="1" ci="7" mb="1" cb="1"/><line nr="20" mi="10" ci="4" mb="1" cb="1"/><line nr="21" mi="14" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="1" cb="1"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="38"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BindingContextUtils.kt"><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="1" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="7" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="17" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="88"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="20" covered="13"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="KotlinEnvironmentUtils.kt"><line nr="33" mi="0" ci="11" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="11" ci="9" mb="2" cb="2"/><line nr="53" mi="10" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="2" ci="12" mb="2" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="1" ci="17" mb="1" cb="3"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="6" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="2"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="277"/><counter type="BRANCH" missed="8" covered="12"/><counter type="LINE" missed="6" covered="50"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="171" covered="503"/><counter type="BRANCH" missed="12" covered="26"/><counter type="LINE" missed="28" covered="78"/><counter type="COMPLEXITY" missed="16" covered="24"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="2" covered="4"/></package><package name="io/github/detekt/report/xml"><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlCodepointValidator" sourcefilename="XmlEscape.kt"><method name="&lt;init&gt;" desc="()V" line="168"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="(I)Z" line="175"><counter type="INSTRUCTION" missed="30" covered="8"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="11"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/XmlOutputReport" sourcefilename="XmlOutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSeverityLabel" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBasePath" desc="(Ljava/nio/file/Path;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="34"><counter type="INSTRUCTION" missed="0" covered="209"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toXmlString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="271"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/XmlEscape" sourcefilename="XmlEscape.kt"><method name="escapeXml" desc="(Ljava/lang/String;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="103" covered="49"/><counter type="BRANCH" missed="24" covered="6"/><counter type="LINE" missed="29" covered="17"/><counter type="COMPLEXITY" missed="14" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="60"/><counter type="BRANCH" missed="24" covered="6"/><counter type="LINE" missed="29" covered="18"/><counter type="COMPLEXITY" missed="14" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer" sourcefilename="XmlEscape.kt"><method name="initializeXml10" desc="()Lio/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols;" line="195"><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="([BCB)V" line="276"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="181"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols$Reference" sourcefilename="XmlEscape.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="418"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCodepoint$detekt_report_xml" desc="()I" line="418"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCer$detekt_report_xml" desc="()[C" line="420"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols$Companion" sourcefilename="XmlEscape.kt"/><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols$References" sourcefilename="XmlEscape.kt"><method name="&lt;init&gt;" desc="()V" line="409"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferences$detekt_report_xml" desc="()Ljava/util/ArrayList;" line="411"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addReference" desc="(ILjava/lang/String;)V" line="414"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols" sourcefilename="XmlEscape.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlEscapeSymbols$References;[BLio/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlCodepointValidator;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="196"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCODEPOINT_VALIDATOR" desc="()Lio/github/detekt/report/xml/Xml10EscapeSymbolsInitializer$XmlCodepointValidator;" line="309"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getESCAPE_LEVELS" desc="()[B" line="316"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSORTED_CODEPOINTS" desc="()[I" line="325"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSORTED_CERS_BY_CODEPOINT" desc="()[[C" line="332"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSORTED_CERS" desc="()[[C" line="341"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSORTED_CODEPOINTS_BY_CER" desc="()[I" line="348"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="_init_$lambda$0" desc="([C[C)I" line="375"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_init_$lambda$1" desc="(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;)I" line="375"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="226"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="4" covered="34"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XmlOutputReport.kt"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="27" mi="3" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="16" mb="0" cb="2"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="20" mb="1" cb="3"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="17" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="31" mb="0" cb="0"/><line nr="45" mi="0" ci="17" mb="0" cb="0"/><line nr="46" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="14" mb="0" cb="0"/><line nr="48" mi="0" ci="15" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="13" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="271"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="XmlEscape.kt"><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="0" ci="6" mb="1" cb="1"/><line nr="75" mi="0" ci="2" mb="1" cb="1"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="2" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="2" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="2" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="2" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="1" cb="1"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="2" cb="0"/><line nr="156" mi="7" ci="0" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="13" ci="0" mb="6" cb="0"/><line nr="178" mi="0" ci="3" mb="1" cb="1"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="2" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="2" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="2"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="6" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="2"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="9" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="332" mi="3" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="7" mb="0" cb="0"/><line nr="363" mi="0" ci="17" mb="0" cb="2"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="7" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="24" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="7" mb="0" cb="2"/><line nr="382" mi="0" ci="5" mb="0" cb="0"/><line nr="383" mi="0" ci="8" mb="0" cb="0"/><line nr="384" mi="0" ci="7" mb="1" cb="1"/><line nr="385" mi="0" ci="6" mb="0" cb="2"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="7" mb="0" cb="2"/><line nr="394" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="7" mb="1" cb="1"/><line nr="397" mi="0" ci="7" mb="0" cb="2"/><line nr="398" mi="0" ci="12" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="9" mb="0" cb="0"/><line nr="414" mi="0" ci="9" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="9" mb="0" cb="0"/><line nr="420" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="145" covered="525"/><counter type="BRANCH" missed="40" covered="32"/><counter type="LINE" missed="41" covered="102"/><counter type="COMPLEXITY" missed="28" covered="29"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><counter type="INSTRUCTION" missed="148" covered="796"/><counter type="BRANCH" missed="41" covered="37"/><counter type="LINE" missed="41" covered="130"/><counter type="COMPLEXITY" missed="30" covered="39"/><counter type="METHOD" missed="5" covered="25"/><counter type="CLASS" missed="0" covered="7"/></package><package name="io/github/detekt/tooling/internal"><class name="io/github/detekt/tooling/internal/EmptyContainer" sourcefilename="EmptyContainer.kt"><method name="getIssues" desc="()Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNotifications" desc="()Ljava/util/Collection;" line="12"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMetrics" desc="()Ljava/util/Collection;" line="13"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;)Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putUserData" desc="(Lorg/jetbrains/kotlin/com/intellij/openapi/util/Key;Ljava/lang/Object;)Ljava/lang/Void;" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lio/gitlab/arturbosch/detekt/api/Notification;)Ljava/lang/Void;" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lio/gitlab/arturbosch/detekt/api/ProjectMetric;)Ljava/lang/Void;" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/internal/NotApiButProbablyUsedByUsers" sourcefilename="NotApiButProbablyUsedByUsers.kt"/><class name="io/github/detekt/tooling/internal/DefaultAnalysisResult" sourcefilename="DefaultAnalysisResult.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/github/detekt/tooling/api/DetektError;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;Lio/github/detekt/tooling/api/DetektError;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="7"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContainer" desc="()Lio/gitlab/arturbosch/detekt/api/Detektion;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getError" desc="()Lio/github/detekt/tooling/api/DetektError;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/tooling/internal/PluginsHolder" sourcefilename="PluginsHolder.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Ljava/lang/ClassLoader;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPaths" desc="()Ljava/util/Collection;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLoader" desc="()Ljava/lang/ClassLoader;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PluginsHolder.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="18" mb="0" cb="6"/><line nr="14" mi="0" ci="37" mb="0" cb="4"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultAnalysisResult.kt"><line nr="7" mi="7" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="2" ci="6" mb="0" cb="0"/><line nr="10" mi="1" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="18" mb="0" cb="6"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NotApiButProbablyUsedByUsers.kt"/><sourcefile name="EmptyContainer.kt"><line nr="11" mi="2" ci="2" mb="0" cb="0"/><line nr="12" mi="2" ci="3" mb="0" cb="0"/><line nr="13" mi="2" ci="4" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="13"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="44" covered="120"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="8" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><package name="io/gitlab/arturbosch/detekt/generator/collection"><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$DefaultValueSupport" sourcefilename="ConfigurationCollector.kt"><method name="getDefaultValue" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/util/Map;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="111"><counter type="INSTRUCTION" missed="21" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAndroidDefaultValue" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/util/Map;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="125"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDefaultValue" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/Map;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="138"><counter type="INSTRUCTION" missed="15" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDefaultValueIfLiteral" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="144"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue$lambda$0" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/util/List;)Lorg/jetbrains/kotlin/psi/KtValueArgument;" line="114"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAndroidDefaultValue$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/util/List;)Lorg/jetbrains/kotlin/psi/KtValueArgument;" line="128"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="147"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Active" sourcefilename="DefaultActivationStatus.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSince" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActive" desc="()Z" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DetektCollector" sourcefilename="DetektCollector.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItems" desc="()Ljava/util/List;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildRuleSetPages" desc="()Ljava/util/List;" line="19"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRuleByName" desc="(Ljava/util/List;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/generator/collection/Rule;" line="32"><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="115"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProviderVisitor" sourcefilename="RuleSetProviderCollector.kt"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainsRuleSetProvider" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContainsRuleSetProvider" desc="(Z)V" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRuleSetProvider" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider;" line="63"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSuperTypeList" desc="(Lorg/jetbrains/kotlin/psi/KtSuperTypeList;)V" line="75"><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="101"><counter type="INSTRUCTION" missed="54" covered="146"/><counter type="BRANCH" missed="21" covered="23"/><counter type="LINE" missed="3" covered="23"/><counter type="COMPLEXITY" missed="19" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="136"><counter type="INSTRUCTION" missed="12" covered="146"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$4$lambda$3" desc="(Lorg/jetbrains/kotlin/psi/KtNameReferenceExpression;)Z" line="142"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="490"/><counter type="BRANCH" missed="33" covered="61"/><counter type="LINE" missed="3" covered="67"/><counter type="COMPLEXITY" missed="32" covered="24"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DefaultValue" sourcefilename="DefaultValue.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/DefaultValuesKt" sourcefilename="DefaultValues.kt"><method name="createDefaultValueIfLiteral" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="6"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDefaultValueIfLiteral" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="9"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutUnderscores" desc="(Ljava/lang/String;)Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStringLiteral" desc="(Ljava/lang/String;)Z" line="17"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBooleanLiteral" desc="(Ljava/lang/String;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIntegerLiteral" desc="(Ljava/lang/String;)Z" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DocumentationCollector$Companion" sourcefilename="DocumentationCollector.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$addCompanion$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$StringListSupport" sourcefilename="ConfigurationCollector.kt"><method name="getListDefaultOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/Map;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="221"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListDeclarationOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtCallExpression;" line="226"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasListDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="229"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isListDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="232"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListDeclarationOrNull$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="226"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasListDeclaration$lambda$3" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="229"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="218"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="114"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Configuration" sourcefilename="Configuration.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;Ljava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultValue" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultAndroidValue" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeprecated" desc="()Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeprecated" desc="()Z" line="10"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$addCompanion$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$addCompanion$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$getConstantValue$$inlined$findDescendantOfType$default$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$getConstantValue$$inlined$findDescendantOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$getConstantValue$$inlined$findDescendantOfType$default$4" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$getConstantValue$$inlined$findDescendantOfType$default$3" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="276"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/AnnotationsKt" sourcefilename="Annotations.kt"><method name="isAnnotatedWith" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;Lkotlin/reflect/KClass;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAnnotation" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;Lkotlin/reflect/KClass;)Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;" line="11"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstAnnotationParameter" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;Lkotlin/reflect/KClass;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstAnnotationParameterOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;Lkotlin/reflect/KClass;)Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOfType" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;Lkotlin/reflect/KClass;)Z" line="22"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstParameterOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotationEntry;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withoutQuotes" desc="(Ljava/lang/String;)Ljava/lang/String;" line="31"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="145"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider" sourcefilename="RuleSetProviderCollector.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;Ljava/util/List;Ljava/util/List;)V" line="22"><counter type="INSTRUCTION" missed="9" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultActivationStatus" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/List;" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfiguration" desc="()Ljava/util/List;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="76"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$ConfigWithAndroidVariantsSupport" sourcefilename="ConfigurationCollector.kt"><method name="isAndroidVariantConfigDelegate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="181"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$ConfigWithFallbackSupport" sourcefilename="ConfigurationCollector.kt"><method name="isFallbackConfigDelegate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="152"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUsingInvalidFallbackReference" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/util/List;)V" line="155"><counter type="INSTRUCTION" missed="14" covered="50"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getReferenceIdentifierOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Ljava/lang/String;" line="170"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUsingInvalidFallbackReference$lambda$0" desc="(Ljava/util/List;)Lorg/jetbrains/kotlin/psi/KtValueArgument;" line="157"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkUsingInvalidFallbackReference$lambda$2" desc="(Ljava/lang/String;Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="120"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/StringDefault" sourcefilename="DefaultValue.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsYaml" desc="(Ljava/lang/String;Lio/github/detekt/utils/YamlNode;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsMarkdownCode" desc="()Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainValue" desc="()Ljava/lang/String;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleVisitor$Companion" sourcefilename="RuleVisitor.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleVisitor" sourcefilename="RuleVisitor.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContainsRule" desc="()Z" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRule" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/Rule;" line="32"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSuperTypeList" desc="(Lorg/jetbrains/kotlin/psi/KtSuperTypeList;)V" line="54"><counter type="INSTRUCTION" missed="3" covered="83"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="71"><counter type="INSTRUCTION" missed="13" covered="128"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractAliases" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="114"><counter type="INSTRUCTION" missed="1" covered="37"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSuperTypeList$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtSuperTypeListEntry;)Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="123"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="432"/><counter type="BRANCH" missed="13" covered="33"/><counter type="LINE" missed="1" covered="69"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$Companion" sourcefilename="ConfigurationCollector.kt"><method name="isInitializedWithConfigDelegate" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="245"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invalidDocumentation" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Lkotlin/jvm/functions/Function0;)Ljava/lang/Void;" line="248"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValueArgument" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/kotlin/psi/KtValueArgument;" line="254"><counter type="INSTRUCTION" missed="6" covered="60"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="98"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Inactive" sourcefilename="DefaultActivationStatus.kt"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActive" desc="()Z" line="10"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProviderCollectorKt" sourcefilename="RuleSetProviderCollector.kt"><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus" sourcefilename="DefaultActivationStatus.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProviderVisitor$Companion" sourcefilename="RuleSetProviderCollector.kt"><method name="toDefaultValue" desc="(Ljava/lang/String;Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="160"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleCollector" sourcefilename="RuleCollector.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItems" desc="()Ljava/util/List;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProviderVisitor$visitCallExpression$lambda$4$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Rule" sourcefilename="Rule.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;Ljava/util/List;Ljava/lang/String;Ljava/util/List;ZZLjava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;Ljava/util/List;Ljava/lang/String;Ljava/util/List;ZZLjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonCompliantCodeExample" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompliantCodeExample" desc="()Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultActivationStatus" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/DefaultActivationStatus;" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAliases" desc="()Ljava/util/List;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAliases" desc="(Ljava/util/List;)V" line="9"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParent" desc="()Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigurations" desc="()Ljava/util/List;" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAutoCorrect" desc="()Z" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRequiresTypeResolution" desc="()Z" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeprecationMessage" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDeprecated" desc="()Z" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="131"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetPage" sourcefilename="RuleSetPage.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider;Ljava/util/List;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSet" desc="()Lio/gitlab/arturbosch/detekt/generator/collection/RuleSetProvider;" line="4"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRules" desc="()Ljava/util/List;" line="5"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DetektCollector$buildRuleSetPages$lambda$2$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$StringListSupport$getListDeclarationOrNull$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/StringListDefault" sourcefilename="DefaultValue.kt"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsYaml" desc="(Ljava/lang/String;Lio/github/detekt/utils/YamlNode;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsMarkdownCode" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainValue" desc="()Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="46"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Collector" sourcefilename="Collector.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/ValuesWithReasonDefault" sourcefilename="DefaultValue.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainValue" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printAsYaml" desc="(Ljava/lang/String;Lio/github/detekt/utils/YamlNode;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsMarkdownCode" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="69"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/IntegerDefault" sourcefilename="DefaultValue.kt"><method name="&lt;init&gt;" desc="(I)V" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainValue" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printAsYaml" desc="(Ljava/lang/String;Lio/github/detekt/utils/YamlNode;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsMarkdownCode" desc="()Ljava/lang/String;" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$ValuesWithReasonSupport$getValuesWithReasonDeclarationOrNull$$inlined$findDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$ValuesWithReasonSupport" sourcefilename="ConfigurationCollector.kt"><method name="getValuesWithReasonDefaultOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="188"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesWithReasonDeclarationOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Lorg/jetbrains/kotlin/psi/KtCallExpression;" line="194"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValuesWithReasonDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="197"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasValuesWithReasonDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Z" line="200"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toValueWithReason" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Lio/gitlab/arturbosch/detekt/api/ValueWithReason;" line="203"><counter type="INSTRUCTION" missed="32" covered="48"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValuesWithReasonDeclarationOrNull$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="194"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasValuesWithReasonDeclaration$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="200"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="130"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="3" covered="13"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$StringListSupport$hasListDeclaration$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector$ValuesWithReasonSupport$hasValuesWithReasonDeclaration$$inlined$anyDescendantOfType$1" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;Lkotlin/jvm/internal/Ref$ObjectRef;)V"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/ConfigurationCollector" sourcefilename="ConfigurationCollector.kt"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConfigurations" desc="()Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProperty" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addCompanion" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveConstantOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Lkotlin/Pair;" line="55"><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstantValue" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="64"><counter type="INSTRUCTION" missed="26" covered="48"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseConfigurationAnnotation" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Lio/gitlab/arturbosch/detekt/generator/collection/Configuration;" line="77"><counter type="INSTRUCTION" missed="11" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConfiguration" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Lio/gitlab/arturbosch/detekt/generator/collection/Configuration;" line="86"><counter type="INSTRUCTION" missed="20" covered="51"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConstantValue$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstantValue$lambda$3" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseConfigurationAnnotation$lambda$4" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toConfiguration$lambda$5" desc="(Lorg/jetbrains/kotlin/psi/KtProperty;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="237"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="100" covered="246"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="2" covered="46"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/DefaultValue$Companion" sourcefilename="DefaultValue.kt"><method name="of" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Z)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="17"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="18"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/List;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lio/gitlab/arturbosch/detekt/api/ValuesWithReason;)Lio/gitlab/arturbosch/detekt/generator/collection/DefaultValue;" line="20"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/Active$Companion" sourcefilename="DefaultActivationStatus.kt"/><class name="io/gitlab/arturbosch/detekt/generator/collection/DocumentationCollector" sourcefilename="DocumentationCollector.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDescription" desc="()Ljava/lang/String;" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDescription" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCompliant" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNonCompliant" desc="()Ljava/lang/String;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClass" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="22"><counter type="INSTRUCTION" missed="4" covered="51"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractRuleDocumentation" desc="(Ljava/lang/String;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractNonCompliantDocumentation" desc="(Ljava/lang/String;I)V" line="48"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractCompliantDocumentation" desc="(Ljava/lang/String;I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="trimStartingLineBreaks" desc="(Ljava/lang/String;)Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="284"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/KDocTagsKt" sourcefilename="KDocTags.kt"><method name="kDocSection" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Lorg/jetbrains/kotlin/kdoc/psi/impl/KDocSection;" line="6"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasKDocTag" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;Ljava/lang/String;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasConfigurationKDocTag" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)Z" line="10"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/BooleanDefault" sourcefilename="DefaultValue.kt"><method name="&lt;init&gt;" desc="(Z)V" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPlainValue" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printAsYaml" desc="(Ljava/lang/String;Lio/github/detekt/utils/YamlNode;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printAsMarkdownCode" desc="()Ljava/lang/String;" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/generator/collection/RuleSetProviderCollector" sourcefilename="RuleSetProviderCollector.kt"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getItems" desc="()Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Configuration.kt"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="6" mb="0" cb="0"/><line nr="5" mi="0" ci="6" mb="0" cb="0"/><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleCollector.kt"><line nr="5" mi="0" ci="6" mb="0" cb="0"/><line nr="6" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="2"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KDocTags.kt"><line nr="6" mi="0" ci="9" mb="0" cb="2"/><line nr="8" mi="0" ci="14" mb="0" cb="4"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigurationCollector.kt"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="2" ci="3" mb="1" cb="1"/><line nr="57" mi="9" ci="5" mb="1" cb="1"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="2" ci="9" mb="1" cb="1"/><line nr="64" mi="0" ci="4" mb="0" cb="2"/><line nr="65" mi="1" ci="7" mb="1" cb="1"/><line nr="66" mi="23" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="2"/><line nr="69" mi="1" ci="8" mb="1" cb="1"/><line nr="70" mi="23" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="1" cb="3"/><line nr="74" mi="2" ci="11" mb="1" cb="1"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="2"/><line nr="79" mi="11" ci="4" mb="1" cb="1"/><line nr="80" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="11" ci="16" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="9" ci="5" mb="1" cb="1"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="1" ci="8" mb="1" cb="1"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="2"/><line nr="116" mi="0" ci="9" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="23" ci="0" mb="0" cb="0"/><line nr="121" mi="9" ci="8" mb="1" cb="1"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="14" mb="1" cb="3"/><line nr="138" mi="3" ci="12" mb="1" cb="7"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="12" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="2" ci="15" mb="3" cb="3"/><line nr="155" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="1" ci="4" mb="1" cb="1"/><line nr="160" mi="1" ci="24" mb="2" cb="2"/><line nr="161" mi="0" ci="6" mb="1" cb="3"/><line nr="162" mi="12" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="15" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="1" ci="13" mb="1" cb="1"/><line nr="171" mi="1" ci="4" mb="1" cb="1"/><line nr="172" mi="0" ci="4" mb="1" cb="1"/><line nr="173" mi="0" ci="5" mb="1" cb="1"/><line nr="181" mi="2" ci="15" mb="3" cb="3"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="2"/><line nr="190" mi="0" ci="10" mb="1" cb="1"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="12" mb="0" cb="0"/><line nr="197" mi="2" ci="10" mb="1" cb="1"/><line nr="200" mi="0" ci="12" mb="0" cb="0"/><line nr="203" mi="1" ci="15" mb="1" cb="1"/><line nr="204" mi="3" ci="9" mb="1" cb="1"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="3" ci="10" mb="3" cb="3"/><line nr="207" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="3" ci="10" mb="3" cb="3"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="14" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="15" mb="0" cb="0"/><line nr="221" mi="0" ci="14" mb="1" cb="3"/><line nr="222" mi="0" ci="19" mb="1" cb="3"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="12" mb="0" cb="0"/><line nr="229" mi="0" ci="12" mb="0" cb="0"/><line nr="232" mi="2" ci="11" mb="1" cb="1"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="12" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="18" mb="2" cb="4"/><line nr="248" mi="0" ci="20" mb="0" cb="0"/><line nr="254" mi="6" ci="16" mb="3" cb="3"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="0" ci="38" mb="0" cb="8"/><counter type="INSTRUCTION" missed="213" covered="873"/><counter type="BRANCH" missed="45" covered="89"/><counter type="LINE" missed="7" covered="107"/><counter type="COMPLEXITY" missed="48" covered="62"/><counter type="METHOD" missed="3" covered="40"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="Collector.kt"/><sourcefile name="Comparisons.kt"/><sourcefile name="RuleVisitor.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="4"/><line nr="33" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="1" cb="1"/><line nr="56" mi="2" ci="11" mb="2" cb="2"/><line nr="57" mi="0" ci="9" mb="1" cb="1"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="2" ci="6" mb="1" cb="1"/><line nr="62" mi="0" ci="12" mb="3" cb="3"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="17" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="13" ci="12" mb="2" cb="2"/><line nr="80" mi="0" ci="22" mb="1" cb="7"/><line nr="81" mi="0" ci="15" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="12" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="1" ci="4" mb="1" cb="1"/><line nr="118" mi="0" ci="5" mb="1" cb="1"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="12" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="432"/><counter type="BRANCH" missed="13" covered="33"/><counter type="LINE" missed="1" covered="69"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="1" cb="1"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="12"/></sourcefile><sourcefile name="Annotations.kt"><line nr="8" mi="0" ci="15" mb="0" cb="0"/><line nr="11" mi="0" ci="15" mb="0" cb="0"/><line nr="14" mi="9" ci="6" mb="1" cb="1"/><line nr="17" mi="0" ci="8" mb="0" cb="0"/><line nr="18" mi="0" ci="10" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="2"/><line nr="22" mi="2" ci="10" mb="1" cb="1"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="1" ci="4" mb="1" cb="1"/><line nr="28" mi="0" ci="4" mb="1" cb="1"/><line nr="29" mi="0" ci="5" mb="1" cb="1"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="145"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RuleSetPage.kt"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="6" mb="0" cb="0"/><line nr="5" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektCollector.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="5" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="9" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="6" ci="25" mb="3" cb="3"/><line nr="33" mi="10" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="115"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultValues.kt"><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="2"/><line nr="11" mi="0" ci="8" mb="0" cb="2"/><line nr="12" mi="0" ci="9" mb="0" cb="2"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="22" mb="1" cb="5"/><line nr="18" mi="0" ci="14" mb="0" cb="4"/><line nr="19" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Rule.kt"><line nr="3" mi="0" ci="28" mb="0" cb="0"/><line nr="4" mi="0" ci="6" mb="0" cb="0"/><line nr="5" mi="0" ci="6" mb="0" cb="0"/><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="4" ci="6" mb="0" cb="0"/><line nr="10" mi="3" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="10" covered="131"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DefaultActivationStatus.kt"><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="8" mb="0" cb="2"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RuleSetProviderCollector.kt"><line nr="22" mi="0" ci="16" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="9" ci="8" mb="2" cb="2"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="4" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="4"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="4"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="3" ci="11" mb="2" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="2" ci="2" mb="1" cb="1"/><line nr="80" mi="0" ci="13" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="22" mb="2" cb="6"/><line nr="87" mi="0" ci="6" mb="0" cb="2"/><line nr="88" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="12" mb="2" cb="4"/><line nr="105" mi="1" ci="10" mb="1" cb="1"/><line nr="106" mi="4" ci="21" mb="3" cb="3"/><line nr="107" mi="0" ci="5" mb="1" cb="1"/><line nr="108" mi="0" ci="4" mb="1" cb="1"/><line nr="109" mi="2" ci="20" mb="5" cb="5"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="14" ci="0" mb="4" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="12" ci="23" mb="3" cb="3"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="9" ci="4" mb="1" cb="1"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="2" ci="9" mb="1" cb="3"/><line nr="139" mi="0" ci="11" mb="0" cb="2"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="17" mb="0" cb="4"/><line nr="142" mi="0" ci="19" mb="0" cb="2"/><line nr="144" mi="0" ci="15" mb="0" cb="0"/><line nr="146" mi="1" ci="18" mb="1" cb="1"/><line nr="147" mi="1" ci="4" mb="1" cb="1"/><line nr="148" mi="0" ci="7" mb="1" cb="1"/><line nr="149" mi="6" ci="10" mb="1" cb="1"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="0" cb="0"/><line nr="152" mi="2" ci="2" mb="1" cb="1"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="12" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="642"/><counter type="BRANCH" missed="35" covered="67"/><counter type="LINE" missed="3" covered="92"/><counter type="COMPLEXITY" missed="34" covered="38"/><counter type="METHOD" missed="1" covered="20"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="DefaultValue.kt"><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="22" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="27" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="243"/><counter type="LINE" missed="4" covered="30"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="DocumentationCollector.kt"><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="4" ci="12" mb="2" cb="2"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="1" cb="1"/><line nr="26" mi="0" ci="9" mb="1" cb="1"/><line nr="27" mi="0" ci="7" mb="1" cb="1"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="14" mb="2" cb="4"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="284"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="378" covered="3265"/><counter type="BRANCH" missed="111" covered="251"/><counter type="LINE" missed="16" covered="442"/><counter type="COMPLEXITY" missed="119" covered="247"/><counter type="METHOD" missed="10" covered="175"/><counter type="CLASS" missed="0" covered="42"/></package><package name="io/github/detekt/utils"><class name="io/github/detekt/utils/ResourcesKt" sourcefilename="Resources.kt"><method name="openSafeStream" desc="(Ljava/net/URL;)Ljava/io/InputStream;" line="7"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSafeResourceAsStream" desc="(Ljava/lang/Class;Ljava/lang/String;)Ljava/io/InputStream;" line="18"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSafeResourceAsStream" desc="(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/io/InputStream;" line="20"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/YamlNode" sourcefilename="Yaml.kt"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndent" desc="()I" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContent" desc="(Ljava/lang/String;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/YamlKt$map$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/github/detekt/utils/PathFilters$Companion" sourcefilename="PathFilters.kt"><method name="of" desc="(Ljava/util/List;Ljava/util/List;)Lio/github/detekt/utils/PathFilters;" line="33"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parse" desc="(Ljava/util/List;)Ljava/util/Set;" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/PathFilters" sourcefilename="PathFilters.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Set;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored" desc="(Ljava/nio/file/Path;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored$isIncluded" desc="(Lio/github/detekt/utils/PathFilters;Ljava/nio/file/Path;)Z" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored$isExcluded" desc="(Lio/github/detekt/utils/PathFilters;Ljava/nio/file/Path;)Z" line="26"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/MarkdownList" sourcefilename="Markdown.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContent" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/YML" sourcefilename="Yaml.kt"><method name="&lt;init&gt;" desc="(ILjava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndent" desc="()I" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getContent" desc="()Ljava/lang/String;" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContent" desc="(Ljava/lang/String;)V" line="3"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyLine" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndent" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="82"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/Markdown" sourcefilename="Markdown.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContent" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/MarkdownContent" sourcefilename="Markdown.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContent" desc="(Ljava/lang/String;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/PathMatchersKt" sourcefilename="PathMatchers.kt"><method name="pathMatcher" desc="(Ljava/lang/String;)Ljava/nio/file/PathMatcher;" line="13"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/YamlKt" sourcefilename="Yaml.kt"><method name="yaml" desc="(Lkotlin/jvm/functions/Function1;)Ljava/lang/String;" line="22"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="node" desc="(Lio/github/detekt/utils/YamlNode;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keyValue" desc="(Lio/github/detekt/utils/YamlNode;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V" line="34"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keyValue$default" desc="(Lio/github/detekt/utils/YamlNode;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="list" desc="(Lio/github/detekt/utils/YamlNode;Ljava/lang/String;Ljava/util/List;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOfMaps" desc="(Lio/github/detekt/utils/YamlNode;Ljava/lang/String;Ljava/util/List;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="map" desc="(Lio/github/detekt/utils/YamlNode;Ljava/util/Map;)V" line="65"><counter type="INSTRUCTION" missed="7" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yaml" desc="(Lio/github/detekt/utils/YamlNode;Lkotlin/jvm/functions/Function0;)V" line="78"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureQuoted" desc="(Ljava/lang/String;)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quoted" desc="(Ljava/lang/String;)Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="listOfMaps$lambda$5" desc="(Ljava/util/List;Lio/github/detekt/utils/YamlNode;)Lkotlin/Unit;" line="59"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="163" covered="235"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="11" covered="37"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/utils/MarkdownKt" sourcefilename="Markdown.kt"><method name="markdown" desc="(Lkotlin/jvm/functions/Function1;)Ljava/lang/String;" line="20"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="markdown" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="25"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="paragraph" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="26"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bold" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossOut" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="h1" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="31"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="h2" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="32"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="h3" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="33"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="h4" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="34"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orderedList" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)V" line="37"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="code" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function0;)Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="codeBlock" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="codeBlock$default" desc="(Lio/github/detekt/utils/MarkdownContent;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyLine" desc="(Lio/github/detekt/utils/MarkdownContent;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Lio/github/detekt/utils/MarkdownContent;Lkotlin/jvm/functions/Function1;)V" line="50"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="item" desc="(Lio/github/detekt/utils/MarkdownList;Lkotlin/jvm/functions/Function0;)V" line="57"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="description" desc="(Lio/github/detekt/utils/MarkdownList;Lkotlin/jvm/functions/Function0;)V" line="58"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="396" covered="7"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="24" covered="1"/><counter type="COMPLEXITY" missed="19" covered="1"/><counter type="METHOD" missed="16" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Comparisons.kt"/><sourcefile name="PathFilters.kt"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="15" mb="0" cb="2"/><line nr="26" mi="0" ci="15" mb="0" cb="2"/><line nr="28" mi="0" ci="12" mb="0" cb="4"/><line nr="33" mi="0" ci="6" mb="0" cb="4"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Resources.kt"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="2" ci="8" mb="1" cb="1"/><line nr="20" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Yaml.kt"><line nr="3" mi="10" ci="25" mb="0" cb="0"/><line nr="5" mi="0" ci="11" mb="0" cb="4"/><line nr="6" mi="0" ci="10" mb="0" cb="0"/><line nr="8" mi="0" ci="14" mb="0" cb="0"/><line nr="10" mi="0" ci="1" mb="0" cb="0"/><line nr="13" mi="0" ci="11" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="38" mb="0" cb="0"/><line nr="22" mi="11" ci="0" mb="0" cb="0"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="2" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="16" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="16" ci="0" mb="0" cb="0"/><line nr="34" mi="24" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="4" cb="0"/><line nr="36" mi="26" ci="0" mb="0" cb="0"/><line nr="38" mi="32" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="7" ci="17" mb="2" cb="2"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="7" mb="1" cb="1"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="86" mi="0" ci="9" mb="1" cb="1"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="176" covered="361"/><counter type="BRANCH" missed="8" covered="24"/><counter type="LINE" missed="11" covered="46"/><counter type="COMPLEXITY" missed="13" covered="27"/><counter type="METHOD" missed="7" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="PathMatchers.kt"><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="2"/><line nr="15" mi="0" ci="9" mb="0" cb="2"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Markdown.kt"><line nr="5" mi="7" ci="16" mb="0" cb="0"/><line nr="7" mi="0" ci="9" mb="0" cb="4"/><line nr="8" mi="0" ci="11" mb="0" cb="4"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="11" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="25" mb="0" cb="0"/><line nr="17" mi="0" ci="25" mb="0" cb="0"/><line nr="20" mi="10" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="26" mi="13" ci="0" mb="0" cb="0"/><line nr="28" mi="13" ci="0" mb="0" cb="0"/><line nr="29" mi="13" ci="0" mb="0" cb="0"/><line nr="31" mi="15" ci="0" mb="0" cb="0"/><line nr="32" mi="15" ci="0" mb="0" cb="0"/><line nr="33" mi="15" ci="0" mb="0" cb="0"/><line nr="34" mi="15" ci="0" mb="0" cb="0"/><line nr="37" mi="12" ci="0" mb="2" cb="0"/><line nr="38" mi="19" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="13" ci="0" mb="0" cb="0"/><line nr="45" mi="50" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="10" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="4" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="15" ci="0" mb="0" cb="0"/><line nr="58" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="406" covered="122"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="24" covered="9"/><counter type="COMPLEXITY" missed="21" covered="16"/><counter type="METHOD" missed="18" covered="12"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="600" covered="650"/><counter type="BRANCH" missed="17" covered="51"/><counter type="LINE" missed="36" covered="79"/><counter type="COMPLEXITY" missed="37" covered="61"/><counter type="METHOD" missed="26" covered="38"/><counter type="CLASS" missed="0" covered="11"/></package><package name="io/github/detekt/psi"><class name="io/github/detekt/psi/FunctionMatcher$WithParameters" sourcefilename="FunctionMatcher.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Z" line="35"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="46"><counter type="INSTRUCTION" missed="6" covered="70"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="56"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="160"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/AnnotationExcluderKt" sourcefilename="AnnotationExcluder.kt"><method name="getPackage" desc="(Lorg/jetbrains/kotlin/name/FqName;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackage" desc="(Ljava/lang/String;)Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fqNameOrNull" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;Lorg/jetbrains/kotlin/resolve/BindingContext;)Lorg/jetbrains/kotlin/name/FqName;" line="74"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Iterable;Ljava/lang/String;)Z" line="77"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackage$lambda$0" desc="(Ljava/lang/String;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="68"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/KtFilesKt" sourcefilename="KtFiles.kt"><method name="absolutePath" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiFile;)Ljava/nio/file/Path;" line="8"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absolutePath" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/nio/file/Path;" line="11"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/FunctionMatcherKt" sourcefilename="FunctionMatcher.kt"><method name="getSignatureParameter" desc="(Lorg/jetbrains/kotlin/types/KotlinType;)Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitParams" desc="(Ljava/lang/String;)Ljava/util/List;" line="90"><counter type="INSTRUCTION" missed="9" covered="83"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeIfLambda" desc="(Ljava/lang/String;)Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitLambda" desc="(Ljava/lang/String;)Lkotlin/Pair;" line="119"><counter type="INSTRUCTION" missed="8" covered="92"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="148"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="218"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/FunctionMatcher$Companion" sourcefilename="FunctionMatcher.kt"><method name="fromFunctionSignature" desc="(Ljava/lang/String;)Lio/github/detekt/psi/FunctionMatcher;" line="62"><counter type="INSTRUCTION" missed="15" covered="73"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="73"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/FunctionMatcher" sourcefilename="FunctionMatcher.kt"/><class name="io/github/detekt/psi/FunctionMatcher$NameOnly" sourcefilename="FunctionMatcher.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="match" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/AnnotationExcluder" sourcefilename="AnnotationExcluder.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldExclude" desc="(Ljava/util/List;)Z" line="29"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isExcluded" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="32"><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="168"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AnnotationExcluder.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="2" ci="18" mb="1" cb="1"/><line nr="32" mi="0" ci="10" mb="0" cb="2"/><line nr="33" mi="0" ci="3" mb="0" cb="2"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="35" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="14" mb="0" cb="0"/><line nr="40" mi="0" ci="14" mb="0" cb="0"/><line nr="41" mi="0" ci="14" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="24" mb="0" cb="4"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="2" ci="11" mb="1" cb="1"/><line nr="77" mi="2" ci="2" mb="1" cb="1"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="236"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FunctionMatcher.kt"><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="2"/><line nr="25" mi="0" ci="16" mb="0" cb="4"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="2"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="2" ci="4" mb="1" cb="1"/><line nr="47" mi="2" ci="18" mb="1" cb="5"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="21" mb="0" cb="0"/><line nr="51" mi="2" ci="15" mb="1" cb="1"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="25" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="14" mb="0" cb="0"/><line nr="66" mi="0" ci="20" mb="1" cb="3"/><line nr="67" mi="0" ci="13" mb="1" cb="3"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="14" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="2" ci="6" mb="1" cb="1"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="4"/><line nr="95" mi="0" ci="11" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="9" ci="5" mb="2" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="4"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="2"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="2"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="8" ci="10" mb="1" cb="1"/><line nr="145" mi="0" ci="23" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="503"/><counter type="BRANCH" missed="9" covered="53"/><counter type="LINE" missed="2" covered="72"/><counter type="COMPLEXITY" missed="9" covered="36"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="KtFiles.kt"><line nr="8" mi="0" ci="13" mb="0" cb="0"/><line nr="11" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="46" covered="767"/><counter type="BRANCH" missed="12" covered="64"/><counter type="LINE" missed="2" covered="99"/><counter type="COMPLEXITY" missed="12" covered="50"/><counter type="METHOD" missed="0" covered="24"/><counter type="CLASS" missed="0" covered="7"/></package><package name="io/github/detekt/compiler/plugin/internal"><class name="io/github/detekt/compiler/plugin/internal/MessageCollectorExtensionsKt" sourcefilename="MessageCollectorExtensions.kt"><method name="info" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warn" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="warn$default" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;Lorg/jetbrains/kotlin/cli/common/messages/CompilerMessageSourceLocation;ILjava/lang/Object;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reportIssues" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderAsCompilerWarningMessage" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Lkotlin/Pair;" line="31"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="119"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/internal/AppendableAdapter" sourcefilename="AppendableAdapter.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V" line="3"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLogging" desc="()Lkotlin/jvm/functions/Function1;" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" line="5"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="append" desc="(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" line="8"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="(C)Ljava/lang/Appendable;" line="10"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="40"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/internal/DetektService" sourcefilename="DetektService.kt"><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lio/github/detekt/tooling/api/spec/ProcessingSpec;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="analyze" desc="(Ljava/util/Collection;Lorg/jetbrains/kotlin/resolve/BindingContext;)V" line="19"><counter type="INSTRUCTION" missed="21" covered="86"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="101"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/compiler/plugin/internal/CompilerConfigToProcessingSpecKt" sourcefilename="CompilerConfigToProcessingSpec.kt"><method name="toSpec" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;)Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="10"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$0" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/ConfigSpecBuilder;)Lkotlin/Unit;" line="12"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$1" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/BaselineSpecBuilder;)Lkotlin/Unit;" line="16"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$4$lambda$2" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;)Lkotlin/Unit;" line="20"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$4$lambda$3" desc="(Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Ljava/lang/String;)Lkotlin/Unit;" line="21"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSpec$lambda$11$lambda$4" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lio/github/detekt/tooling/dsl/LoggingSpecBuilder;)Lkotlin/Unit;" line="19"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$5" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/ProjectSpecBuilder;)Lkotlin/Unit;" line="24"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$8$lambda$7$lambda$6" desc="(Ljava/util/Map$Entry;)Lkotlin/Pair;" line="28"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toSpec$lambda$11$lambda$8" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/ReportsSpecBuilder;)Lkotlin/Unit;" line="27"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$9" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/RulesSpecBuilder;)Lkotlin/Unit;" line="32"><counter type="INSTRUCTION" missed="3" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11$lambda$10" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lio/github/detekt/tooling/dsl/ExecutionSpecBuilder;)Lkotlin/Unit;" line="40"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toSpec$lambda$11" desc="(Lorg/jetbrains/kotlin/config/CompilerConfiguration;Lorg/jetbrains/kotlin/cli/common/messages/MessageCollector;Lio/github/detekt/tooling/dsl/ProcessingSpecBuilder;)Lkotlin/Unit;" line="11"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="243"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AppendableAdapter.kt"><line nr="3" mi="3" ci="6" mb="0" cb="0"/><line nr="5" mi="0" ci="14" mb="0" cb="0"/><line nr="8" mi="17" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="40"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompilerConfigToProcessingSpec.kt"><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="10" mb="0" cb="0"/><line nr="20" mi="0" ci="13" mb="0" cb="0"/><line nr="21" mi="5" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="10" mb="0" cb="0"/><line nr="28" mi="10" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="11" mb="1" cb="1"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="243"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektService.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="12" mb="0" cb="0"/><line nr="22" mi="2" ci="10" mb="1" cb="1"/><line nr="23" mi="0" ci="16" mb="0" cb="2"/><line nr="24" mi="4" ci="3" mb="0" cb="0"/><line nr="25" mi="2" ci="3" mb="1" cb="1"/><line nr="26" mi="0" ci="16" mb="0" cb="2"/><line nr="27" mi="13" ci="3" mb="1" cb="1"/><line nr="28" mi="0" ci="2" mb="1" cb="1"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="101"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MessageCollectorExtensions.kt"><line nr="12" mi="0" ci="7" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><line nr="15" mi="0" ci="10" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="2" ci="8" mb="1" cb="1"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="119"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="88" covered="503"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="6" covered="65"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="5" covered="20"/><counter type="CLASS" missed="0" covered="4"/></package><package name="io/gitlab/arturbosch/detekt/rules/documentation/internal"><class name="io/gitlab/arturbosch/detekt/rules/documentation/internal/TraversingKt" sourcefilename="Traversing.kt"><method name="isPublicInherited" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)Z" line="8"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPublicInherited" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;Z)Z" line="11"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Traversing.kt"><line nr="8" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="2"/><line nr="13" mi="4" ci="6" mb="3" cb="3"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></package><package name="io/gitlab/arturbosch/detekt/cli"><class name="io/gitlab/arturbosch/detekt/cli/ReportPath" sourcefilename="ReportPath.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/nio/file/Path;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKind" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/nio/file/Path;" line="6"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/ReportPath$Companion" sourcefilename="ReportPath.kt"><method name="from" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/cli/ReportPath;" line="14"><counter type="INSTRUCTION" missed="17" covered="112"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="112"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/JvmTargetConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lorg/jetbrains/kotlin/config/JvmTarget;" line="36"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert$lambda$1$lambda$0" desc="(Lorg/jetbrains/kotlin/config/JvmTarget;)Ljava/lang/CharSequence;" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/JunkKt" sourcefilename="Junk.kt"/><class name="io/gitlab/arturbosch/detekt/cli/CliRunner" sourcefilename="CliRunner.kt"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="run" desc="([Ljava/lang/String;)Lio/github/detekt/tooling/api/AnalysisResult;" line="14"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="run" desc="([Ljava/lang/String;Ljava/lang/Appendable;Ljava/lang/Appendable;)Lio/github/detekt/tooling/api/AnalysisResult;" line="17"><counter type="INSTRUCTION" missed="147" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="164" covered="3"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/Main" sourcefilename="Main.kt"><method name="main" desc="([Ljava/lang/String;)V" line="20"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildRunner" desc="([Ljava/lang/String;Ljava/io/PrintStream;Ljava/io/PrintStream;)Lio/gitlab/arturbosch/detekt/cli/runners/Executable;" line="55"><counter type="INSTRUCTION" missed="24" covered="48"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exitCode" desc="(Lio/github/detekt/tooling/api/AnalysisResult;)I" line="70"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="74"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/HelpRequest" sourcefilename="Errors.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsageText" desc="()Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/DetektProgressListener" sourcefilename="DetektProgressListener.kt"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcess" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onFinish" desc="(Ljava/util/List;Lio/gitlab/arturbosch/detekt/api/Detektion;)V" line="23"><counter type="INSTRUCTION" missed="1" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStart" desc="(Ljava/util/List;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onProcessComplete" desc="(Lorg/jetbrains/kotlin/psi/KtFile;Ljava/util/List;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="82"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/FailureSeverityConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/cli/FailureSeverity;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/FailureSeverity" sourcefilename="FailureSeverity.kt"><method name="toSeverity$detekt_cli" desc="()Lio/gitlab/arturbosch/detekt/api/Severity;" line="12"><counter type="INSTRUCTION" missed="15" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/ClasspathResourceConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Ljava/net/URL;" line="44"><counter type="INSTRUCTION" missed="23" covered="20"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/PathValidator" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/lang/String;Ljava/util/List;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/ApiVersionConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lorg/jetbrains/kotlin/config/ApiVersion;" line="17"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert$lambda$1$lambda$0" desc="(Lorg/jetbrains/kotlin/config/LanguageVersion;)Ljava/lang/CharSequence;" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/DirectoryValidator" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Ljava/lang/String;Ljava/nio/file/Path;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/FailureSeverity$Companion" sourcefilename="FailureSeverity.kt"><method name="fromString" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/cli/FailureSeverity;" line="21"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/JCommanderKt" sourcefilename="JCommander.kt"><method name="parseArguments" desc="([Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/cli/CliArgs;" line="9"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="usageAsString" desc="(Lcom/beust/jcommander/JCommander;)Ljava/lang/String;" line="30"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validate" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lcom/beust/jcommander/JCommander;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/PathSplitter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Ljava/lang/String;)Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/LanguageVersionConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lorg/jetbrains/kotlin/config/LanguageVersion;" line="28"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert$lambda$1$lambda$0" desc="(Lorg/jetbrains/kotlin/config/LanguageVersion;)Ljava/lang/CharSequence;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/HandledArgumentViolation" sourcefilename="Errors.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUsageText" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/ReportPathConverter" sourcefilename="ArgumentConverters.kt"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljava/lang/String;)Lio/gitlab/arturbosch/detekt/cli/ReportPath;" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/SpecKt" sourcefilename="Spec.kt"><method name="createSpec" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Ljava/lang/Appendable;Ljava/lang/Appendable;)Lio/github/detekt/tooling/api/spec/ProcessingSpec;" line="18"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Ljava/lang/Iterable;)Lkotlin/sequences/Sequence;" line="90"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isKotlinFile" desc="(Ljava/nio/file/Path;)Z" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPatterns" desc="(Ljava/lang/String;)Ljava/util/List;" line="96"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toRunPolicy" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;)Lio/github/detekt/tooling/api/spec/RulesSpec$RunPolicy;" line="103"><counter type="INSTRUCTION" missed="3" covered="60"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Ljava/lang/Appendable;Ljava/lang/Appendable;Lio/github/detekt/tooling/dsl/LoggingSpecBuilder;)Lkotlin/Unit;" line="21"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$6$lambda$2" desc="(Ljava/nio/file/Path;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$6$lambda$3" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="35"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$6$lambda$4" desc="(Lio/github/detekt/utils/PathFilters;Ljava/nio/file/Path;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$6$lambda$5" desc="(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/nio/file/Path;" line="37"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$6" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ProjectSpecBuilder;)Lkotlin/Unit;" line="27"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$7" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/RulesSpecBuilder;)Lkotlin/Unit;" line="43"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$8" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/BaselineSpecBuilder;)Lkotlin/Unit;" line="51"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$9" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ConfigSpecBuilder;)Lkotlin/Unit;" line="56"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$10" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ExecutionSpecBuilder;)Lkotlin/Unit;" line="63"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$12$lambda$11" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;)Ljava/util/Collection;" line="69"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$12" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ExtensionsSpecBuilder;)Lkotlin/Unit;" line="68"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$15$lambda$14$lambda$13" desc="(Lio/gitlab/arturbosch/detekt/cli/ReportPath;)Lkotlin/Pair;" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$15" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ReportsSpecBuilder;)Lkotlin/Unit;" line="73"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17$lambda$16" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/CompilerSpecBuilder;)Lkotlin/Unit;" line="79"><counter type="INSTRUCTION" missed="4" covered="49"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createSpec$lambda$17" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Ljava/lang/Appendable;Ljava/lang/Appendable;Lio/gitlab/arturbosch/detekt/cli/CliArgs;Lio/github/detekt/tooling/dsl/ProcessingSpecBuilder;)Lkotlin/Unit;" line="20"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk$lambda$18" desc="(Ljava/nio/file/Path;)Lkotlin/sequences/Sequence;" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPatterns$lambda$19" desc="(Ljava/lang/String;)Z" line="98"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asPatterns$lambda$20" desc="(Ljava/lang/String;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="560"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="0" covered="72"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/CliArgs" sourcefilename="CliArgs.kt"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInputPaths" desc="()Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInputPaths" desc="(Ljava/util/List;)V" line="18"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAnalysisMode" desc="()Lio/github/detekt/tooling/api/AnalysisMode;" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAnalysisMode" desc="(Lio/github/detekt/tooling/api/AnalysisMode;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getIncludes" desc="()Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIncludes" desc="(Ljava/lang/String;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExcludes" desc="()Ljava/lang/String;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setExcludes" desc="(Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfig" desc="()Ljava/util/List;" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConfig" desc="(Ljava/util/List;)V" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConfigResource" desc="()Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setConfigResource" desc="(Ljava/util/List;)V" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGenerateConfig" desc="()Ljava/nio/file/Path;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGenerateConfig" desc="(Ljava/nio/file/Path;)V" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPlugins" desc="()Ljava/util/List;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPlugins" desc="(Ljava/util/List;)V" line="74"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParallel" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParallel" desc="(Z)V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBaseline" desc="()Ljava/nio/file/Path;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBaseline" desc="(Ljava/nio/file/Path;)V" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCreateBaseline" desc="()Z" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCreateBaseline" desc="(Z)V" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReportPaths" desc="()Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setReportPaths" desc="(Ljava/util/List;)V" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFailOnSeverity" desc="()Lio/gitlab/arturbosch/detekt/cli/FailureSeverity;" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFailOnSeverity" desc="(Lio/gitlab/arturbosch/detekt/cli/FailureSeverity;)V" line="116"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBasePath" desc="(Ljava/nio/file/Path;)V" line="125"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDisableDefaultRuleSets" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDisableDefaultRuleSets" desc="(Z)V" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBuildUponDefaultConfig" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBuildUponDefaultConfig" desc="(Z)V" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllRules" desc="()Z" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAllRules" desc="(Z)V" line="148"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAutoCorrect" desc="()Z" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAutoCorrect" desc="(Z)V" line="154"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDebug" desc="()Z" line="163"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDebug" desc="(Z)V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getHelp" desc="()Z" line="169"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHelp" desc="(Z)V" line="169"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunRule" desc="()Ljava/lang/String;" line="176"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRunRule" desc="(Ljava/lang/String;)V" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClasspath" desc="()Ljava/lang/String;" line="188"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClasspath" desc="(Ljava/lang/String;)V" line="188"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getApiVersion" desc="()Lorg/jetbrains/kotlin/config/ApiVersion;" line="195"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setApiVersion" desc="(Lorg/jetbrains/kotlin/config/ApiVersion;)V" line="195"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLanguageVersion" desc="()Lorg/jetbrains/kotlin/config/LanguageVersion;" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setLanguageVersion" desc="(Lorg/jetbrains/kotlin/config/LanguageVersion;)V" line="203"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJvmTarget" desc="()Lorg/jetbrains/kotlin/config/JvmTarget;" line="211"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJvmTarget" desc="(Lorg/jetbrains/kotlin/config/JvmTarget;)V" line="211"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getJdkHome" desc="()Ljava/nio/file/Path;" line="219"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setJdkHome" desc="(Ljava/nio/file/Path;)V" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getShowVersion" desc="()Z" line="227"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setShowVersion" desc="(Z)V" line="227"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFreeCompilerArgs" desc="()Ljava/util/List;" line="233"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFreeCompilerArgs" desc="(Ljava/util/List;)V" line="233"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFailurePolicy" desc="()Lio/github/detekt/tooling/api/spec/RulesSpec$FailurePolicy;" line="238"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="141" covered="161"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="18" covered="42"/><counter type="COMPLEXITY" missed="28" covered="31"/><counter type="METHOD" missed="28" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ReportPath.kt"><line nr="6" mi="0" ci="15" mb="0" cb="0"/><line nr="14" mi="0" ci="16" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="1" cb="2"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="17" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="13" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="25" mb="0" cb="4"/><line nr="26" mi="0" ci="25" mb="0" cb="4"/><line nr="27" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="133"/><counter type="BRANCH" missed="1" covered="10"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ArgumentConverters.kt"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="14" mb="0" cb="2"/><line nr="19" mi="0" ci="16" mb="0" cb="0"/><line nr="20" mi="0" ci="14" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="2"/><line nr="29" mi="0" ci="16" mb="0" cb="0"/><line nr="30" mi="0" ci="14" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="15" mb="0" cb="2"/><line nr="37" mi="0" ci="16" mb="0" cb="0"/><line nr="38" mi="0" ci="10" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="8" ci="10" mb="1" cb="1"/><line nr="45" mi="1" ci="7" mb="1" cb="1"/><line nr="46" mi="14" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="20" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="23" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="23" mb="0" cb="2"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="308"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="21"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><sourcefile name="Main.kt"><line nr="20" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="12" ci="0" mb="4" cb="0"/><line nr="24" mi="3" ci="0" mb="2" cb="0"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="7" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="2" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="7" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="9" ci="4" mb="1" cb="1"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="4" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="74"/><counter type="BRANCH" missed="12" covered="12"/><counter type="LINE" missed="17" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Spec.kt"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="16" mb="0" cb="4"/><line nr="30" mi="0" ci="18" mb="0" cb="4"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="11" mb="0" cb="0"/><line nr="36" mi="0" ci="20" mb="0" cb="6"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="2"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="4" ci="8" mb="1" cb="1"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="15" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="18" mb="0" cb="0"/><line nr="98" mi="0" ci="10" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="22" mb="1" cb="3"/><line nr="104" mi="3" ci="6" mb="1" cb="1"/><line nr="105" mi="0" ci="16" mb="0" cb="4"/><line nr="106" mi="0" ci="16" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="560"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="0" covered="72"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DetektProgressListener.kt"><line nr="8" mi="0" ci="12" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="1" ci="7" mb="1" cb="1"/><line nr="24" mi="0" ci="32" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="82"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CliRunner.kt"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="14" ci="0" mb="0" cb="0"/><line nr="17" mi="23" ci="0" mb="0" cb="0"/><line nr="18" mi="20" ci="0" mb="2" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="9" ci="0" mb="2" cb="0"/><line nr="22" mi="10" ci="0" mb="2" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="3" ci="0" mb="2" cb="0"/><line nr="27" mi="23" ci="0" mb="0" cb="0"/><line nr="28" mi="21" ci="0" mb="2" cb="0"/><line nr="29" mi="19" ci="0" mb="2" cb="0"/><line nr="31" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="164" covered="3"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="12" covered="1"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CliArgs.kt"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="3" ci="3" mb="0" cb="0"/><line nr="26" mi="1" ci="14" mb="0" cb="0"/><line nr="28" mi="3" ci="3" mb="0" cb="0"/><line nr="34" mi="1" ci="3" mb="0" cb="0"/><line nr="36" mi="3" ci="3" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="3" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="3" mb="0" cb="0"/><line nr="57" mi="1" ci="3" mb="0" cb="0"/><line nr="59" mi="3" ci="3" mb="0" cb="0"/><line nr="65" mi="1" ci="3" mb="0" cb="0"/><line nr="67" mi="3" ci="3" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="3" mb="0" cb="0"/><line nr="81" mi="1" ci="3" mb="0" cb="0"/><line nr="83" mi="3" ci="3" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="3" mb="0" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="3" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="3" mb="0" cb="0"/><line nr="114" mi="1" ci="3" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="3" mb="0" cb="0"/><line nr="125" mi="3" ci="3" mb="0" cb="0"/><line nr="133" mi="1" ci="13" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="3" ci="3" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="3" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="3" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="3" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="3" mb="0" cb="0"/><line nr="174" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="3" ci="3" mb="0" cb="0"/><line nr="181" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="3" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="3" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="3" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="3" mb="0" cb="0"/><line nr="217" mi="1" ci="3" mb="0" cb="0"/><line nr="219" mi="3" ci="3" mb="0" cb="0"/><line nr="225" mi="1" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="3" mb="0" cb="0"/><line nr="231" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="3" mb="0" cb="0"/><line nr="234" mi="1" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="9" mb="0" cb="2"/><line nr="239" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="141" covered="161"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="18" covered="42"/><counter type="COMPLEXITY" missed="28" covered="31"/><counter type="METHOD" missed="28" covered="30"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Junk.kt"/><sourcefile name="JCommander.kt"><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="16" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="2"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="4"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="4"/><line nr="44" mi="0" ci="9" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="2"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Errors.kt"><line nr="6" mi="3" ci="6" mb="0" cb="0"/><line nr="13" mi="3" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FailureSeverity.kt"><line nr="6" mi="0" ci="6" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="18" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="1" cb="3"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="2" ci="2" mb="0" cb="0"/><line nr="16" mi="13" ci="0" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="0"/><line nr="22" mi="0" ci="33" mb="0" cb="6"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="108"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="476" covered="1581"/><counter type="BRANCH" missed="32" covered="91"/><counter type="LINE" missed="50" covered="220"/><counter type="COMPLEXITY" missed="54" covered="140"/><counter type="METHOD" missed="33" covered="98"/><counter type="CLASS" missed="0" covered="21"/></package><package name="io/github/detekt/psi/internal"><class name="io/github/detekt/psi/internal/KotlinNoImportClassesKt" sourcefilename="KotlinNoImportClasses.kt"><method name="getDefaultImportClasses" desc="()Ljava/util/Map;" line="23"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="1057"/><counter type="LINE" missed="0" covered="176"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="1059"/><counter type="LINE" missed="0" covered="176"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/psi/internal/FullQualifiedNameGuesser" sourcefilename="FullQualifiedNameGuesser.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/util/List;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="14"><counter type="INSTRUCTION" missed="6" covered="33"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResolvedNames" desc="()Ljava/util/Map;" line="19"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStarImports" desc="()Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFullQualifiedName" desc="(Ljava/lang/String;)Ljava/util/Set;" line="42"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findName" desc="(Ljava/lang/String;)Ljava/lang/String;" line="63"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedNames_delegate$lambda$4$lambda$1" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedNames_delegate$lambda$4$lambda$3" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Lkotlin/Pair;" line="24"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedNames_delegate$lambda$4" desc="(Ljava/util/List;)Ljava/util/Map;" line="20"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="starImports_delegate$lambda$7$lambda$5" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Z" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="starImports_delegate$lambda$7$lambda$6" desc="(Lorg/jetbrains/kotlin/psi/KtImportDirective;)Ljava/lang/String;" line="36"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="starImports_delegate$lambda$7" desc="(Ljava/util/List;)Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="261"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="8" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KotlinNoImportClasses.kt"><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="358" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="1059"/><counter type="LINE" missed="0" covered="176"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FullQualifiedNameGuesser.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="2" ci="19" mb="2" cb="4"/><line nr="16" mi="4" ci="8" mb="2" cb="2"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="2" ci="11" mb="2" cb="2"/><line nr="25" mi="0" ci="16" mb="1" cb="3"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="13" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="2" ci="7" mb="1" cb="1"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="13" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="261"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="41"/><counter type="COMPLEXITY" missed="8" covered="19"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="10" covered="1320"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="217"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/cli/runners"><class name="io/gitlab/arturbosch/detekt/cli/runners/Runner" sourcefilename="Runner.kt"><method name="&lt;init&gt;" desc="(Lio/github/detekt/tooling/api/spec/ProcessingSpec;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Ljava/lang/Appendable;Ljava/lang/Appendable;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Lio/github/detekt/tooling/api/AnalysisResult;" line="31"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/runners/ConfigExporter" sourcefilename="ConfigExporter.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/cli/CliArgs;Ljava/lang/Appendable;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="14"><counter type="INSTRUCTION" missed="7" covered="46"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute$lambda$2$lambda$1$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/cli/runners/ConfigExporter;)Ljava/util/Collection;" line="17"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute$lambda$2$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/cli/runners/ConfigExporter;Lio/github/detekt/tooling/dsl/ExtensionsSpecBuilder;)Lkotlin/Unit;" line="17"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute$lambda$2" desc="(Lio/gitlab/arturbosch/detekt/cli/runners/ConfigExporter;Lio/github/detekt/tooling/dsl/ProcessingSpecBuilder;)Lkotlin/Unit;" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="93"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/runners/ElementPrinter" sourcefilename="ElementPrinter.kt"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndentation" desc="()Ljava/lang/String;" line="16"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLine" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)I" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDump" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtElement" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContainer" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="_get_indentation_$lambda$0" desc="(I)Ljava/lang/CharSequence;" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="179"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/runners/ElementPrinter$Companion" sourcefilename="ElementPrinter.kt"><method name="dump" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/cli/runners/Executable" sourcefilename="Executable.kt"/><class name="io/gitlab/arturbosch/detekt/cli/runners/VersionPrinter" sourcefilename="VersionPrinter.kt"><method name="&lt;init&gt;" desc="(Ljava/lang/Appendable;)V" line="5"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConfigExporter.kt"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="7" ci="6" mb="1" cb="1"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="25" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="93"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ElementPrinter.kt"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="21" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="18" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="2"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="16" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="39" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="22" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="221"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Executable.kt"/><sourcefile name="Runner.kt"><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="2"/><line nr="26" mi="0" ci="6" mb="0" cb="2"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VersionPrinter.kt"><line nr="5" mi="0" ci="6" mb="0" cb="0"/><line nr="8" mi="0" ci="19" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="402"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="5"/></package><package name="io/gitlab/arturbosch/detekt/rules/style/movelambdaout"><class name="io/gitlab/arturbosch/detekt/rules/style/movelambdaout/UnnecessaryBracesAroundTrailingLambda" sourcefilename="UnnecessaryBracesAroundTrailingLambda.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIssueElement" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;" line="52"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/style/movelambdaout/MoveLambdaOutsideParenthesesInspectionKt" sourcefilename="MoveLambdaOutsideParenthesesInspection.kt"><method name="canMoveLambdaOutsideParentheses" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;Lorg/jetbrains/kotlin/resolve/BindingContext;)Z" line="20"><counter type="INSTRUCTION" missed="13" covered="188"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEligible" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="59"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shouldReportUnnecessaryBracesAroundTrailingLambda" desc="(Lorg/jetbrains/kotlin/resolve/BindingContext;Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastLambdaExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lorg/jetbrains/kotlin/psi/KtLambdaExpression;" line="72"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentLabeledExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtLabeledExpression;" line="77"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="303"/><counter type="BRANCH" missed="10" covered="60"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="10" covered="30"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MoveLambdaOutsideParenthesesInspection.kt"><line nr="20" mi="0" ci="5" mb="0" cb="2"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="7" mb="0" cb="2"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="2" ci="11" mb="1" cb="3"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="2"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="2" ci="19" mb="1" cb="1"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="1" ci="19" mb="2" cb="4"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="4"/><line nr="42" mi="0" ci="6" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="2" ci="8" mb="1" cb="1"/><line nr="46" mi="4" ci="22" mb="2" cb="10"/><line nr="47" mi="0" ci="9" mb="0" cb="2"/><line nr="48" mi="0" ci="16" mb="0" cb="4"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="21" mb="0" cb="6"/><line nr="61" mi="2" ci="26" mb="1" cb="5"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="14" mb="0" cb="4"/><line nr="73" mi="0" ci="20" mb="1" cb="3"/><line nr="77" mi="2" ci="21" mb="1" cb="3"/><counter type="INSTRUCTION" missed="17" covered="303"/><counter type="BRANCH" missed="10" covered="60"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="10" covered="30"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryBracesAroundTrailingLambda.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="18" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="17" covered="359"/><counter type="BRANCH" missed="10" covered="66"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="10" covered="36"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></package><package name="io/gitlab/arturbosch/detekt/rules/performance"><class name="io/gitlab/arturbosch/detekt/rules/performance/ArrayPrimitive$Companion" sourcefilename="ArrayPrimitive.kt"/><class name="io/gitlab/arturbosch/detekt/rules/performance/ArrayPrimitive" sourcefilename="ArrayPrimitive.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="48"><counter type="INSTRUCTION" missed="4" covered="52"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtNamedDeclaration;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportArrayPrimitives" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayPrimitive" desc="(Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Z" line="71"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isArrayPrimitive" desc="(Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="76"><counter type="INSTRUCTION" missed="4" covered="47"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportArrayPrimitives$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/performance/ArrayPrimitive;Lorg/jetbrains/kotlin/psi/KtTypeReference;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="259"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/UnnecessaryPartOfBinaryExpression" sourcefilename="UnnecessaryPartOfBinaryExpression.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitBinaryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expressions" desc="(Lorg/jetbrains/kotlin/psi/KtBinaryExpression;Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expressions$collect" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/tree/IElementType;Ljava/util/List;Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/CouldBeSequence$Companion" sourcefilename="CouldBeSequence.kt"/><class name="io/gitlab/arturbosch/detekt/rules/performance/PerformanceProvider" sourcefilename="PerformanceProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="15"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/CouldBeSequence" sourcefilename="CouldBeSequence.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedOperations" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="43"><counter type="INSTRUCTION" missed="1" covered="84"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextChainedCall" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Lorg/jetbrains/kotlin/psi/KtExpression;" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCalling" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;Ljava/util/List;)Z" line="73"><counter type="INSTRUCTION" missed="6" covered="48"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="258"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/UnnecessaryPartOfBinaryExpression$Companion" sourcefilename="UnnecessaryPartOfBinaryExpression.kt"/><class name="io/gitlab/arturbosch/detekt/rules/performance/SpreadOperator" sourcefilename="SpreadOperator.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitValueArgumentList" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgumentList;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkCanSkipArrayCopy" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;Lorg/jetbrains/kotlin/psi/KtValueArgumentList;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canSkipArrayCopyForSpreadArgument" desc="(Lorg/jetbrains/kotlin/psi/KtValueArgument;)Z" line="82"><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="101"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/ForEachOnRange" sourcefilename="ForEachOnRange.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="52"><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRangeOperatorsChainCall" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Z" line="66"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRangeOperator" desc="(Lorg/jetbrains/kotlin/psi/KtElement;)Z" line="88"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="168"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/UnnecessaryTemporaryInstantiation" sourcefilename="UnnecessaryTemporaryInstantiation.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="33"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPrimitiveWrapperType" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="40"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="93"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/ArrayPrimitive$reportArrayPrimitives$$inlined$collectDescendantsOfType$2" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/performance/ArrayPrimitive$reportArrayPrimitives$$inlined$collectDescendantsOfType$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ForEachOnRange.kt"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="27" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="2" ci="9" mb="1" cb="1"/><line nr="55" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="2" ci="8" mb="1" cb="1"/><line nr="59" mi="0" ci="6" mb="1" cb="3"/><line nr="60" mi="0" ci="18" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="3" ci="10" mb="2" cb="2"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="4" ci="17" mb="3" cb="3"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="168"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PerformanceProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="18" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="psiUtils.kt"><line nr="324" mi="0" ci="7" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SpreadOperator.kt"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="3" ci="9" mb="1" cb="1"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="1" cb="3"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="1" cb="1"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="10" mb="1" cb="1"/><counter type="INSTRUCTION" missed="3" covered="101"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CouldBeSequence.kt"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="32" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="4"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="1" cb="1"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="17" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="2"/><line nr="73" mi="4" ci="15" mb="4" cb="4"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="2" ci="17" mb="2" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="25" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="258"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryPartOfBinaryExpression.kt"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="4"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="4"/><line nr="48" mi="0" ci="27" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="18" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="4"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UnnecessaryTemporaryInstantiation.kt"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="36" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="2" ci="12" mb="3" cb="3"/><line nr="36" mi="0" ci="18" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="2" ci="10" mb="1" cb="1"/><counter type="INSTRUCTION" missed="4" covered="93"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayPrimitive.kt"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="2" ci="11" mb="1" cb="3"/><line nr="51" mi="2" ci="10" mb="1" cb="1"/><line nr="52" mi="0" ci="6" mb="1" cb="3"/><line nr="53" mi="0" ci="18" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="12" mb="0" cb="2"/><line nr="61" mi="0" ci="12" mb="0" cb="2"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="21" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="2" ci="14" mb="3" cb="3"/><line nr="72" mi="0" ci="16" mb="2" cb="4"/><line nr="76" mi="2" ci="16" mb="1" cb="5"/><line nr="77" mi="2" ci="7" mb="1" cb="1"/><line nr="78" mi="0" ci="22" mb="1" cb="5"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="85" mi="0" ci="20" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="259"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="35" covered="1092"/><counter type="BRANCH" missed="34" covered="106"/><counter type="LINE" missed="1" covered="158"/><counter type="COMPLEXITY" missed="34" covered="72"/><counter type="METHOD" missed="0" covered="36"/><counter type="CLASS" missed="0" covered="9"/></package><package name="io/gitlab/arturbosch/detekt/rules/complexity"><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexCondition" sourcefilename="ComplexCondition.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedConditions" desc="()I" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitDoWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtDoWhileExpression;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhileExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhileExpression;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfComplex" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)V" line="65"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="frequency" desc="(Ljava/lang/String;Ljava/lang/String;)I" line="87"><counter type="INSTRUCTION" missed="6" covered="44"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="215"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="1" covered="38"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/Metric" sourcefilename="Metric.kt"><method name="&lt;init&gt;" desc="(IIZI)V" line="7"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IIZIILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()I" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreshold" desc="()I" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDouble" desc="()Z" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConversionFactor" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DDI)V" line="18"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DDIILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="14"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doubleValue" desc="()D" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doubleThreshold" desc="()D" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertAsDouble" desc="(I)D" line="38"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="44"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="46" covered="80"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NestedBlockDepth" sourcefilename="NestedBlockDepth.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedDepth" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/CognitiveComplexMethod" sourcefilename="CognitiveComplexMethod.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedComplexity" desc="()I" line="33"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexInterface" sourcefilename="ComplexInterface.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedDefinitions" desc="()I" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludeStaticDeclarations" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIncludePrivateDeclarations" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverloaded" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countStaticDeclarations" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)I" line="68"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateMembers" desc="(Lorg/jetbrains/kotlin/psi/KtClassBody;)I" line="93"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateMembers$considerPrivate" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;Lio/gitlab/arturbosch/detekt/rules/complexity/ComplexInterface;)Z" line="73"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateMembers$countFunctions" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/ComplexInterface;Ljava/util/List;)I" line="78"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="297"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/StringLiteralDuplication$StringLiteralVisitor" sourcefilename="StringLiteralDuplication.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/StringLiteralDuplication;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLiteralsOverThreshold" desc="()Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entitiesForLiteral" desc="(Ljava/lang/String;)Lkotlin/Pair;" line="83"><counter type="INSTRUCTION" missed="17" covered="54"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitStringTemplateExpression" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add$lambda$2" desc="(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;" line="104"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add$lambda$3" desc="(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Integer;" line="104"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add$lambda$4" desc="(Lorg/jetbrains/kotlin/psi/KtStringTemplateExpression;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;" line="106"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add$lambda$5" desc="(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="217"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/StringLiteralDuplication" sourcefilename="StringLiteralDuplication.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedDuplications" desc="()I" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreAnnotation" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedWithLengthLessThan" desc="()I" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreStringsRegex" desc="()Lkotlin/text/Regex;" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="189"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/MethodOverloading$OverloadedMethodVisitor" sourcefilename="MethodOverloading.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/MethodOverloading;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportIfAllowedNumberExceeded" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitMethod" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOverriddenInsideEnumEntry" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="195"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/LongParameterList" sourcefilename="LongParameterList.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getThreshold" desc="()I" line="38"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllowedFunctionParameters" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedConstructorParameters" desc="()I" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreDefaultParameters" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreDataClasses" desc="()Z" line="53"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreAnnotatedParameter" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitPrimaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtPrimaryConstructor;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSecondaryConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtSecondaryConstructor;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnored" desc="(Lorg/jetbrains/kotlin/psi/KtAnnotated;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateConstructor" desc="(Lorg/jetbrains/kotlin/psi/KtConstructor;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDataClassOrIgnored" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)Z" line="91"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLongParameterList" desc="(Lorg/jetbrains/kotlin/psi/KtFunction;ILjava/lang/String;)V" line="94"><counter type="INSTRUCTION" missed="3" covered="77"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parameterCount" desc="(Lorg/jetbrains/kotlin/psi/KtParameterList;)I" line="115"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoreAnnotatedParameter_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="59"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLongParameterList$lambda$2" desc="(Lorg/jetbrains/kotlin/psi/KtParameter;)Ljava/lang/CharSequence;" line="100"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="431"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="6" covered="24"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/LabeledExpression" sourcefilename="LabeledExpression.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoredLabels" desc="()Ljava/util/List;" line="65"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitExpressionWithLabel" desc="(Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;)V" line="70"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotReferencingOuterClass" desc="(Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;)Z" line="81"><counter type="INSTRUCTION" missed="3" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowedToReferenceContainingClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;Lorg/jetbrains/kotlin/psi/KtExpressionWithLabel;)Z" line="91"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassHierarchy" desc="(Lorg/jetbrains/kotlin/psi/KtElement;Ljava/util/List;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ignoredLabels_delegate$lambda$1" desc="(Ljava/util/List;)Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="195"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NestedBlockDepth$FunctionDepthVisitor" sourcefilename="NestedBlockDepth.kt"><method name="&lt;init&gt;" desc="(I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedDepth" desc="()I" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDepth" desc="()I" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDepth" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMaxDepth" desc="()I" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxDepth" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTooDeep" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTooDeep" desc="(Z)V" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inc" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dec" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitIfExpression" desc="(Lorg/jetbrains/kotlin/psi/KtIfExpression;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitLoopExpression" desc="(Lorg/jetbrains/kotlin/psi/KtLoopExpression;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtWhenExpression;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitTryExpression" desc="(Lorg/jetbrains/kotlin/psi/KtTryExpression;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insideLambdaDo" desc="(Ljava/util/List;Lkotlin/jvm/functions/Function0;)V" line="106"><counter type="INSTRUCTION" missed="3" covered="23"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isUsedForNesting" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="115"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/NestedBlockDepth$FunctionDepthVisitor;)Lkotlin/Unit;" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/NestedBlockDepth$FunctionDepthVisitor;)Lkotlin/Unit;" line="101"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="202"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="1" covered="40"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="5" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions" sourcefilename="NestedScopeFunctions.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedDepth" desc="()I" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFunctions" desc="()Ljava/util/List;" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="report" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;I)V" line="63"><counter type="INSTRUCTION" missed="2" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functions_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="180"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexityProvider" sourcefilename="ComplexityProvider.kt"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRuleSetId" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="instance" desc="()Lio/gitlab/arturbosch/detekt/api/RuleSet;" line="15"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/MetricKt" sourcefilename="Metric.kt"/><class name="io/gitlab/arturbosch/detekt/rules/complexity/LongMethod" sourcefilename="LongMethod.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedLines" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="43"><counter type="INSTRUCTION" missed="2" covered="136"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="67"><counter type="INSTRUCTION" missed="6" covered="147"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="352"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/CyclomaticComplexMethod$Companion" sourcefilename="CyclomaticComplexMethod.kt"><method name="getDEFAULT_NESTING_FUNCTIONS" desc="()Ljava/util/List;" line="98"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/TooManyFunctions$Companion" sourcefilename="TooManyFunctions.kt"/><class name="io/gitlab/arturbosch/detekt/rules/complexity/ReplaceSafeCallChainWithRun" sourcefilename="ReplaceSafeCallChainWithRun.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitSafeQualifiedExpression" desc="(Lorg/jetbrains/kotlin/psi/KtSafeQualifiedExpression;)V" line="45"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NamedArguments" sourcefilename="NamedArguments.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedArguments" desc="()I" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreArgumentsMatchingNames" desc="()Z" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canNameArguments" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="56"><counter type="INSTRUCTION" missed="8" covered="106"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="237"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/CyclomaticComplexMethod" sourcefilename="CyclomaticComplexMethod.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedComplexity" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreSingleWhenExpression" desc="()Z" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreSimpleWhenEntries" desc="()Z" line="48"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreNestingFunctions" desc="()Z" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreLocalFunctions" desc="()Z" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNestingFunctions" desc="()Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSingleWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="84"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="returnsWhenExpression" desc="(Lorg/jetbrains/kotlin/psi/KtExpression;)Z" line="95"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nestingFunctions_delegate$lambda$0" desc="(Ljava/util/List;)Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction$lambda$1" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/CyclomaticComplexMethod;Lio/github/detekt/metrics/CyclomaticComplexity$Config;)Lkotlin/Unit;" line="65"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="368"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexCondition$checkIfComplex$$inlined$collectDescendantsOfType$default$1" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)Ljava/lang/Boolean;" line="309"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexCondition$checkIfComplex$$inlined$collectDescendantsOfType$default$2" sourcefilename="psiUtils.kt"><method name="invoke" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/TooManyFunctions" sourcefilename="TooManyFunctions.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedFunctionsPerFile" desc="()I" line="34"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedFunctionsPerClass" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedFunctionsPerInterface" desc="()I" line="40"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedFunctionsPerObject" desc="()I" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedFunctionsPerEnum" desc="()I" line="46"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreDeprecated" desc="()Z" line="49"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnorePrivate" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreOverridden" desc="()Z" line="55"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIgnoreAnnotatedFunctions" desc="()Ljava/util/List;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitNamedFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClass" desc="(Lorg/jetbrains/kotlin/psi/KtClass;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="162"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitObjectDeclaration" desc="(Lorg/jetbrains/kotlin/psi/KtObjectDeclaration;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcFunctions" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)I" line="145"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isIgnoredFunction" desc="(Lorg/jetbrains/kotlin/psi/KtNamedFunction;)Z" line="153"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="648"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="75"/><counter type="COMPLEXITY" missed="0" covered="35"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ComplexCondition$checkIfComplex$$inlined$collectDescendantsOfType$default$3" sourcefilename="psiUtils.kt"><method name="&lt;init&gt;" desc="(Lkotlin/jvm/functions/Function1;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitElement" desc="(Lorg/jetbrains/kotlin/com/intellij/psi/PsiElement;)V"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/LongParameterList$Companion" sourcefilename="LongParameterList.kt"/><class name="io/gitlab/arturbosch/detekt/rules/complexity/LargeClass" sourcefilename="LargeClass.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedLines" desc="()I" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postVisit" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="55"><counter type="INSTRUCTION" missed="2" covered="108"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="239"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/ThresholdedCodeSmell" sourcefilename="ThresholdedCodeSmell.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Lio/gitlab/arturbosch/detekt/rules/complexity/Metric;Ljava/lang/String;Ljava/util/List;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Entity;Lio/gitlab/arturbosch/detekt/rules/complexity/Metric;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetric" desc="()Lio/gitlab/arturbosch/detekt/rules/complexity/Metric;" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions$FunctionDepthVisitor" sourcefilename="NestedScopeFunctions.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doWithIncrementedDepth" desc="(Lkotlin/jvm/functions/Function0;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reportIfOverThreshold" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isScopeFunction" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Z" line="111"><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveDescriptors" desc="(Lorg/jetbrains/kotlin/psi/KtCallExpression;)Ljava/util/List;" line="116"><counter type="INSTRUCTION" missed="1" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchesScopeFunction" desc="(Lorg/jetbrains/kotlin/descriptors/CallableDescriptor;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$callSuper" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions$FunctionDepthVisitor;Lorg/jetbrains/kotlin/psi/KtCallExpression;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitCallExpression$lambda$0" desc="(Lio/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions$FunctionDepthVisitor;Lorg/jetbrains/kotlin/psi/KtCallExpression;)Lkotlin/Unit;" line="90"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="128"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/MethodOverloading" sourcefilename="MethodOverloading.kt"><method name="&lt;init&gt;" desc="(Lio/gitlab/arturbosch/detekt/api/Config;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllowedOverloads" desc="()I" line="32"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitKtFile" desc="(Lorg/jetbrains/kotlin/psi/KtFile;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visitClassOrObject" desc="(Lorg/jetbrains/kotlin/psi/KtClassOrObject;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/gitlab/arturbosch/detekt/rules/complexity/NestedScopeFunctions$Companion" sourcefilename="NestedScopeFunctions.kt"><method name="getDEFAULT_FUNCTIONS" desc="()Ljava/util/List;" line="73"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="psiUtils.kt"><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="7" mb="1" cb="1"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Metric.kt"><line nr="7" mi="0" ci="15" mb="0" cb="0"/><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="9" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="3" ci="5" mb="0" cb="0"/><line nr="11" mi="3" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="23" mi="1" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="29" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="46" covered="80"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CognitiveComplexMethod.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="28" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="43" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexityProvider.kt"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="18" mi="0" ci="36" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StringLiteralDuplication.kt"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="27" mb="0" cb="0"/><line nr="51" mi="0" ci="27" mb="0" cb="0"/><line nr="54" mi="0" ci="27" mb="0" cb="0"/><line nr="57" mi="0" ci="28" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="21" mb="0" cb="2"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="17" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="2" ci="10" mb="3" cb="3"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="2" ci="24" mb="0" cb="0"/><line nr="89" mi="13" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="14" mb="0" cb="4"/><line nr="96" mi="0" ci="10" mb="0" cb="2"/><line nr="97" mi="0" ci="13" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="24" mb="0" cb="2"/><line nr="105" mi="0" ci="14" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="14" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="406"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="1" covered="41"/><counter type="COMPLEXITY" missed="3" covered="25"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ThresholdedCodeSmell.kt"><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MethodOverloading.kt"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="28" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="35" mb="0" cb="4"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="14" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="16" mb="1" cb="3"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="1" cb="3"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="1" cb="3"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="81" mi="0" ci="17" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="286"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ComplexCondition.kt"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="28" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="2" ci="7" mb="1" cb="1"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="14" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="4" ci="12" mb="4" cb="4"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="215"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="1" covered="38"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongMethod.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="15" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="0" ci="2" mb="0" cb="2"/><line nr="47" mi="2" ci="23" mb="1" cb="1"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="21" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="18" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="2"/><line nr="69" mi="2" ci="18" mb="1" cb="3"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="2" ci="20" mb="1" cb="1"/><line nr="72" mi="0" ci="19" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="2" ci="18" mb="1" cb="1"/><line nr="77" mi="0" ci="14" mb="0" cb="4"/><line nr="78" mi="0" ci="18" mb="0" cb="2"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="352"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LargeClass.kt"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="28" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="21" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="17" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="2" ci="18" mb="1" cb="1"/><line nr="63" mi="0" ci="14" mb="0" cb="4"/><line nr="64" mi="0" ci="18" mb="0" cb="2"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="239"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LongParameterList.kt"><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="10" ci="17" mb="0" cb="0"/><line nr="42" mi="0" ci="32" mb="0" cb="0"/><line nr="47" mi="0" ci="32" mb="0" cb="0"/><line nr="50" mi="0" ci="27" mb="0" cb="0"/><line nr="53" mi="0" ci="27" mb="0" cb="0"/><line nr="58" mi="0" ci="32" mb="0" cb="0"/><line nr="59" mi="0" ci="23" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="1" cb="3"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="1" cb="3"/><line nr="94" mi="1" ci="4" mb="1" cb="1"/><line nr="95" mi="2" ci="5" mb="1" cb="1"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="17" mb="0" cb="0"/><line nr="100" mi="2" ci="19" mb="1" cb="1"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="17" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="20" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="2"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="431"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="6" covered="24"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NamedArguments.kt"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="42" mi="0" ci="28" mb="0" cb="0"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="4"/><line nr="47" mi="0" ci="14" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="19" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="3" ci="8" mb="1" cb="1"/><line nr="57" mi="0" ci="6" mb="0" cb="2"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="4"/><line nr="61" mi="3" ci="7" mb="1" cb="1"/><line nr="62" mi="2" ci="14" mb="1" cb="5"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="4"/><line nr="69" mi="0" ci="13" mb="0" cb="2"/><line nr="70" mi="0" ci="26" mb="0" cb="6"/><counter type="INSTRUCTION" missed="8" covered="237"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TooManyFunctions.kt"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="27" mb="0" cb="0"/><line nr="37" mi="0" ci="27" mb="0" cb="0"/><line nr="40" mi="0" ci="27" mb="0" cb="0"/><line nr="43" mi="0" ci="27" mb="0" cb="0"/><line nr="46" mi="0" ci="27" mb="0" cb="0"/><line nr="49" mi="0" ci="27" mb="0" cb="0"/><line nr="52" mi="0" ci="27" mb="0" cb="0"/><line nr="55" mi="0" ci="27" mb="0" cb="0"/><line nr="58" mi="0" ci="31" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="2"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="19" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="4"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="18" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="18" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="120" mi="0" ci="18" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="18" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="11" mb="0" cb="2"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="17" mb="0" cb="4"/><line nr="155" mi="0" ci="9" mb="0" cb="4"/><line nr="156" mi="0" ci="9" mb="0" cb="4"/><line nr="157" mi="0" ci="20" mb="0" cb="2"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="648"/><counter type="BRANCH" missed="0" covered="36"/><counter type="LINE" missed="0" covered="75"/><counter type="COMPLEXITY" missed="0" covered="35"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReplaceSafeCallChainWithRun.kt"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="2" ci="21" mb="3" cb="7"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="21" mb="0" cb="2"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComplexInterface.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="27" mb="0" cb="0"/><line nr="39" mi="0" ci="27" mb="0" cb="0"/><line nr="42" mi="0" ci="27" mb="0" cb="0"/><line nr="45" mi="0" ci="28" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="10" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="1" cb="1"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="1" cb="3"/><line nr="83" mi="0" ci="13" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="297"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="21"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NestedBlockDepth.kt"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="28" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="3" ci="6" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="3" mb="0" cb="0"/><line nr="54" mi="4" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="1" cb="1"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="9" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="1" ci="7" mb="2" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="2" ci="7" mb="2" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="2" ci="39" mb="1" cb="1"/><counter type="INSTRUCTION" missed="23" covered="294"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="1" covered="53"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="5" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="NestedScopeFunctions.kt"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="27" mb="0" cb="0"/><line nr="54" mi="0" ci="31" mb="0" cb="0"/><line nr="55" mi="0" ci="15" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="2" ci="21" mb="1" cb="1"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="2" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="16" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="3" ci="6" mb="1" cb="1"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="1" ci="13" mb="1" cb="1"/><line nr="117" mi="0" ci="15" mb="1" cb="1"/><line nr="120" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="308"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="CyclomaticComplexMethod.kt"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="27" mb="0" cb="0"/><line nr="45" mi="0" ci="27" mb="0" cb="0"/><line nr="48" mi="0" ci="27" mb="0" cb="0"/><line nr="51" mi="0" ci="27" mb="0" cb="0"/><line nr="54" mi="0" ci="27" mb="0" cb="0"/><line nr="57" mi="0" ci="35" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="4"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="4"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="2" ci="11" mb="1" cb="3"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="1" ci="11" mb="2" cb="2"/><line nr="98" mi="2" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="24" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="368"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="LabeledExpression.kt"><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="27" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="4"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="2" ci="6" mb="1" cb="1"/><line nr="74" mi="0" ci="15" mb="1" cb="3"/><line nr="75" mi="0" ci="18" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="3" ci="6" mb="1" cb="1"/><line nr="83" mi="0" ci="5" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="15" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="2" ci="21" mb="1" cb="5"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="195"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="149" covered="4675"/><counter type="BRANCH" missed="49" covered="273"/><counter type="LINE" missed="6" covered="604"/><counter type="COMPLEXITY" missed="60" covered="290"/><counter type="METHOD" missed="12" covered="177"/><counter type="CLASS" missed="2" covered="25"/></package><package name="io/github/detekt/report/html"><class name="io/github/detekt/report/html/HtmlOutputReportKt" sourcefilename="HtmlOutputReport.kt"><method name="summary" desc="(Lkotlinx/html/FlowOrInteractiveContent;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summary$default" desc="(Lkotlinx/html/FlowOrInteractiveContent;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V" line="185"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="length" desc="(Lio/gitlab/arturbosch/detekt/api/TextLocation;)I" line="197"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summary$lambda$0" desc="(Lio/github/detekt/report/html/SUMMARY;)Lkotlin/Unit;" line="188"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport$renderRule$1$3$2" sourcefilename="HtmlOutputReport.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="148"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport$renderRule$1$3$3" sourcefilename="HtmlOutputReport.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="149"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport$renderRule$1$3$1" sourcefilename="HtmlOutputReport.kt"><method name="invoke" desc="(Lio/gitlab/arturbosch/detekt/api/Issue;)Ljava/lang/Comparable;" line="147"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport" sourcefilename="HtmlOutputReport.kt"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEnding" desc="()Ljava/lang/String;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBasePath" desc="()Ljava/nio/file/Path;" line="60"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBasePath" desc="(Ljava/nio/file/Path;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Lio/gitlab/arturbosch/detekt/api/SetupContext;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="render" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="8" covered="90"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderVersion" desc="()Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderDate" desc="()Ljava/lang/String;" line="80"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderMetrics" desc="(Ljava/util/Collection;)Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderComplexity" desc="(Ljava/util/List;)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderIssues" desc="(Ljava/util/List;)Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderGroup" desc="(Lkotlinx/html/FlowContent;Lio/gitlab/arturbosch/detekt/api/RuleSet$Id;Ljava/util/List;)V" line="115"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderRule" desc="(Lkotlinx/html/FlowContent;Lio/gitlab/arturbosch/detekt/api/RuleInstance;Ljava/util/List;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="102"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renderIssue" desc="(Lkotlinx/html/FlowContent;Lio/gitlab/arturbosch/detekt/api/Issue;)V" line="162"><counter type="INSTRUCTION" missed="1" covered="111"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getComplexityMetrics" desc="(Lio/gitlab/arturbosch/detekt/api/Detektion;)Ljava/util/List;" line="182"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="590"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="0" covered="89"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/SUMMARY" sourcefilename="HtmlOutputReport.kt"><method name="&lt;init&gt;" desc="(Ljava/util/Map;Lkotlinx/html/TagConsumer;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getConsumer" desc="()Lkotlinx/html/TagConsumer;" line="193"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport$renderRule$1$1" sourcefilename="HtmlOutputReport.kt"><method name="invoke" desc="(Lio/github/detekt/report/html/SUMMARY;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/detekt/report/html/HtmlOutputReport$renderIssues$lambda$12$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/github/detekt/report/html/HtmlOutputReport$renderGroup$$inlined$sortedBy$1" sourcefilename="Comparisons.kt"/><class name="io/github/detekt/report/html/HtmlUtilsKt" sourcefilename="HtmlUtils.kt"><method name="snippetCode" desc="(Lkotlinx/html/FlowContent;Lio/gitlab/arturbosch/detekt/api/Rule$Name;Lkotlin/sequences/Sequence;Lio/gitlab/arturbosch/detekt/api/SourceLocation;I)V" line="27"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="writeErrorLine" desc="(Lkotlinx/html/FlowContent;Ljava/lang/String;II)I" line="56"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="showError" desc="(Lkotlinx/html/FlowContent;Lio/gitlab/arturbosch/detekt/api/Rule$Name;Ljava/lang/Throwable;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createReportUrl" desc="(Lio/gitlab/arturbosch/detekt/api/Rule$Name;Ljava/lang/Throwable;)Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="printStackTraceString" desc="(Ljava/lang/Throwable;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="311"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Comparisons.kt"/><sourcefile name="HtmlUtils.kt"><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="33" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="4"/><line nr="40" mi="0" ci="11" mb="0" cb="2"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="13" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="13" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="311"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HtmlOutputReport.kt"><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="3" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="16" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="3" ci="21" mb="1" cb="1"/><line nr="70" mi="5" ci="15" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="37" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="26" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="37" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="11" mb="0" cb="0"/><line nr="135" mi="0" ci="47" mb="0" cb="0"/><line nr="136" mi="0" ci="14" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="26" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="15" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="18" mb="1" cb="3"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="20" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="1" ci="8" mb="2" cb="2"/><line nr="171" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="1" cb="1"/><line nr="176" mi="0" ci="20" mb="0" cb="0"/><line nr="177" mi="0" ci="13" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="9" mb="0" cb="2"/><line nr="185" mi="8" ci="0" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="13" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="723"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="99"/><counter type="COMPLEXITY" missed="8" covered="26"/><counter type="METHOD" missed="3" covered="23"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><counter type="INSTRUCTION" missed="27" covered="1034"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="2" covered="159"/><counter type="COMPLEXITY" missed="8" covered="34"/><counter type="METHOD" missed="3" covered="28"/><counter type="CLASS" missed="0" covered="8"/></package><counter type="INSTRUCTION" missed="7556" covered="90270"/><counter type="BRANCH" missed="1779" covered="7103"/><counter type="LINE" missed="680" covered="12584"/><counter type="COMPLEXITY" missed="2128" covered="6720"/><counter type="METHOD" missed="425" covered="3965"/><counter type="CLASS" missed="26" covered="950"/></report>